<?xml version="1.0" encoding="US-ASCII"?>
<ConfigRoot Version="116" ConfigHash="15aba2c5fbe7c379771b3961c3f3eaea">
    <VirtualHosts/>
    <SslCertificates>
        <SslCertificate Id="-1000">
            <ServerCertificate>-----BEGIN CERTIFICATE-----
MIIDizCCAnOgAwIBAgIJAMQE1QewYs4QMA0GCSqGSIb3DQEBCwUAMFwxCzAJBgNV
BAYTAkNIMQ8wDQYDVQQIDAZadXJpY2gxDzANBgNVBAcMBlp1cmljaDEQMA4GA1UE
CgwHQWlybG9jazEZMBcGA1UEAwwQdGVzdC5jZXJ0aWZpY2F0ZTAeFw0xNjAyMTYx
NTE4NTZaFw0yNjAyMTUxNTE4NTZaMFwxCzAJBgNVBAYTAkNIMQ8wDQYDVQQIDAZa
dXJpY2gxDzANBgNVBAcMBlp1cmljaDEQMA4GA1UECgwHQWlybG9jazEZMBcGA1UE
AwwQdGVzdC5jZXJ0aWZpY2F0ZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAMtPaJ5q3HFeui6iKe5i9gBjAuZwbZ5a05MVbj0NnyCm6iOcuJOySUAPM2kF
JqUxrIXdz54xcilsKUoepQkn9e0bmIUVuiXWcQrr8iqjYC+hINNmiq+4YX4lWq2M
CeOSOpxrMPmvDX0kt+O9Qwr+6tTqzD5VKJDFvlrfJnYTQ4WXeiaG9SfgR06/+pSQ
+qDRWo7JmrVHcyv+3X0aRZ2JUP9cFy054GxF3dhRaZMZ7KdgjX5FkADY8MYiI2j5
9Q2SA8zBjfRfZlGCORm7vdwIzPbRRo19TMXeBoOOnO8XB/XWS+n/bBLkRYN+wcnf
tPZZuLggCQhRBVHy9ehKltkJMZkCAwEAAaNQME4wHQYDVR0OBBYEFP4M/uLWVuOh
8RkBDnlU5jJyR3cJMB8GA1UdIwQYMBaAFP4M/uLWVuOh8RkBDnlU5jJyR3cJMAwG
A1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAKItccRGDcX9pdkiHv/1PQtb
ykmxAMseVYt/6kJl3yUUd/tDTaAR4CHTvkX+4waMpnhToJ3SN9qNtbzID1/67X6D
9RQAaiXiJ0Y+/Z6cWY/Rx3HiWsgcJN7F0Xux6wR5gdX/oSCqxyomxR42Ovs61bjx
77RRptcoQJPvw50z9rJ4wkrb58raUKOqxgvpckQdYdtok0dR6tXbBfC4LHmqq0mo
Q4ph1jI/QLl5lsYtDm4SLt1ALvgRQj8QerJdZ/SrmfFmUkOx3lGpBChM0lT+wkrI
aw/GIcvwLSquzFBrlU3Jhg+wu8p/514lgiShy39fmzMOa3Q0/5jF3qM74+lGUsA=
-----END CERTIFICATE-----
</ServerCertificate>
            <CertificateChain></CertificateChain>
            <PrivateKey>-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAy09onmrccV66LqIp7mL2AGMC5nBtnlrTkxVuPQ2fIKbqI5y4
k7JJQA8zaQUmpTGshd3PnjFyKWwpSh6lCSf17RuYhRW6JdZxCuvyKqNgL6Eg02aK
r7hhfiVarYwJ45I6nGsw+a8NfSS3471DCv7q1OrMPlUokMW+Wt8mdhNDhZd6Job1
J+BHTr/6lJD6oNFajsmatUdzK/7dfRpFnYlQ/1wXLTngbEXd2FFpkxnsp2CNfkWQ
ANjwxiIjaPn1DZIDzMGN9F9mUYI5Gbu93AjM9tFGjX1Mxd4Gg46c7xcH9dZL6f9s
EuRFg37Byd+09lm4uCAJCFEFUfL16EqW2QkxmQIDAQABAoIBAFBc7hyYXtSNPgjK
3so04cpbWL0fuaS7gCAGe5G0fa7Za3lyLF9tPJkOqSKc/56SmQA9IiEEqHyJHXUH
0fJhkksL+mi4ouDr97j6dLm35IBPL3uAb9dviVHkkAhDb3E9zt8fW7eGI03RIsLp
f8Or6cUJnnwRCzzWfRzMUhagHLOD7RFVtbfj9jIB/OLGRhsSXzdL2a0O23QWHg1i
z+lgEhh60cVKJos2u8pCKtPpYQmnMmRnEkPTLEWoJGqb0HLnLDGwYAauWo6Wj0SB
HugxdBdU0zWB4cavkD5Jkw4jJUvIij7HruqGirnsuXLZCRWMx4UvWvAmx6gij93z
MQbU7BECgYEA8Fzc3WfWJdyiOcxwz4PW16gtrCpL2dvHZnpPrwwm/99a3lgLDwqx
5DUb9LjQDkfNYzZV/VQXgfyQqMeBnQSoGQ6GzeeoAOGJmcf+R2NJrCQ8zme3AXDr
QH/YzRk+STjU8eMWKi+e3PcVGoR2eRmYtIy1xCuRcyr3877ONUN9enUCgYEA2Ilz
oY/vlgbw97q+Vc+gGH3s93UlyoSHGEPCOY3gQvzp6EL3ONCxAlqQke921VxDEaiK
TYUQaS0J/hPBlKzYLWZ6sPV6vI9bKOjOb7qWqtwyO/smyCixNJQmsYyOzTx88ucF
lTuTEhL3EyPnyWj5iEGaHiDy14vdyV0XKEvkzhUCgYBUaciHWTg0A9BVTB8yQbLp
+f5QQGpzEGRu8PWbHEF2CxL2kyUPG0puQtiWkXFAEqdm+GYqmaXH2NNU8vvqEQCY
DCn7lifCZ3LTtxDuMUhmVDOmqXXz45w7Aqs5HGxrerIOYRofpqm8IGog7fRNg1fF
0MTlKAfk0mpSB+iTfChNIQKBgQCbp0KtkpAA4oB5M436lUNaF7strtI5n8aU1LBb
OvdIcBGcWfboqmtza7KclOxxNt8nZGX2j35afHvAXmc6/nxvNklfxzYxMUOwRpmO
iywfKiYaI9Ge9FFdoFmoK4fDVIXk/dhvi+GOjn95DMhjachl//JPUhP+iZYmV3p8
BwI0eQKBgQDr7Rt/1IGZ0KKYeVgXlLdBsObxtpn/GxObPCrQL2rjfYVvdDOsZ4k4
KFoj0GqRnTAu27N+YTFtWGNxAw/eaGAFy5gQrRcls/vg4mucEFbL+8gvOcbaYbWT
9n/WaBTH3OQwJffdQSP8TD/BhyIz7AV0FIs1ANF4XlggOraL8VBPVg==
-----END RSA PRIVATE KEY-----</PrivateKey>
            <PrivateKeyPlain>-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAy09onmrccV66LqIp7mL2AGMC5nBtnlrTkxVuPQ2fIKbqI5y4
k7JJQA8zaQUmpTGshd3PnjFyKWwpSh6lCSf17RuYhRW6JdZxCuvyKqNgL6Eg02aK
r7hhfiVarYwJ45I6nGsw+a8NfSS3471DCv7q1OrMPlUokMW+Wt8mdhNDhZd6Job1
J+BHTr/6lJD6oNFajsmatUdzK/7dfRpFnYlQ/1wXLTngbEXd2FFpkxnsp2CNfkWQ
ANjwxiIjaPn1DZIDzMGN9F9mUYI5Gbu93AjM9tFGjX1Mxd4Gg46c7xcH9dZL6f9s
EuRFg37Byd+09lm4uCAJCFEFUfL16EqW2QkxmQIDAQABAoIBAFBc7hyYXtSNPgjK
3so04cpbWL0fuaS7gCAGe5G0fa7Za3lyLF9tPJkOqSKc/56SmQA9IiEEqHyJHXUH
0fJhkksL+mi4ouDr97j6dLm35IBPL3uAb9dviVHkkAhDb3E9zt8fW7eGI03RIsLp
f8Or6cUJnnwRCzzWfRzMUhagHLOD7RFVtbfj9jIB/OLGRhsSXzdL2a0O23QWHg1i
z+lgEhh60cVKJos2u8pCKtPpYQmnMmRnEkPTLEWoJGqb0HLnLDGwYAauWo6Wj0SB
HugxdBdU0zWB4cavkD5Jkw4jJUvIij7HruqGirnsuXLZCRWMx4UvWvAmx6gij93z
MQbU7BECgYEA8Fzc3WfWJdyiOcxwz4PW16gtrCpL2dvHZnpPrwwm/99a3lgLDwqx
5DUb9LjQDkfNYzZV/VQXgfyQqMeBnQSoGQ6GzeeoAOGJmcf+R2NJrCQ8zme3AXDr
QH/YzRk+STjU8eMWKi+e3PcVGoR2eRmYtIy1xCuRcyr3877ONUN9enUCgYEA2Ilz
oY/vlgbw97q+Vc+gGH3s93UlyoSHGEPCOY3gQvzp6EL3ONCxAlqQke921VxDEaiK
TYUQaS0J/hPBlKzYLWZ6sPV6vI9bKOjOb7qWqtwyO/smyCixNJQmsYyOzTx88ucF
lTuTEhL3EyPnyWj5iEGaHiDy14vdyV0XKEvkzhUCgYBUaciHWTg0A9BVTB8yQbLp
+f5QQGpzEGRu8PWbHEF2CxL2kyUPG0puQtiWkXFAEqdm+GYqmaXH2NNU8vvqEQCY
DCn7lifCZ3LTtxDuMUhmVDOmqXXz45w7Aqs5HGxrerIOYRofpqm8IGog7fRNg1fF
0MTlKAfk0mpSB+iTfChNIQKBgQCbp0KtkpAA4oB5M436lUNaF7strtI5n8aU1LBb
OvdIcBGcWfboqmtza7KclOxxNt8nZGX2j35afHvAXmc6/nxvNklfxzYxMUOwRpmO
iywfKiYaI9Ge9FFdoFmoK4fDVIXk/dhvi+GOjn95DMhjachl//JPUhP+iZYmV3p8
BwI0eQKBgQDr7Rt/1IGZ0KKYeVgXlLdBsObxtpn/GxObPCrQL2rjfYVvdDOsZ4k4
KFoj0GqRnTAu27N+YTFtWGNxAw/eaGAFy5gQrRcls/vg4mucEFbL+8gvOcbaYbWT
9n/WaBTH3OQwJffdQSP8TD/BhyIz7AV0FIs1ANF4XlggOraL8VBPVg==
-----END RSA PRIVATE KEY-----</PrivateKeyPlain>
            <RootCaComment></RootCaComment>
            <Comment>This is Airlock's built-in default certificate</Comment>
            <VirtualHostIds/>
            <SslVpnHostIds/>
        </SslCertificate>
    </SslCertificates>
    <Nodes>
        <Node Id="1">
            <HostNameDHCPInterface></HostNameDHCPInterface>
            <HostName>airlock-waf</HostName>
            <SkinName>skinBlue</SkinName>
            <PublicKey>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCvdColj+rrhSf4eIFjK1gumc2/Pel5gH0sK/w4XTRBoDI7xWFUCPd9mfOA4cNOnX+DPdxicZYGFijOMw2pNv/3GdAhyQS3Do7pA1MOLGLg1VxbFyT8p0pFiupe/yc0gyp9TvOQQ3PbmEJJjHLqfuWrQ2uIPpMlPO5trX99ruvsfgSB+1RftrUr+5NMG0fxttHQmWe7HPJ1WioX45cfOtCBaxJ75BPQBZlrzIeJa+jjvrRNBJhb2Dy1fsGe+/Y2cEE0D1GlYHZ1ESs7I3/yiwuAcBtLD/4j2AP9IYYRdSNCyNGSdY6wbXBQi9aiUqcTGcgvORhcDKOVlHqoSGgfypm/ Airlock remote activation (airlock-waf)
</PublicKey>
            <NodeInformationComment></NodeInformationComment>
            <PhysicalNetworkInterfaces>
                <PhysicalNetworkInterface>
                    <LogicalName>INTERNAL</LogicalName>
                    <InterfaceName>enp0s3</InterfaceName>
                    <SpeedMode></SpeedMode>
                    <MTU>1500</MTU>
                    <DhcpEnabled>false</DhcpEnabled>
                    <Comment></Comment>
                </PhysicalNetworkInterface>
            </PhysicalNetworkInterfaces>
            <BondingNetworkInterfaces/>
            <VirtualNetworkInterfaces/>
            <BackendAddresses>
                <BackendAddress>
                    <LogicalName>INTERNAL</LogicalName>
                    <IpAddress>192.168.99.50/24</IpAddress>
                    <Comment></Comment>
                </BackendAddress>
            </BackendAddresses>
            <FailoverAddresses/>
            <ManagementAddresses>
                <ManagementAddress>
                    <LogicalName>INTERNAL</LogicalName>
                    <IpAddress>192.168.99.50/24</IpAddress>
                    <SslCertificateId>-1000</SslCertificateId>
                    <Comment></Comment>
                </ManagementAddress>
            </ManagementAddresses>
        </Node>
    </Nodes>
    <Reports>
        <Report Id="4">
            <SendEmails>false</SendEmails>
        </Report>
    </Reports>
    <GlobalSettings>
        <GlobalSetting Id="2">
            <GlobalAccessDeniedUrl>/auth/login</GlobalAccessDeniedUrl>
            <DNSServersDHCPInterface></DNSServersDHCPInterface>
            <DefaultDNSDomain></DefaultDNSDomain>
            <DNSServers></DNSServers>
            <DnsComment></DnsComment>
            <NTPClientMode>NONE</NTPClientMode>
            <NtpComment></NtpComment>
            <SNMPMode>NONE</SNMPMode>
            <SNMPCommunity>public</SNMPCommunity>
            <SnmpComment></SnmpComment>
            <ErrorPagePath>/error_path</ErrorPagePath>
            <IcapComment></IcapComment>
            <KerberosComment></KerberosComment>
            <AllowedNetworkEndpointsComment></AllowedNetworkEndpointsComment>
            <LogLevel>Info</LogLevel>
            <MailHosts></MailHosts>
            <MailHostsComment></MailHostsComment>
            <LogHosts/>
            <ReportingLocalEnabled>true</ReportingLocalEnabled>
            <ReportingRemoteEnabled>false</ReportingRemoteEnabled>
            <ReportingRemoteUrl></ReportingRemoteUrl>
            <ReportingComment></ReportingComment>
            <EventNotificationChannelsComment></EventNotificationChannelsComment>
            <LogLevelComment></LogLevelComment>
            <TrackSessionsBasedOn>cookie</TrackSessionsBasedOn>
            <SessionTimeout>600</SessionTimeout>
            <SessionLifetime>28800</SessionLifetime>
            <RestrictSessionsPerIp>true</RestrictSessionsPerIp>
            <SessionRestrictionLimitPerIp>1500</SessionRestrictionLimitPerIp>
            <SessionRestrictionWhitelistIpPattern>
                <Name>SessionRestrictionWhitelistPattern</Name>
                <Comment></Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString>^$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-1</DefaultId>
                <IpAddressRange></IpAddressRange>
            </SessionRestrictionWhitelistIpPattern>
            <SessionAirlockSessionTrackingComment></SessionAirlockSessionTrackingComment>
            <SessionAirlockCookiesComment></SessionAirlockCookiesComment>
            <SessionApplicationCookiesComment></SessionApplicationCookiesComment>
            <SessionDoSMitigationComment></SessionDoSMitigationComment>
            <AccessControlComment></AccessControlComment>
            <SessionCookieName>AL_SESS</SessionCookieName>
            <LbCookieName>AL_BALANCE</LbCookieName>
            <CsrfTokenName>CSRFT759</CsrfTokenName>
            <CookieStoreDomainInterpretation>true</CookieStoreDomainInterpretation>
            <EncryptedCookiePassphrase>y414mBflwziiKTXh1PwhvAi6uNQCDjv4qHn15TnYdhs8xyjDKLmi2DjqtGZ1og4tab5WbflVfaZPQc8GU7eLupApAHCVQhpGBFIE</EncryptedCookiePassphrase>
            <License></License>
            <LicenseComment></LicenseComment>
            <ExpertSettingsSgEnabled>false</ExpertSettingsSgEnabled>
            <ExpertSettingsSg></ExpertSettingsSg>
            <ExpertSettingsSgComment></ExpertSettingsSgComment>
            <ExpertSettingsApacheEnabled>false</ExpertSettingsApacheEnabled>
            <ExpertSettingsApache></ExpertSettingsApache>
            <ExpertSettingsApacheComment></ExpertSettingsApacheComment>
            <DefaultGateway></DefaultGateway>
            <DefaultGatewayDHCPInterface></DefaultGatewayDHCPInterface>
            <DestinationRoutesFromDHCPEnabled>false</DestinationRoutesFromDHCPEnabled>
            <SourceRoutesFromDHCPEnabled>false</SourceRoutesFromDHCPEnabled>
        </GlobalSetting>
    </GlobalSettings>
    <BackendGroups>
        <BackendGroup Id="5">
            <Name>Kubernetes</Name>
            <Comment></Comment>
            <BackendLoadBalancingComment></BackendLoadBalancingComment>
            <MappingIds/>
            <BackendHosts>
                <BackendHost>
                    <Port>0</Port>
                    <TransportProtocol>HTTP</TransportProtocol>
                    <Address>${MY_KUBERNETES_IP}</Address>
                    <Comment></Comment>
                    <Status>ENABLED</Status>
                    <Spare>false</Spare>
                    <Weight>100</Weight>
                </BackendHost>
            </BackendHosts>
            <AccessComment></AccessComment>
            <KerberosEnvironmentId>-1</KerberosEnvironmentId>
            <BackendFailureDetectionInBandEnabled>false</BackendFailureDetectionInBandEnabled>
            <BackendFailureDetectionInBandComment></BackendFailureDetectionInBandComment>
            <BackendFailureDetectionInBandStatusPattern>
                <PatternString>^503$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
                <Enabled>true</Enabled>
            </BackendFailureDetectionInBandStatusPattern>
            <BackendFailureDetectionInBandCheckResponseContent>false</BackendFailureDetectionInBandCheckResponseContent>
            <BackendFailureDetectionInBandContentTypePattern>
                <PatternString>^(text|application)/(html|xhtml)</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </BackendFailureDetectionInBandContentTypePattern>
            <BackendFailureDetectionInBandMaxContentSize>512</BackendFailureDetectionInBandMaxContentSize>
            <BackendFailureDetectionInBandContentPattern>
                <PatternString>Service Unavailable</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </BackendFailureDetectionInBandContentPattern>
            <BackendFailureDetectionOutOfBandEnabled>false</BackendFailureDetectionOutOfBandEnabled>
            <BackendFailureDetectionOutOfBandComment></BackendFailureDetectionOutOfBandComment>
            <BackendFailureDetectionOutOfBandUrl>/</BackendFailureDetectionOutOfBandUrl>
            <BackendFailureDetectionOutOfBandCheckIntervalGood>5</BackendFailureDetectionOutOfBandCheckIntervalGood>
            <BackendFailureDetectionOutOfBandFailureCountToBad>3</BackendFailureDetectionOutOfBandFailureCountToBad>
            <BackendFailureDetectionOutOfBandCheckIntervalBad>3</BackendFailureDetectionOutOfBandCheckIntervalBad>
            <BackendFailureDetectionOutOfBandSuccessCountToGood>3</BackendFailureDetectionOutOfBandSuccessCountToGood>
            <BackendFailureDetectionOutOfBandTimeout>2</BackendFailureDetectionOutOfBandTimeout>
            <BackendFailureDetectionOutOfBandStatusPattern>
                <PatternString>^503$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
                <Enabled>true</Enabled>
            </BackendFailureDetectionOutOfBandStatusPattern>
            <BackendFailureDetectionOutOfBandContentPattern>
                <PatternString>Service Unavailable</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
                <Enabled>false</Enabled>
            </BackendFailureDetectionOutOfBandContentPattern>
            <ExpertSettingsSgEnabled>false</ExpertSettingsSgEnabled>
            <ExpertSettingsSg></ExpertSettingsSg>
            <ExpertSettingsSgComment></ExpertSettingsSgComment>
        </BackendGroup>
    </BackendGroups>
    <EtcHosts/>
    <NotificationChannels/>
    <IcapServices/>
    <KerberosEnvironments/>
    <AllowedNetworkEndpoints/>
    <Mappings/>
    <Routes/>
    <SourceRoutes/>
    <RoutesV6>
        <RouteV6 Id="6">
            <DefaultGateway></DefaultGateway>
        </RouteV6>
    </RoutesV6>
    <SourceRoutesV6/>
    <DenyRules>
        <DenyRule Id="-2049">
            <Name>(default HTML_001a) HTML tag in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30023</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HTML_001a) HTML tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;!?[a-z0-9]+[/\h\v].*(?&lt;=[\h\v'&quot;`/:])[a-z][a-z0-9._\-]{2,}[\h\v]*=.{3}
&lt;!?(?:s(?:cript|tyle)|picture|math)[>/\h\v]
&lt;!--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-428</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2050">
            <Name>(default HTML_001b) HTML tag in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30024</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default HTML_001b) HTML tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;!?[a-z0-9]+[/\h\v].*(?&lt;=[\h\v'&quot;`/:])[a-z][a-z0-9._\-]{2,}[\h\v]*=.{3}
&lt;!?(?:s(?:cript|tyle)|picture|math)[>/\h\v]
&lt;!--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-914</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2051">
            <Name>(default HTML_001c) HTML tag in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30025</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default HTML_001c) HTML tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;!?[a-z0-9]+[/\h\v].*(?&lt;=[\h\v'&quot;`/:])[a-z][a-z0-9._\-]{2,}[\h\v]*=.{3}
&lt;!?(?:s(?:cript|tyle)|picture|math)[>/\h\v]
&lt;!--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-217</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2052">
            <Name>(default HTML_003a) HTML attribute in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30023</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HTML_003a) HTML attribute in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>['&quot;](*COMMIT).*(?&lt;=[\h\v'&quot;`/:])[a-z\-]{3,}[\h\v]*=[^=>]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-429</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2053">
            <Name>(default HTML_003b) HTML attribute in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30024</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 1</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Content-Type$
^Sec-Metadata$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-808</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default HTML_003b) HTML attribute in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>['&quot;](*COMMIT).*(?&lt;=[\h\v'&quot;`/:])[a-z\-]{3,}[\h\v]*=[^=>]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-915</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2055">
            <Name>(default XSS_020a) Injection in link attributes in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_020a) Injection in link attributes</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|[(;&quot;'])[\h\v]*+(?:(?:j[\h\v]*+a[\h\v]*+v[\h\v]*+a[\h\v]*+s[\h\v]*+c[\h\v]*+r[\h\v]*+i[\h\v]*+p[\h\v]*+t)|(?:j[\h\v]*+a[\h\v]*+r)|(?:r[\h\v]*+e[\h\v]*+s[\h\v]*+o[\h\v]*+u[\h\v]*+r[\h\v]*+c[\h\v]*+e)|(?:p[\h\v]*+r[\h\v]*+o[\h\v]*+x[\h\v]*+y)|(?:f[\h\v]*+e[\h\v]*+e[\h\v]*+d))[\h\v]*+:
(?:[\h\v]*+d[\h\v]*+a[\h\v]*+t[\h\v]*+a[\h\v]*+:)(?!image/(?!(?:[\h\v]*+s[\h\v]*+v[\h\v]*+g))).*(?:[\h\v]*+;[\h\v]*+b[\h\v]*+a[\h\v]*+s[\h\v]*+e[\h\v]*+6[\h\v]*+4)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-430</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2056">
            <Name>(default XSS_020b) Injection in link attributes in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_020b) Injection in link attributes</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|[(;&quot;'])[\h\v]*+(?:(?:j[\h\v]*+a[\h\v]*+v[\h\v]*+a[\h\v]*+s[\h\v]*+c[\h\v]*+r[\h\v]*+i[\h\v]*+p[\h\v]*+t)|(?:j[\h\v]*+a[\h\v]*+r)|(?:r[\h\v]*+e[\h\v]*+s[\h\v]*+o[\h\v]*+u[\h\v]*+r[\h\v]*+c[\h\v]*+e)|(?:p[\h\v]*+r[\h\v]*+o[\h\v]*+x[\h\v]*+y)|(?:f[\h\v]*+e[\h\v]*+e[\h\v]*+d))[\h\v]*+:
(?:[\h\v]*+d[\h\v]*+a[\h\v]*+t[\h\v]*+a[\h\v]*+:)(?!image/(?!(?:[\h\v]*+s[\h\v]*+v[\h\v]*+g))).*(?:[\h\v]*+;[\h\v]*+b[\h\v]*+a[\h\v]*+s[\h\v]*+e[\h\v]*+6[\h\v]*+4)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-916</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2058">
            <Name>(default XSS_025a) Refresh rate manipulation in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_025a) Refresh rate manipulation</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>;[\h\v]*+url[\h\v]*+=[\h\v'&quot;]*+[a-z]{3,15}:</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-431</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2059">
            <Name>(default XSS_025b) Refresh rate manipulation in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_025b) Refresh rate manipulation</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>;[\h\v]*+url[\h\v]*+=[\h\v'&quot;]*+[a-z]{3,15}:</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-917</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2061">
            <Name>(default XSS_030a) JavaScript in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_030a) JavaScript in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_non_possessive>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*)
    (?&lt;mand_space>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])++)
    (?&lt;js_comment>(?:/\*.*?\*/|//[^\v]*+[\v]))
    (?&lt;opt_spaces_including_left_paren>(?:[\h\v(]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_including_right_paren>(?:[\h\v)]|/\*.*?\*/|//[^\v]*+[\v])*+)
)^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces_non_possessive)(?:[;+\-*/%~?=&lt;>|&amp;:!\v[)}{(]|(?:=(?:(?&amp;opt_spaces)[0-9ex!.\-+~]*+(?&amp;opt_spaces)(?:true|false|Infinity)?)|@[^,;.!?()\-]+(?&amp;mand_space)))(?:.*(?:[;+\-*/%~?=&lt;>|&amp;:!\v[)}{(]|(?:=(?:(?&amp;opt_spaces)[0-9ex!.\-+~]*+(?&amp;opt_spaces)(?:true|false|Infinity)?)|@[^,;.!?()\-]+(?&amp;mand_space))))?(?&amp;opt_spaces)
(?:
    (?:[\-_\p{L}\p{N}$`]*+\.)*
    (?:
        (?:S(?:VG(?:(?:(?:(?:F(?:E(?:D(?:i(?:s(?:placementMap|tantLight)|ffuseLighting)|ropShadow)|Co(?:mpo(?:nentTransfer|site)|(?:nvolve|lor)Matrix)|M(?:erg(?:eNod)?e|orphology)|Sp(?:ecularLighting|otLight)|(?:T(?:urbulenc|il)|Imag)e|(?:PointLigh|Offse)t|F(?:unc[ABGR]|lood)|GaussianBlur|Blend)|o(?:nt(?:Face(?:Format|Name|Src|Uri)?)?|reignObject)|ilter)|C(?:omponentTransferFunction|lipPath|ircle|ursor)|G(?:ra(?:dient|phics)|lyph(?:Ref)?|eometry)?|HKern|Image)Ele|D(?:(?:e(?:fs|sc)|iscard)Ele|ocu))men|S(?:(?:(?:crip|e)t|witch|ymbol|VG)Elemen|t(?:(?:yle|op)Elemen|ringLis))|R(?:e(?:c(?:tElemen)?|nderingInten)|adialGradientElemen))t|P(?:at(?:h(?:Seg(?:C(?:urveto(?:Quadratic(?:Smooth(?:Abs|Rel)|Abs|Rel)|Cubic(?:Smooth(?:Abs|Rel)|Abs|Rel))|losePath)|Li(?:neto(?:Horizontal(?:Abs|Rel)|Vertical(?:Abs|Rel)|Abs|Rel)|st)|Moveto(?:Abs|Rel)|Arc(?:Abs|Rel))?|Element)|ternElement)|o(?:ly(?:line|gon)Elemen|in(?:tLis)?)t|reserveAspectRatio)|A(?:n(?:imat(?:e(?:d(?:(?:Enumeratio|Boolea)n|(?:TransformLis|Rec)t|PreserveAspectRatio|Length(?:List)?|Number(?:List)?|Integer|String|Angle)|(?:Transform|Motion)?Element)|ionElement)|gle)|(?:ltGlyph(?:Item|Def)?)?Element)|T(?:(?:ext(?:P(?:ositioning|ath)|Content)?|Span|itle)Element|ransform(?:List)?)|M(?:(?:(?:issingGlyp|Pat)h|etadata)Element|a(?:(?:rker|sk)Element|trix))|L(?:ine(?:arGradient)?Element|ength(?:List)?)|El(?:ement(?:Instance)?|lipseElement)|V(?:iew(?:Element|Spec)|KernElement)|U(?:seElement|nitTypes)|Zoom(?:AndPan|Event)|Number(?:List)?)|t(?:yleShee(?:tLis)?t|orage(?:Event)?|ring)|cr(?:iptProcessorNode|ollAreaEvent|een)|peechSynthesis(?:Utterance|Event)|(?:impleGesture|martCard)Event|ha(?:redWorker|dowRoot)|e(?:lection|t)|yntaxError)|H(?:TML(?:(?:(?:T(?:able(?:C(?:(?:el|o)l|aption)|Section|Row)?|e(?:mplate|xtArea)|i(?:tl|m)e|rack)|M(?:e(?:nu(?:Item)?|t(?:er|a)|dia)|a(?:rquee|p)|od)|S(?:(?:crip|elec)t|(?:ourc|tyl)e|hadow|pan)|I(?:(?:Fram|mag)e|nput)|H(?:ead(?:ing)?|tml|R)|L(?:egend|abel|ink|I)|B(?:utton|ase|ody|R)|U(?:nknown|List)|(?:Embed)?|Keygen|Quote|Video)Ele|D(?:(?:i(?:rectory|v)|ata(?:List)?|List)Ele|ocu))ment|F(?:o(?:rm(?:ControlsCollection|Element)|ntElement)|(?:rame(?:Set)?|ieldSet)Element)|O(?:pt(?:ion(?:sCollection|Element)|GroupElement)|(?:bjec|utpu|Lis)tElement)|P(?:r(?:o(?:pertiesCollection|gressElement)|eElement)|ara(?:graph|m)Element)|A(?:(?:nchor|pplet|udio|rea)Element|llCollection)|C(?:o(?:ntentElement|llection)|anvasElement))|ashChangeEvent|istory)|C(?:SS(?:(?:(?:(?:Charse|Impor)t|Keyframes?|FontFace|Unknown|Media)Rul|P(?:rimitiveValu|ageRul))e|Style(?:Declaration|Sheet|Rule)|V(?:alue(?:List)?|iewportRule)|Rule(?:List)?|2Properties)?|o(?:m(?:m(?:andEv)?|positionEv)ent|n(?:volverNod|sol)e|unter)|a(?:nvas(?:RenderingContext2D|Gradient|Pattern)|retPosition)|(?:l(?:i(?:entRec(?:tLis)?|pboardEven)|oseEven)|ustomEven)t|ha(?:nnel(?:Splitt|Merg)erNode|racterData)|DATASection|rypto)|D(?:OM(?:S(?:tring(?:List|Map)|ettableTokenList)|Re(?:ct(?:ReadOnly|List)?|quest)|P(?:oint(?:ReadOnly)?|arser)|T(?:ransactionEven|okenLis)t|E(?:xception|rror)|(?:MMIErr|Curs)or|Implementation|Quad)|e(?:vice(?:(?:(?:Orienta|Mo)tion|Proximity|Light)Event|Storage(?:ChangeEvent)?)|sktopNotification(?:Center)?|layNode)|at(?:a(?:Transfer(?:ItemList)?|Channel|View)|e)|ocument(?:Fragment|Type)?|ynamicsCompressorNode|ragEvent)|w(?:ebkit(?:C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|onvertPointFrom(?:NodeToPag|PageToNod)e)|R(?:e(?:quest(?:AnimationFrame|FileSystem)|solveLocalFileSystemURL)|TCPeerConnection)|IDB(?:(?:ObjectStor|Databas|KeyRang)e|Transaction|Factory|Request|Cursor|Index)|Speech(?:Recognition(?:E(?:rror|vent))?|Grammar(?:List)?)|Exit(?:PointerLock|Fullscreen)|(?:Offline)?AudioContext|MediaStream|URL)|rite(?:ln)?|indow)|M(?:e(?:dia(?:S(?:tream(?:Audio(?:Destination|Source)Node|Event|Track)?|ource)|E(?:lementAudioSourceNode|rror)|KeyE(?:rror|vent)|(?:Query)?List|Recorder)|ssage(?:(?:Even|Por)t|Channel))|o(?:z(?:(?:ContactChange|Application|Mms)Event|S(?:ms(?:Filter|Event)|ettingsEvent)|NamedAttrMap|PowerManager)|use(?:Scroll)?Event)|utation(?:Observer|Record|Event)|imeType(?:Array)?|ap)|c(?:reate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|a(?:ret(?:Position|Range)FromPoint|ncelAnimationFrame|ptureEvents)|o(?:n(?:t(?:ains|ent)|structor|firm)|mpareDocumentPosition)|l(?:ear(?:Interval|Timeout)?|o(?:neNod|s)e))|W(?:e(?:b(?:GL(?:Render(?:ingContext|buffer)|Shader(?:PrecisionFormat)?|(?:Frameb|B)uffer|UniformLocation|ContextEvent|VertexArray|ActiveInfo|Program|Texture)|Kit(?:CSS(?:(?:Filter(?:Valu|Rul)|TransformValu)e|Matrix)|(?:(?:Transi|Anima)tionEve|Poi)nt|MutationObserver|Gamepad)|Socket)|ak(?:Map|Set))|aveShaperNode|heelEvent|indow|orker)|I(?:DB(?:(?:VersionChangeEven|Reques)t|O(?:penDBRequest|bjectStore)|F(?:ileHandle|actory)|(?:Databas|KeyRang)e|Cursor(?:WithValue)?|Transaction|Index)|n(?:t(?:(?:16|32|8)Array|ernalError)|put(?:MethodContex|Even)t)|frame(?:Window|Proxy|Base)?|mage(?:Bitmap|Data)?|terator)|P(?:er(?:formance(?:(?:Resource)?Timing|M(?:easure|ark)|Navigation|Entry)?|iodicWave)|ro(?:(?:pertyNodeLis|gressEven)t|cessingInstruction|mise|xy)|a(?:(?:intReque(?:stLi)?s|geTransitionEven)t|nnerNode|th2D)|op(?:upBlocked|State)Event|honeNumberService|lugin(?:Array)?)|m(?:o(?:z(?:R(?:TC(?:(?:SessionDescrip|PeerConnec)tion|IceCandidate)|equestAnimationFrame)|C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|ontact)|ExitPointerLock|SetImageElement)|ve(?:By|To))|a(?:ybeRedirectForGBV|tchMedia))|A(?:u(?:dio(?:P(?:rocessingEvent|aram)|Buffer(?:SourceNode)?|(?:Destination)?Node|StreamTrack|Listener|Context)?|tocompleteErrorEvent)|pplicationCache(?:ErrorEvent)?|n(?:imationEvent|alyserNode)|rray(?:Buffer)?|ttr)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|(?:DefaultComputed|Override)Style|C(?:SSCanvasContext|omputedStyle)|I(?:nterface|tems)|MatchedCSSRules|Selection)|cscript)|T(?:ext(?:Track(?:Cue(?:List)?|List)?|E(?:ncoder|vent)|Decoder|Metrics)?|o(?:uch(?:(?:Even|Lis)t)?|olbarApi)|r(?:a(?:nsition|ck)Event|eeWalker)|ime(?:Ranges|Event)|ypeError)|R(?:TC(?:(?:PeerConnectionIce|DataChannel)Event|S(?:essionDescription|tatsReport)|IceCandidate)|e(?:c(?:ordErrorEven)?t|ferenceError|gExp)|ange(?:Error)?|GBColor)|X(?:ML(?:S(?:tylesheetProcessingInstruction|erializer)|HttpRequest(?:ProgressEvent|Upload)?|Document)|Path(?:E(?:xpression|valuator)|Result)|SLTProcessor)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|questAnimationFrame|gisterElement|size(?:By|To)|placeChild)|wt)|s(?:e(?:t(?:Resizable|Interval|Timeout)|lf)|croll(?:By(?:(?:Lin|Pag)es)?|To)?|howModalDialog|izeToContent|top)|N(?:o(?:t(?:if(?:yPaintEvent|ication)|ation)|de(?:(?:Iterato|Filte)r|List)?)|a(?:medNodeMap|vigator)|umber)|F(?:ile(?:Re(?:quest|ader)|Handle|Error|List)?|o(?:cusEvent|ntFace|rmData)|loat(?:32|64)Array|unction)|e(?:n(?:ableStyleSheetsForSet|codeURI(?:Component)?)|lementFromPoint|val(?:uate)?|xecCommand|scape)|O(?:(?:ffline(?:AudioCo(?:mpletionEven|ntex)|ResourceLis)|verflowEven|bjec)t|scillatorNode|ption)|U(?:int(?:8(?:Clamped)?|16|32)Array|R(?:L(?:SearchParams)?|IError)|(?:serProximity|I)Event)|E(?:v(?:ent(?:Source|Target)?|alError)|lem(?:entReplaceEv)?ent|rror(?:Event)?|xternal)|i(?:s(?:(?:(?:Equal|Same)Nod|DefaultNamespac|Finit)e|NaN)|(?:nsertBefor|mportNod)e)|B(?:a(?:tteryManager|rProp)|eforeUnloadEvent|iquadFilterNode|lob(?:Event)?|oolean)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|p(?:(?:ar(?:se(?:Floa|In)|en)|r(?:omp|in))t|ostMessage)|d(?:ecodeURI(?:Component)?|(?:ispatchEv|ocum)ent|ump)|a(?:d(?:dEventListener|optNode)|ppendChild|lert|tob)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|ome)|V(?:(?:alidityStat|TTCu)e|ideoStreamTrack)|Loc(?:a(?:lMediaStream|tion)|kedFile)|f(?:o(?:rward|cus)|unction|rames|ind)|o(?:pen(?:D(?:atabase|ialog))?|nblur)|Ga(?:mepad(?:Button|Event)?|inNode)|u(?:ne(?:scape|val)|pdateCommands)|lookup(?:NamespaceURI|Prefix)|Key(?:board)?Event|n(?:ormalize|ycli)|b(?:ack|lur|toa)|_gj(?:uc|h)|t(?:his|op))(?&amp;opt_spaces)[`(\]\[]|
        (?:o(?:n(?:p(?:o(?:inter(?:l(?:ock(?:change|error)|eave)|o(?:ver|ut)|cancel|enter|down|move|up)|pstate)|a(?:ge(?:hide|show)|(?:st|us)e)|lay(?:ing)?|rogress)|m(?:o(?:z(?:pointerlock(?:change|error)|fullscreen(?:change|error))|use(?:(?:lea|mo)ve|o(?:ver|ut)|enter|wheel|down|up))|essage)|w(?:ebkit(?:animation(?:iteration|start|end)|pointerlock(?:change|error)|fullscreen(?:change|error)|transitionend)|aiting|heel)|d(?:evice(?:(?:orienta|mo)tion|proximity|light)|r(?:ag(?:en(?:ter|d)|leave|start|over)?|op)|urationchange|blclick)|s(?:e(?:lect(?:ionchange|start)?|ek(?:ing|ed)|arch)|t(?:alled|orage)|u(?:spend|bmit)|croll|how)|c(?:an(?:play(?:through)?|cel)|o(?:ntextmenu|py)|u(?:echange|t)|l(?:ick|ose)|hange)|b(?:efore(?:p(?:aste|rint)|scriptexecute|c(?:opy|ut)|unload)|lur)|a(?:fter(?:scriptexecute|print)|utocomplete(?:error)?|bort)|(?:(?:volume|hash)chang|gotpointercaptur|o(?:ff|n)lin)e|lo(?:ad(?:ed(?:meta)?data|start)?|stpointercapture)|r(?:e(?:adystatechange|s(?:ize|et))|atechange)|t(?:(?:imeupdat|oggl)e|ransitionend)|fo(?:rm(?:change|input)|cus)|e(?:(?:mpti|nd)ed|rror)|u(?:serproximity|nload)|key(?:press|down|up)|in(?:valid|put))|uter(?:Height|Width)|ffscreenBuffering|wnerDocument|pen(?:er)?|sapi)|c(?:r(?:eate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|ypto)|l(?:o(?:s(?:ure_(?:lm_(?:102420|238531|693595|738932)|uid_(?:676336601|820998867)|memoize_cache_)|ed?)|neNode)|ientInformation|ear)|o(?:n(?:t(?:ent(?:Type)?|ains)|sole)|mpa(?:reDocumentPosition|tMode)|okie)|h(?:ild(?:ElementCount|Nodes|ren)|ar(?:acterS|s)et|rome)|a(?:retPositionFromPoint|ptureEvents)|urrentScript)|m(?:oz(?:(?:P(?:ointerLockEleme|aintCou)|SetImageEleme)nt|(?:AnimationStartTim|VisibilityStat)e|FullScreen(?:E(?:lement|nabled))?|In(?:nerScreen[XY]|dexedDB)|(?:CancelFullScre|Hidd)en|ExitPointerLock)|enubar)|w(?:ebkit(?:Full(?:ScreenKeyboardInputAllowed|screenE(?:lement|nabled))|(?:CurrentFullScreen|PointerLock)Element|I(?:sFullScreen|ndexedDB)|VisibilityState|StorageInfo|Hidden)|rite(?:ln)?|indow)|s(?:cr(?:oll(?:[XY]|Max[XY]|bars)|een(?:[XY]|Left|Top)?|ipts)|e(?:l(?:ectedStyle[Ss]heetSet|f)|ssionStorage)|t(?:yle(?:She(?:etS)?ets|Media)|atus(?:bar)?)|peechSynthesis|hindig|idebar)|C(?:SS(?:(?:(?:(?:NameSp|FontF)ac|Pag)e|C(?:ondition|harset)|M(?:ozDocument|edia)|S(?:upports|tyle)|Grouping|Import)Rule|Rule(?:List)?)?|(?:DATA_SECTION|OMMENT)_NODE|ontrollers)|l(?:o(?:ca(?:l(?:Storag|Nam)e|tion(?:bar)?)|okup(?:NamespaceURI|Prefix))|ast(?:(?:(?:Element)?Chil|Modifie)d|StyleSheetSet)|ink(?:Color|s)|ength|gt)|d(?:e(?:fault(?:[Ss]tatus|Charset|View)|vicePixelRatio|signMode)|o(?:c(?:ument(?:Element|URI)?|type)|main)|i(?:spatchEvent|r)|r(?:asil)?)|i(?:n(?:ner(?:Height|Width)|putEncoding|sertBefore|dexedDB)|m(?:p(?:lementation|ortNode)|ages)|s(?:DefaultNamespac|EqualNod)e|frame[rs])|DOCUMENT_(?:POSITION_(?:IMPLEMENTATION_SPECIFIC|(?:FOLLOW|PRECED)ING|CONTAIN(?:ED_BY|S)|DISCONNECTED)|(?:(?:FRAGMENT|TYPE)_)?NODE)|p(?:re(?:f(?:erredStyle[Ss]heetSet|ix)|viousSibling)|a(?:rent(?:Element|Node)?|ge[XY]Offset)|er(?:formance|sonalbar)|(?:lugin|o)s)|M(?:o(?:z(?:M(?:obileMessage(?:Manager|Thread)|msMessage)|Sms(?:SegmentInfo|Message)|CSSKeyframes?Rule)|dalContentWindow)|ath)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|Selection|Items)|oogle(?:apis)?|a(?:dgets|pi)|b(?:ar_?|qf))|a(?:pp(?:l(?:icationCache|ets)|endChild)|d(?:dEventListener|optNode)|l(?:inkColor|l)|ctiveElement|nchors)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|placeChild|adyState|ferrer)|ootElement)|e(?:(?:nableStyleSheetsForSe|lementFromPoin)t|x(?:ecCommand|ternal)|v(?:aluate|ent)|mbeds)|n(?:o(?:de(?:Valu|Nam|Typ)|rmaliz)e|a(?:mespaceURI|vigator)|e(?:xtSibling|tscape)|ycli)|f(?:irs(?:tElemen)?tChild|u(?:llScree|nctio)n|rame(?:Element|s)|o(?:nt|rm)s|gColor|p)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|_(?:_(?:gapi_jstiming__|commandLineAPI|jsaction|_jsl|PVT)|gjwl|loc|ss)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|i(?:story|dden)|plogo|ead)|I(?:1_14085(?:38546619|41122438)|n(?:stallTrigger|finity|tl))|(?:E(?:NTITY(?:_REFERENCE)?|LEMENT)|ATTRIBUTE)_NODE|P(?:ROCESSING_INSTRUCTION_NODE|ERSISTENT)|XPath(?:Expression|NSResolver|Result)|t(?:o(?:olbar|p)|extContent|itle|his)|S(?:to(?:pIteration|rage)|VGNumber)|xml(?:Standalone|Encoding|Version)|v(?:isibilityState|linkColor)|j(?:e(?:srScriptTags)?|sl)|b(?:aseURI|gColor|ody)|TE(?:MPORARY|XT_NODE)|N(?:OTATION_NODE|aN)|Window(?:Utils)?|undefined|Location|JSON|URL)(?&amp;opt_spaces_including_right_paren)(?:=|/\*)
    )
    |
    new(?&amp;mand_space)(?:S(?:VG(?:(?:(?:(?:F(?:E(?:D(?:i(?:s(?:placementMap|tantLight)|ffuseLighting)|ropShadow)|Co(?:mpo(?:nentTransfer|site)|(?:nvolve|lor)Matrix)|M(?:erg(?:eNod)?e|orphology)|Sp(?:ecularLighting|otLight)|(?:T(?:urbulenc|il)|Imag)e|(?:PointLigh|Offse)t|F(?:unc[ABGR]|lood)|GaussianBlur|Blend)|o(?:nt(?:Face(?:Format|Name|Src|Uri)?)?|reignObject)|ilter)|C(?:omponentTransferFunction|lipPath|ircle|ursor)|G(?:ra(?:dient|phics)|lyph(?:Ref)?|eometry)?|HKern|Image)Ele|D(?:(?:e(?:fs|sc)|iscard)Ele|ocu))men|S(?:(?:(?:crip|e)t|witch|ymbol|VG)Elemen|t(?:(?:yle|op)Elemen|ringLis))|R(?:e(?:c(?:tElemen)?|nderingInten)|adialGradientElemen))t|P(?:at(?:h(?:Seg(?:C(?:urveto(?:Quadratic(?:Smooth(?:Abs|Rel)|Abs|Rel)|Cubic(?:Smooth(?:Abs|Rel)|Abs|Rel))|losePath)|Li(?:neto(?:Horizontal(?:Abs|Rel)|Vertical(?:Abs|Rel)|Abs|Rel)|st)|Moveto(?:Abs|Rel)|Arc(?:Abs|Rel))?|Element)|ternElement)|o(?:ly(?:line|gon)Elemen|in(?:tLis)?)t|reserveAspectRatio)|A(?:n(?:imat(?:e(?:d(?:(?:Enumeratio|Boolea)n|(?:TransformLis|Rec)t|PreserveAspectRatio|Length(?:List)?|Number(?:List)?|Integer|String|Angle)|(?:Transform|Motion)?Element)|ionElement)|gle)|(?:ltGlyph(?:Item|Def)?)?Element)|T(?:(?:ext(?:P(?:ositioning|ath)|Content)?|Span|itle)Element|ransform(?:List)?)|M(?:(?:(?:issingGlyp|Pat)h|etadata)Element|a(?:(?:rker|sk)Element|trix))|L(?:ine(?:arGradient)?Element|ength(?:List)?)|El(?:ement(?:Instance)?|lipseElement)|V(?:iew(?:Element|Spec)|KernElement)|U(?:seElement|nitTypes)|Zoom(?:AndPan|Event)|Number(?:List)?)|t(?:yleShee(?:tLis)?t|orage(?:Event)?|ring)|cr(?:iptProcessorNode|ollAreaEvent|een)|peechSynthesis(?:Utterance|Event)|(?:impleGesture|martCard)Event|ha(?:redWorker|dowRoot)|e(?:lection|t)|yntaxError)|H(?:TML(?:(?:(?:T(?:able(?:C(?:(?:el|o)l|aption)|Section|Row)?|e(?:mplate|xtArea)|i(?:tl|m)e|rack)|M(?:e(?:nu(?:Item)?|t(?:er|a)|dia)|a(?:rquee|p)|od)|S(?:(?:crip|elec)t|(?:ourc|tyl)e|hadow|pan)|I(?:(?:Fram|mag)e|nput)|H(?:ead(?:ing)?|tml|R)|L(?:egend|abel|ink|I)|B(?:utton|ase|ody|R)|U(?:nknown|List)|(?:Embed)?|Keygen|Quote|Video)Ele|D(?:(?:i(?:rectory|v)|ata(?:List)?|List)Ele|ocu))ment|F(?:o(?:rm(?:ControlsCollection|Element)|ntElement)|(?:rame(?:Set)?|ieldSet)Element)|O(?:pt(?:ion(?:sCollection|Element)|GroupElement)|(?:bjec|utpu|Lis)tElement)|P(?:r(?:o(?:pertiesCollection|gressElement)|eElement)|ara(?:graph|m)Element)|A(?:(?:nchor|pplet|udio|rea)Element|llCollection)|C(?:o(?:ntentElement|llection)|anvasElement))|ashChangeEvent|istory)|C(?:SS(?:(?:(?:(?:Charse|Impor)t|Keyframes?|FontFace|Unknown|Media)Rul|P(?:rimitiveValu|ageRul))e|Style(?:Declaration|Sheet|Rule)|V(?:alue(?:List)?|iewportRule)|Rule(?:List)?|2Properties)?|o(?:m(?:m(?:andEv)?|positionEv)ent|n(?:volverNod|sol)e|unter)|a(?:nvas(?:RenderingContext2D|Gradient|Pattern)|retPosition)|(?:l(?:i(?:entRec(?:tLis)?|pboardEven)|oseEven)|ustomEven)t|ha(?:nnel(?:Splitt|Merg)erNode|racterData)|DATASection|rypto)|D(?:OM(?:S(?:tring(?:List|Map)|ettableTokenList)|Re(?:ct(?:ReadOnly|List)?|quest)|P(?:oint(?:ReadOnly)?|arser)|T(?:ransactionEven|okenLis)t|E(?:xception|rror)|(?:MMIErr|Curs)or|Implementation|Quad)|e(?:vice(?:(?:(?:Orienta|Mo)tion|Proximity|Light)Event|Storage(?:ChangeEvent)?)|sktopNotification(?:Center)?|layNode)|at(?:a(?:Transfer(?:ItemList)?|Channel|View)|e)|ocument(?:Fragment|Type)?|ynamicsCompressorNode|ragEvent)|w(?:ebkit(?:C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|onvertPointFrom(?:NodeToPag|PageToNod)e)|R(?:e(?:quest(?:AnimationFrame|FileSystem)|solveLocalFileSystemURL)|TCPeerConnection)|IDB(?:(?:ObjectStor|Databas|KeyRang)e|Transaction|Factory|Request|Cursor|Index)|Speech(?:Recognition(?:E(?:rror|vent))?|Grammar(?:List)?)|Exit(?:PointerLock|Fullscreen)|(?:Offline)?AudioContext|MediaStream|URL)|rite(?:ln)?|indow)|M(?:e(?:dia(?:S(?:tream(?:Audio(?:Destination|Source)Node|Event|Track)?|ource)|E(?:lementAudioSourceNode|rror)|KeyE(?:rror|vent)|(?:Query)?List|Recorder)|ssage(?:(?:Even|Por)t|Channel))|o(?:z(?:(?:ContactChange|Application|Mms)Event|S(?:ms(?:Filter|Event)|ettingsEvent)|NamedAttrMap|PowerManager)|use(?:Scroll)?Event)|utation(?:Observer|Record|Event)|imeType(?:Array)?|ap)|c(?:reate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|a(?:ret(?:Position|Range)FromPoint|ncelAnimationFrame|ptureEvents)|o(?:n(?:t(?:ains|ent)|structor|firm)|mpareDocumentPosition)|l(?:ear(?:Interval|Timeout)?|o(?:neNod|s)e))|W(?:e(?:b(?:GL(?:Render(?:ingContext|buffer)|Shader(?:PrecisionFormat)?|(?:Frameb|B)uffer|UniformLocation|ContextEvent|VertexArray|ActiveInfo|Program|Texture)|Kit(?:CSS(?:(?:Filter(?:Valu|Rul)|TransformValu)e|Matrix)|(?:(?:Transi|Anima)tionEve|Poi)nt|MutationObserver|Gamepad)|Socket)|ak(?:Map|Set))|aveShaperNode|heelEvent|indow|orker)|I(?:DB(?:(?:VersionChangeEven|Reques)t|O(?:penDBRequest|bjectStore)|F(?:ileHandle|actory)|(?:Databas|KeyRang)e|Cursor(?:WithValue)?|Transaction|Index)|n(?:t(?:(?:16|32|8)Array|ernalError)|put(?:MethodContex|Even)t)|frame(?:Window|Proxy|Base)?|mage(?:Bitmap|Data)?|terator)|P(?:er(?:formance(?:(?:Resource)?Timing|M(?:easure|ark)|Navigation|Entry)?|iodicWave)|ro(?:(?:pertyNodeLis|gressEven)t|cessingInstruction|mise|xy)|a(?:(?:intReque(?:stLi)?s|geTransitionEven)t|nnerNode|th2D)|op(?:upBlocked|State)Event|honeNumberService|lugin(?:Array)?)|m(?:o(?:z(?:R(?:TC(?:(?:SessionDescrip|PeerConnec)tion|IceCandidate)|equestAnimationFrame)|C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|ontact)|ExitPointerLock|SetImageElement)|ve(?:By|To))|a(?:ybeRedirectForGBV|tchMedia))|A(?:u(?:dio(?:P(?:rocessingEvent|aram)|Buffer(?:SourceNode)?|(?:Destination)?Node|StreamTrack|Listener|Context)?|tocompleteErrorEvent)|pplicationCache(?:ErrorEvent)?|n(?:imationEvent|alyserNode)|rray(?:Buffer)?|ttr)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|(?:DefaultComputed|Override)Style|C(?:SSCanvasContext|omputedStyle)|I(?:nterface|tems)|MatchedCSSRules|Selection)|cscript)|T(?:ext(?:Track(?:Cue(?:List)?|List)?|E(?:ncoder|vent)|Decoder|Metrics)?|o(?:uch(?:(?:Even|Lis)t)?|olbarApi)|r(?:a(?:nsition|ck)Event|eeWalker)|ime(?:Ranges|Event)|ypeError)|R(?:TC(?:(?:PeerConnectionIce|DataChannel)Event|S(?:essionDescription|tatsReport)|IceCandidate)|e(?:c(?:ordErrorEven)?t|ferenceError|gExp)|ange(?:Error)?|GBColor)|X(?:ML(?:S(?:tylesheetProcessingInstruction|erializer)|HttpRequest(?:ProgressEvent|Upload)?|Document)|Path(?:E(?:xpression|valuator)|Result)|SLTProcessor)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|questAnimationFrame|gisterElement|size(?:By|To)|placeChild)|wt)|s(?:e(?:t(?:Resizable|Interval|Timeout)|lf)|croll(?:By(?:(?:Lin|Pag)es)?|To)?|howModalDialog|izeToContent|top)|N(?:o(?:t(?:if(?:yPaintEvent|ication)|ation)|de(?:(?:Iterato|Filte)r|List)?)|a(?:medNodeMap|vigator)|umber)|F(?:ile(?:Re(?:quest|ader)|Handle|Error|List)?|o(?:cusEvent|ntFace|rmData)|loat(?:32|64)Array|unction)|e(?:n(?:ableStyleSheetsForSet|codeURI(?:Component)?)|lementFromPoint|val(?:uate)?|xecCommand|scape)|O(?:(?:ffline(?:AudioCo(?:mpletionEven|ntex)|ResourceLis)|verflowEven|bjec)t|scillatorNode|ption)|U(?:int(?:8(?:Clamped)?|16|32)Array|R(?:L(?:SearchParams)?|IError)|(?:serProximity|I)Event)|E(?:v(?:ent(?:Source|Target)?|alError)|lem(?:entReplaceEv)?ent|rror(?:Event)?|xternal)|i(?:s(?:(?:(?:Equal|Same)Nod|DefaultNamespac|Finit)e|NaN)|(?:nsertBefor|mportNod)e)|B(?:a(?:tteryManager|rProp)|eforeUnloadEvent|iquadFilterNode|lob(?:Event)?|oolean)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|p(?:(?:ar(?:se(?:Floa|In)|en)|r(?:omp|in))t|ostMessage)|d(?:ecodeURI(?:Component)?|(?:ispatchEv|ocum)ent|ump)|a(?:d(?:dEventListener|optNode)|ppendChild|lert|tob)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|ome)|V(?:(?:alidityStat|TTCu)e|ideoStreamTrack)|Loc(?:a(?:lMediaStream|tion)|kedFile)|f(?:o(?:rward|cus)|unction|rames|ind)|o(?:pen(?:D(?:atabase|ialog))?|nblur)|Ga(?:mepad(?:Button|Event)?|inNode)|u(?:ne(?:scape|val)|pdateCommands)|lookup(?:NamespaceURI|Prefix)|Key(?:board)?Event|n(?:ormalize|ycli)|b(?:ack|lur|toa)|_gj(?:uc|h)|t(?:his|op))\b
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-432</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2062">
            <Name>(default XSS_030b) JavaScript in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_030b) JavaScript in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_non_possessive>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*)
    (?&lt;mand_space>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])++)
    (?&lt;js_comment>(?:/\*.*?\*/|//[^\v]*+[\v]))
    (?&lt;opt_spaces_including_left_paren>(?:[\h\v(]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_including_right_paren>(?:[\h\v)]|/\*.*?\*/|//[^\v]*+[\v])*+)
)^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces_non_possessive)(?:[;+\-*/%~?=&lt;>|&amp;:!\v[)}{(]|(?:=(?:(?&amp;opt_spaces)[0-9ex!.\-+~]*+(?&amp;opt_spaces)(?:true|false|Infinity)?)|@[^,;.!?()\-]+(?&amp;mand_space)))(?:.*(?:[;+\-*/%~?=&lt;>|&amp;:!\v[)}{(]|(?:=(?:(?&amp;opt_spaces)[0-9ex!.\-+~]*+(?&amp;opt_spaces)(?:true|false|Infinity)?)|@[^,;.!?()\-]+(?&amp;mand_space))))?(?&amp;opt_spaces)
(?:
    (?:[\-_\p{L}\p{N}$`]*+\.)*
    (?:
        (?:S(?:VG(?:(?:(?:(?:F(?:E(?:D(?:i(?:s(?:placementMap|tantLight)|ffuseLighting)|ropShadow)|Co(?:mpo(?:nentTransfer|site)|(?:nvolve|lor)Matrix)|M(?:erg(?:eNod)?e|orphology)|Sp(?:ecularLighting|otLight)|(?:T(?:urbulenc|il)|Imag)e|(?:PointLigh|Offse)t|F(?:unc[ABGR]|lood)|GaussianBlur|Blend)|o(?:nt(?:Face(?:Format|Name|Src|Uri)?)?|reignObject)|ilter)|C(?:omponentTransferFunction|lipPath|ircle|ursor)|G(?:ra(?:dient|phics)|lyph(?:Ref)?|eometry)?|HKern|Image)Ele|D(?:(?:e(?:fs|sc)|iscard)Ele|ocu))men|S(?:(?:(?:crip|e)t|witch|ymbol|VG)Elemen|t(?:(?:yle|op)Elemen|ringLis))|R(?:e(?:c(?:tElemen)?|nderingInten)|adialGradientElemen))t|P(?:at(?:h(?:Seg(?:C(?:urveto(?:Quadratic(?:Smooth(?:Abs|Rel)|Abs|Rel)|Cubic(?:Smooth(?:Abs|Rel)|Abs|Rel))|losePath)|Li(?:neto(?:Horizontal(?:Abs|Rel)|Vertical(?:Abs|Rel)|Abs|Rel)|st)|Moveto(?:Abs|Rel)|Arc(?:Abs|Rel))?|Element)|ternElement)|o(?:ly(?:line|gon)Elemen|in(?:tLis)?)t|reserveAspectRatio)|A(?:n(?:imat(?:e(?:d(?:(?:Enumeratio|Boolea)n|(?:TransformLis|Rec)t|PreserveAspectRatio|Length(?:List)?|Number(?:List)?|Integer|String|Angle)|(?:Transform|Motion)?Element)|ionElement)|gle)|(?:ltGlyph(?:Item|Def)?)?Element)|T(?:(?:ext(?:P(?:ositioning|ath)|Content)?|Span|itle)Element|ransform(?:List)?)|M(?:(?:(?:issingGlyp|Pat)h|etadata)Element|a(?:(?:rker|sk)Element|trix))|L(?:ine(?:arGradient)?Element|ength(?:List)?)|El(?:ement(?:Instance)?|lipseElement)|V(?:iew(?:Element|Spec)|KernElement)|U(?:seElement|nitTypes)|Zoom(?:AndPan|Event)|Number(?:List)?)|t(?:yleShee(?:tLis)?t|orage(?:Event)?|ring)|cr(?:iptProcessorNode|ollAreaEvent|een)|peechSynthesis(?:Utterance|Event)|(?:impleGesture|martCard)Event|ha(?:redWorker|dowRoot)|e(?:lection|t)|yntaxError)|H(?:TML(?:(?:(?:T(?:able(?:C(?:(?:el|o)l|aption)|Section|Row)?|e(?:mplate|xtArea)|i(?:tl|m)e|rack)|M(?:e(?:nu(?:Item)?|t(?:er|a)|dia)|a(?:rquee|p)|od)|S(?:(?:crip|elec)t|(?:ourc|tyl)e|hadow|pan)|I(?:(?:Fram|mag)e|nput)|H(?:ead(?:ing)?|tml|R)|L(?:egend|abel|ink|I)|B(?:utton|ase|ody|R)|U(?:nknown|List)|(?:Embed)?|Keygen|Quote|Video)Ele|D(?:(?:i(?:rectory|v)|ata(?:List)?|List)Ele|ocu))ment|F(?:o(?:rm(?:ControlsCollection|Element)|ntElement)|(?:rame(?:Set)?|ieldSet)Element)|O(?:pt(?:ion(?:sCollection|Element)|GroupElement)|(?:bjec|utpu|Lis)tElement)|P(?:r(?:o(?:pertiesCollection|gressElement)|eElement)|ara(?:graph|m)Element)|A(?:(?:nchor|pplet|udio|rea)Element|llCollection)|C(?:o(?:ntentElement|llection)|anvasElement))|ashChangeEvent|istory)|C(?:SS(?:(?:(?:(?:Charse|Impor)t|Keyframes?|FontFace|Unknown|Media)Rul|P(?:rimitiveValu|ageRul))e|Style(?:Declaration|Sheet|Rule)|V(?:alue(?:List)?|iewportRule)|Rule(?:List)?|2Properties)?|o(?:m(?:m(?:andEv)?|positionEv)ent|n(?:volverNod|sol)e|unter)|a(?:nvas(?:RenderingContext2D|Gradient|Pattern)|retPosition)|(?:l(?:i(?:entRec(?:tLis)?|pboardEven)|oseEven)|ustomEven)t|ha(?:nnel(?:Splitt|Merg)erNode|racterData)|DATASection|rypto)|D(?:OM(?:S(?:tring(?:List|Map)|ettableTokenList)|Re(?:ct(?:ReadOnly|List)?|quest)|P(?:oint(?:ReadOnly)?|arser)|T(?:ransactionEven|okenLis)t|E(?:xception|rror)|(?:MMIErr|Curs)or|Implementation|Quad)|e(?:vice(?:(?:(?:Orienta|Mo)tion|Proximity|Light)Event|Storage(?:ChangeEvent)?)|sktopNotification(?:Center)?|layNode)|at(?:a(?:Transfer(?:ItemList)?|Channel|View)|e)|ocument(?:Fragment|Type)?|ynamicsCompressorNode|ragEvent)|w(?:ebkit(?:C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|onvertPointFrom(?:NodeToPag|PageToNod)e)|R(?:e(?:quest(?:AnimationFrame|FileSystem)|solveLocalFileSystemURL)|TCPeerConnection)|IDB(?:(?:ObjectStor|Databas|KeyRang)e|Transaction|Factory|Request|Cursor|Index)|Speech(?:Recognition(?:E(?:rror|vent))?|Grammar(?:List)?)|Exit(?:PointerLock|Fullscreen)|(?:Offline)?AudioContext|MediaStream|URL)|rite(?:ln)?|indow)|M(?:e(?:dia(?:S(?:tream(?:Audio(?:Destination|Source)Node|Event|Track)?|ource)|E(?:lementAudioSourceNode|rror)|KeyE(?:rror|vent)|(?:Query)?List|Recorder)|ssage(?:(?:Even|Por)t|Channel))|o(?:z(?:(?:ContactChange|Application|Mms)Event|S(?:ms(?:Filter|Event)|ettingsEvent)|NamedAttrMap|PowerManager)|use(?:Scroll)?Event)|utation(?:Observer|Record|Event)|imeType(?:Array)?|ap)|c(?:reate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|a(?:ret(?:Position|Range)FromPoint|ncelAnimationFrame|ptureEvents)|o(?:n(?:t(?:ains|ent)|structor|firm)|mpareDocumentPosition)|l(?:ear(?:Interval|Timeout)?|o(?:neNod|s)e))|W(?:e(?:b(?:GL(?:Render(?:ingContext|buffer)|Shader(?:PrecisionFormat)?|(?:Frameb|B)uffer|UniformLocation|ContextEvent|VertexArray|ActiveInfo|Program|Texture)|Kit(?:CSS(?:(?:Filter(?:Valu|Rul)|TransformValu)e|Matrix)|(?:(?:Transi|Anima)tionEve|Poi)nt|MutationObserver|Gamepad)|Socket)|ak(?:Map|Set))|aveShaperNode|heelEvent|indow|orker)|I(?:DB(?:(?:VersionChangeEven|Reques)t|O(?:penDBRequest|bjectStore)|F(?:ileHandle|actory)|(?:Databas|KeyRang)e|Cursor(?:WithValue)?|Transaction|Index)|n(?:t(?:(?:16|32|8)Array|ernalError)|put(?:MethodContex|Even)t)|frame(?:Window|Proxy|Base)?|mage(?:Bitmap|Data)?|terator)|P(?:er(?:formance(?:(?:Resource)?Timing|M(?:easure|ark)|Navigation|Entry)?|iodicWave)|ro(?:(?:pertyNodeLis|gressEven)t|cessingInstruction|mise|xy)|a(?:(?:intReque(?:stLi)?s|geTransitionEven)t|nnerNode|th2D)|op(?:upBlocked|State)Event|honeNumberService|lugin(?:Array)?)|m(?:o(?:z(?:R(?:TC(?:(?:SessionDescrip|PeerConnec)tion|IceCandidate)|equestAnimationFrame)|C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|ontact)|ExitPointerLock|SetImageElement)|ve(?:By|To))|a(?:ybeRedirectForGBV|tchMedia))|A(?:u(?:dio(?:P(?:rocessingEvent|aram)|Buffer(?:SourceNode)?|(?:Destination)?Node|StreamTrack|Listener|Context)?|tocompleteErrorEvent)|pplicationCache(?:ErrorEvent)?|n(?:imationEvent|alyserNode)|rray(?:Buffer)?|ttr)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|(?:DefaultComputed|Override)Style|C(?:SSCanvasContext|omputedStyle)|I(?:nterface|tems)|MatchedCSSRules|Selection)|cscript)|T(?:ext(?:Track(?:Cue(?:List)?|List)?|E(?:ncoder|vent)|Decoder|Metrics)?|o(?:uch(?:(?:Even|Lis)t)?|olbarApi)|r(?:a(?:nsition|ck)Event|eeWalker)|ime(?:Ranges|Event)|ypeError)|R(?:TC(?:(?:PeerConnectionIce|DataChannel)Event|S(?:essionDescription|tatsReport)|IceCandidate)|e(?:c(?:ordErrorEven)?t|ferenceError|gExp)|ange(?:Error)?|GBColor)|X(?:ML(?:S(?:tylesheetProcessingInstruction|erializer)|HttpRequest(?:ProgressEvent|Upload)?|Document)|Path(?:E(?:xpression|valuator)|Result)|SLTProcessor)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|questAnimationFrame|gisterElement|size(?:By|To)|placeChild)|wt)|s(?:e(?:t(?:Resizable|Interval|Timeout)|lf)|croll(?:By(?:(?:Lin|Pag)es)?|To)?|howModalDialog|izeToContent|top)|N(?:o(?:t(?:if(?:yPaintEvent|ication)|ation)|de(?:(?:Iterato|Filte)r|List)?)|a(?:medNodeMap|vigator)|umber)|F(?:ile(?:Re(?:quest|ader)|Handle|Error|List)?|o(?:cusEvent|ntFace|rmData)|loat(?:32|64)Array|unction)|e(?:n(?:ableStyleSheetsForSet|codeURI(?:Component)?)|lementFromPoint|val(?:uate)?|xecCommand|scape)|O(?:(?:ffline(?:AudioCo(?:mpletionEven|ntex)|ResourceLis)|verflowEven|bjec)t|scillatorNode|ption)|U(?:int(?:8(?:Clamped)?|16|32)Array|R(?:L(?:SearchParams)?|IError)|(?:serProximity|I)Event)|E(?:v(?:ent(?:Source|Target)?|alError)|lem(?:entReplaceEv)?ent|rror(?:Event)?|xternal)|i(?:s(?:(?:(?:Equal|Same)Nod|DefaultNamespac|Finit)e|NaN)|(?:nsertBefor|mportNod)e)|B(?:a(?:tteryManager|rProp)|eforeUnloadEvent|iquadFilterNode|lob(?:Event)?|oolean)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|p(?:(?:ar(?:se(?:Floa|In)|en)|r(?:omp|in))t|ostMessage)|d(?:ecodeURI(?:Component)?|(?:ispatchEv|ocum)ent|ump)|a(?:d(?:dEventListener|optNode)|ppendChild|lert|tob)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|ome)|V(?:(?:alidityStat|TTCu)e|ideoStreamTrack)|Loc(?:a(?:lMediaStream|tion)|kedFile)|f(?:o(?:rward|cus)|unction|rames|ind)|o(?:pen(?:D(?:atabase|ialog))?|nblur)|Ga(?:mepad(?:Button|Event)?|inNode)|u(?:ne(?:scape|val)|pdateCommands)|lookup(?:NamespaceURI|Prefix)|Key(?:board)?Event|n(?:ormalize|ycli)|b(?:ack|lur|toa)|_gj(?:uc|h)|t(?:his|op))(?&amp;opt_spaces)[`(\]\[]|
        (?:o(?:n(?:p(?:o(?:inter(?:l(?:ock(?:change|error)|eave)|o(?:ver|ut)|cancel|enter|down|move|up)|pstate)|a(?:ge(?:hide|show)|(?:st|us)e)|lay(?:ing)?|rogress)|m(?:o(?:z(?:pointerlock(?:change|error)|fullscreen(?:change|error))|use(?:(?:lea|mo)ve|o(?:ver|ut)|enter|wheel|down|up))|essage)|w(?:ebkit(?:animation(?:iteration|start|end)|pointerlock(?:change|error)|fullscreen(?:change|error)|transitionend)|aiting|heel)|d(?:evice(?:(?:orienta|mo)tion|proximity|light)|r(?:ag(?:en(?:ter|d)|leave|start|over)?|op)|urationchange|blclick)|s(?:e(?:lect(?:ionchange|start)?|ek(?:ing|ed)|arch)|t(?:alled|orage)|u(?:spend|bmit)|croll|how)|c(?:an(?:play(?:through)?|cel)|o(?:ntextmenu|py)|u(?:echange|t)|l(?:ick|ose)|hange)|b(?:efore(?:p(?:aste|rint)|scriptexecute|c(?:opy|ut)|unload)|lur)|a(?:fter(?:scriptexecute|print)|utocomplete(?:error)?|bort)|(?:(?:volume|hash)chang|gotpointercaptur|o(?:ff|n)lin)e|lo(?:ad(?:ed(?:meta)?data|start)?|stpointercapture)|r(?:e(?:adystatechange|s(?:ize|et))|atechange)|t(?:(?:imeupdat|oggl)e|ransitionend)|fo(?:rm(?:change|input)|cus)|e(?:(?:mpti|nd)ed|rror)|u(?:serproximity|nload)|key(?:press|down|up)|in(?:valid|put))|uter(?:Height|Width)|ffscreenBuffering|wnerDocument|pen(?:er)?|sapi)|c(?:r(?:eate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|ypto)|l(?:o(?:s(?:ure_(?:lm_(?:102420|238531|693595|738932)|uid_(?:676336601|820998867)|memoize_cache_)|ed?)|neNode)|ientInformation|ear)|o(?:n(?:t(?:ent(?:Type)?|ains)|sole)|mpa(?:reDocumentPosition|tMode)|okie)|h(?:ild(?:ElementCount|Nodes|ren)|ar(?:acterS|s)et|rome)|a(?:retPositionFromPoint|ptureEvents)|urrentScript)|m(?:oz(?:(?:P(?:ointerLockEleme|aintCou)|SetImageEleme)nt|(?:AnimationStartTim|VisibilityStat)e|FullScreen(?:E(?:lement|nabled))?|In(?:nerScreen[XY]|dexedDB)|(?:CancelFullScre|Hidd)en|ExitPointerLock)|enubar)|w(?:ebkit(?:Full(?:ScreenKeyboardInputAllowed|screenE(?:lement|nabled))|(?:CurrentFullScreen|PointerLock)Element|I(?:sFullScreen|ndexedDB)|VisibilityState|StorageInfo|Hidden)|rite(?:ln)?|indow)|s(?:cr(?:oll(?:[XY]|Max[XY]|bars)|een(?:[XY]|Left|Top)?|ipts)|e(?:l(?:ectedStyle[Ss]heetSet|f)|ssionStorage)|t(?:yle(?:She(?:etS)?ets|Media)|atus(?:bar)?)|peechSynthesis|hindig|idebar)|C(?:SS(?:(?:(?:(?:NameSp|FontF)ac|Pag)e|C(?:ondition|harset)|M(?:ozDocument|edia)|S(?:upports|tyle)|Grouping|Import)Rule|Rule(?:List)?)?|(?:DATA_SECTION|OMMENT)_NODE|ontrollers)|l(?:o(?:ca(?:l(?:Storag|Nam)e|tion(?:bar)?)|okup(?:NamespaceURI|Prefix))|ast(?:(?:(?:Element)?Chil|Modifie)d|StyleSheetSet)|ink(?:Color|s)|ength|gt)|d(?:e(?:fault(?:[Ss]tatus|Charset|View)|vicePixelRatio|signMode)|o(?:c(?:ument(?:Element|URI)?|type)|main)|i(?:spatchEvent|r)|r(?:asil)?)|i(?:n(?:ner(?:Height|Width)|putEncoding|sertBefore|dexedDB)|m(?:p(?:lementation|ortNode)|ages)|s(?:DefaultNamespac|EqualNod)e|frame[rs])|DOCUMENT_(?:POSITION_(?:IMPLEMENTATION_SPECIFIC|(?:FOLLOW|PRECED)ING|CONTAIN(?:ED_BY|S)|DISCONNECTED)|(?:(?:FRAGMENT|TYPE)_)?NODE)|p(?:re(?:f(?:erredStyle[Ss]heetSet|ix)|viousSibling)|a(?:rent(?:Element|Node)?|ge[XY]Offset)|er(?:formance|sonalbar)|(?:lugin|o)s)|M(?:o(?:z(?:M(?:obileMessage(?:Manager|Thread)|msMessage)|Sms(?:SegmentInfo|Message)|CSSKeyframes?Rule)|dalContentWindow)|ath)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|Selection|Items)|oogle(?:apis)?|a(?:dgets|pi)|b(?:ar_?|qf))|a(?:pp(?:l(?:icationCache|ets)|endChild)|d(?:dEventListener|optNode)|l(?:inkColor|l)|ctiveElement|nchors)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|placeChild|adyState|ferrer)|ootElement)|e(?:(?:nableStyleSheetsForSe|lementFromPoin)t|x(?:ecCommand|ternal)|v(?:aluate|ent)|mbeds)|n(?:o(?:de(?:Valu|Nam|Typ)|rmaliz)e|a(?:mespaceURI|vigator)|e(?:xtSibling|tscape)|ycli)|f(?:irs(?:tElemen)?tChild|u(?:llScree|nctio)n|rame(?:Element|s)|o(?:nt|rm)s|gColor|p)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|_(?:_(?:gapi_jstiming__|commandLineAPI|jsaction|_jsl|PVT)|gjwl|loc|ss)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|i(?:story|dden)|plogo|ead)|I(?:1_14085(?:38546619|41122438)|n(?:stallTrigger|finity|tl))|(?:E(?:NTITY(?:_REFERENCE)?|LEMENT)|ATTRIBUTE)_NODE|P(?:ROCESSING_INSTRUCTION_NODE|ERSISTENT)|XPath(?:Expression|NSResolver|Result)|t(?:o(?:olbar|p)|extContent|itle|his)|S(?:to(?:pIteration|rage)|VGNumber)|xml(?:Standalone|Encoding|Version)|v(?:isibilityState|linkColor)|j(?:e(?:srScriptTags)?|sl)|b(?:aseURI|gColor|ody)|TE(?:MPORARY|XT_NODE)|N(?:OTATION_NODE|aN)|Window(?:Utils)?|undefined|Location|JSON|URL)(?&amp;opt_spaces_including_right_paren)(?:=|/\*)
    )
    |
    new(?&amp;mand_space)(?:S(?:VG(?:(?:(?:(?:F(?:E(?:D(?:i(?:s(?:placementMap|tantLight)|ffuseLighting)|ropShadow)|Co(?:mpo(?:nentTransfer|site)|(?:nvolve|lor)Matrix)|M(?:erg(?:eNod)?e|orphology)|Sp(?:ecularLighting|otLight)|(?:T(?:urbulenc|il)|Imag)e|(?:PointLigh|Offse)t|F(?:unc[ABGR]|lood)|GaussianBlur|Blend)|o(?:nt(?:Face(?:Format|Name|Src|Uri)?)?|reignObject)|ilter)|C(?:omponentTransferFunction|lipPath|ircle|ursor)|G(?:ra(?:dient|phics)|lyph(?:Ref)?|eometry)?|HKern|Image)Ele|D(?:(?:e(?:fs|sc)|iscard)Ele|ocu))men|S(?:(?:(?:crip|e)t|witch|ymbol|VG)Elemen|t(?:(?:yle|op)Elemen|ringLis))|R(?:e(?:c(?:tElemen)?|nderingInten)|adialGradientElemen))t|P(?:at(?:h(?:Seg(?:C(?:urveto(?:Quadratic(?:Smooth(?:Abs|Rel)|Abs|Rel)|Cubic(?:Smooth(?:Abs|Rel)|Abs|Rel))|losePath)|Li(?:neto(?:Horizontal(?:Abs|Rel)|Vertical(?:Abs|Rel)|Abs|Rel)|st)|Moveto(?:Abs|Rel)|Arc(?:Abs|Rel))?|Element)|ternElement)|o(?:ly(?:line|gon)Elemen|in(?:tLis)?)t|reserveAspectRatio)|A(?:n(?:imat(?:e(?:d(?:(?:Enumeratio|Boolea)n|(?:TransformLis|Rec)t|PreserveAspectRatio|Length(?:List)?|Number(?:List)?|Integer|String|Angle)|(?:Transform|Motion)?Element)|ionElement)|gle)|(?:ltGlyph(?:Item|Def)?)?Element)|T(?:(?:ext(?:P(?:ositioning|ath)|Content)?|Span|itle)Element|ransform(?:List)?)|M(?:(?:(?:issingGlyp|Pat)h|etadata)Element|a(?:(?:rker|sk)Element|trix))|L(?:ine(?:arGradient)?Element|ength(?:List)?)|El(?:ement(?:Instance)?|lipseElement)|V(?:iew(?:Element|Spec)|KernElement)|U(?:seElement|nitTypes)|Zoom(?:AndPan|Event)|Number(?:List)?)|t(?:yleShee(?:tLis)?t|orage(?:Event)?|ring)|cr(?:iptProcessorNode|ollAreaEvent|een)|peechSynthesis(?:Utterance|Event)|(?:impleGesture|martCard)Event|ha(?:redWorker|dowRoot)|e(?:lection|t)|yntaxError)|H(?:TML(?:(?:(?:T(?:able(?:C(?:(?:el|o)l|aption)|Section|Row)?|e(?:mplate|xtArea)|i(?:tl|m)e|rack)|M(?:e(?:nu(?:Item)?|t(?:er|a)|dia)|a(?:rquee|p)|od)|S(?:(?:crip|elec)t|(?:ourc|tyl)e|hadow|pan)|I(?:(?:Fram|mag)e|nput)|H(?:ead(?:ing)?|tml|R)|L(?:egend|abel|ink|I)|B(?:utton|ase|ody|R)|U(?:nknown|List)|(?:Embed)?|Keygen|Quote|Video)Ele|D(?:(?:i(?:rectory|v)|ata(?:List)?|List)Ele|ocu))ment|F(?:o(?:rm(?:ControlsCollection|Element)|ntElement)|(?:rame(?:Set)?|ieldSet)Element)|O(?:pt(?:ion(?:sCollection|Element)|GroupElement)|(?:bjec|utpu|Lis)tElement)|P(?:r(?:o(?:pertiesCollection|gressElement)|eElement)|ara(?:graph|m)Element)|A(?:(?:nchor|pplet|udio|rea)Element|llCollection)|C(?:o(?:ntentElement|llection)|anvasElement))|ashChangeEvent|istory)|C(?:SS(?:(?:(?:(?:Charse|Impor)t|Keyframes?|FontFace|Unknown|Media)Rul|P(?:rimitiveValu|ageRul))e|Style(?:Declaration|Sheet|Rule)|V(?:alue(?:List)?|iewportRule)|Rule(?:List)?|2Properties)?|o(?:m(?:m(?:andEv)?|positionEv)ent|n(?:volverNod|sol)e|unter)|a(?:nvas(?:RenderingContext2D|Gradient|Pattern)|retPosition)|(?:l(?:i(?:entRec(?:tLis)?|pboardEven)|oseEven)|ustomEven)t|ha(?:nnel(?:Splitt|Merg)erNode|racterData)|DATASection|rypto)|D(?:OM(?:S(?:tring(?:List|Map)|ettableTokenList)|Re(?:ct(?:ReadOnly|List)?|quest)|P(?:oint(?:ReadOnly)?|arser)|T(?:ransactionEven|okenLis)t|E(?:xception|rror)|(?:MMIErr|Curs)or|Implementation|Quad)|e(?:vice(?:(?:(?:Orienta|Mo)tion|Proximity|Light)Event|Storage(?:ChangeEvent)?)|sktopNotification(?:Center)?|layNode)|at(?:a(?:Transfer(?:ItemList)?|Channel|View)|e)|ocument(?:Fragment|Type)?|ynamicsCompressorNode|ragEvent)|w(?:ebkit(?:C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|onvertPointFrom(?:NodeToPag|PageToNod)e)|R(?:e(?:quest(?:AnimationFrame|FileSystem)|solveLocalFileSystemURL)|TCPeerConnection)|IDB(?:(?:ObjectStor|Databas|KeyRang)e|Transaction|Factory|Request|Cursor|Index)|Speech(?:Recognition(?:E(?:rror|vent))?|Grammar(?:List)?)|Exit(?:PointerLock|Fullscreen)|(?:Offline)?AudioContext|MediaStream|URL)|rite(?:ln)?|indow)|M(?:e(?:dia(?:S(?:tream(?:Audio(?:Destination|Source)Node|Event|Track)?|ource)|E(?:lementAudioSourceNode|rror)|KeyE(?:rror|vent)|(?:Query)?List|Recorder)|ssage(?:(?:Even|Por)t|Channel))|o(?:z(?:(?:ContactChange|Application|Mms)Event|S(?:ms(?:Filter|Event)|ettingsEvent)|NamedAttrMap|PowerManager)|use(?:Scroll)?Event)|utation(?:Observer|Record|Event)|imeType(?:Array)?|ap)|c(?:reate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|a(?:ret(?:Position|Range)FromPoint|ncelAnimationFrame|ptureEvents)|o(?:n(?:t(?:ains|ent)|structor|firm)|mpareDocumentPosition)|l(?:ear(?:Interval|Timeout)?|o(?:neNod|s)e))|W(?:e(?:b(?:GL(?:Render(?:ingContext|buffer)|Shader(?:PrecisionFormat)?|(?:Frameb|B)uffer|UniformLocation|ContextEvent|VertexArray|ActiveInfo|Program|Texture)|Kit(?:CSS(?:(?:Filter(?:Valu|Rul)|TransformValu)e|Matrix)|(?:(?:Transi|Anima)tionEve|Poi)nt|MutationObserver|Gamepad)|Socket)|ak(?:Map|Set))|aveShaperNode|heelEvent|indow|orker)|I(?:DB(?:(?:VersionChangeEven|Reques)t|O(?:penDBRequest|bjectStore)|F(?:ileHandle|actory)|(?:Databas|KeyRang)e|Cursor(?:WithValue)?|Transaction|Index)|n(?:t(?:(?:16|32|8)Array|ernalError)|put(?:MethodContex|Even)t)|frame(?:Window|Proxy|Base)?|mage(?:Bitmap|Data)?|terator)|P(?:er(?:formance(?:(?:Resource)?Timing|M(?:easure|ark)|Navigation|Entry)?|iodicWave)|ro(?:(?:pertyNodeLis|gressEven)t|cessingInstruction|mise|xy)|a(?:(?:intReque(?:stLi)?s|geTransitionEven)t|nnerNode|th2D)|op(?:upBlocked|State)Event|honeNumberService|lugin(?:Array)?)|m(?:o(?:z(?:R(?:TC(?:(?:SessionDescrip|PeerConnec)tion|IceCandidate)|equestAnimationFrame)|C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|ontact)|ExitPointerLock|SetImageElement)|ve(?:By|To))|a(?:ybeRedirectForGBV|tchMedia))|A(?:u(?:dio(?:P(?:rocessingEvent|aram)|Buffer(?:SourceNode)?|(?:Destination)?Node|StreamTrack|Listener|Context)?|tocompleteErrorEvent)|pplicationCache(?:ErrorEvent)?|n(?:imationEvent|alyserNode)|rray(?:Buffer)?|ttr)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|(?:DefaultComputed|Override)Style|C(?:SSCanvasContext|omputedStyle)|I(?:nterface|tems)|MatchedCSSRules|Selection)|cscript)|T(?:ext(?:Track(?:Cue(?:List)?|List)?|E(?:ncoder|vent)|Decoder|Metrics)?|o(?:uch(?:(?:Even|Lis)t)?|olbarApi)|r(?:a(?:nsition|ck)Event|eeWalker)|ime(?:Ranges|Event)|ypeError)|R(?:TC(?:(?:PeerConnectionIce|DataChannel)Event|S(?:essionDescription|tatsReport)|IceCandidate)|e(?:c(?:ordErrorEven)?t|ferenceError|gExp)|ange(?:Error)?|GBColor)|X(?:ML(?:S(?:tylesheetProcessingInstruction|erializer)|HttpRequest(?:ProgressEvent|Upload)?|Document)|Path(?:E(?:xpression|valuator)|Result)|SLTProcessor)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|questAnimationFrame|gisterElement|size(?:By|To)|placeChild)|wt)|s(?:e(?:t(?:Resizable|Interval|Timeout)|lf)|croll(?:By(?:(?:Lin|Pag)es)?|To)?|howModalDialog|izeToContent|top)|N(?:o(?:t(?:if(?:yPaintEvent|ication)|ation)|de(?:(?:Iterato|Filte)r|List)?)|a(?:medNodeMap|vigator)|umber)|F(?:ile(?:Re(?:quest|ader)|Handle|Error|List)?|o(?:cusEvent|ntFace|rmData)|loat(?:32|64)Array|unction)|e(?:n(?:ableStyleSheetsForSet|codeURI(?:Component)?)|lementFromPoint|val(?:uate)?|xecCommand|scape)|O(?:(?:ffline(?:AudioCo(?:mpletionEven|ntex)|ResourceLis)|verflowEven|bjec)t|scillatorNode|ption)|U(?:int(?:8(?:Clamped)?|16|32)Array|R(?:L(?:SearchParams)?|IError)|(?:serProximity|I)Event)|E(?:v(?:ent(?:Source|Target)?|alError)|lem(?:entReplaceEv)?ent|rror(?:Event)?|xternal)|i(?:s(?:(?:(?:Equal|Same)Nod|DefaultNamespac|Finit)e|NaN)|(?:nsertBefor|mportNod)e)|B(?:a(?:tteryManager|rProp)|eforeUnloadEvent|iquadFilterNode|lob(?:Event)?|oolean)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|p(?:(?:ar(?:se(?:Floa|In)|en)|r(?:omp|in))t|ostMessage)|d(?:ecodeURI(?:Component)?|(?:ispatchEv|ocum)ent|ump)|a(?:d(?:dEventListener|optNode)|ppendChild|lert|tob)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|ome)|V(?:(?:alidityStat|TTCu)e|ideoStreamTrack)|Loc(?:a(?:lMediaStream|tion)|kedFile)|f(?:o(?:rward|cus)|unction|rames|ind)|o(?:pen(?:D(?:atabase|ialog))?|nblur)|Ga(?:mepad(?:Button|Event)?|inNode)|u(?:ne(?:scape|val)|pdateCommands)|lookup(?:NamespaceURI|Prefix)|Key(?:board)?Event|n(?:ormalize|ycli)|b(?:ack|lur|toa)|_gj(?:uc|h)|t(?:his|op))\b
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-918</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2064">
            <Name>(default XSS_035a) JavaScript in unquoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_035a) JavaScript in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_non_possessive>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*)
    (?&lt;mand_space>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])++)
    (?&lt;js_comment>(?:/\*.*?\*/|//[^\v]*+[\v]))
    (?&lt;opt_spaces_including_left_paren>(?:[\h\v(]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_including_right_paren>(?:[\h\v)]|/\*.*?\*/|//[^\v]*+[\v])*+)
)(?x)
(?:^|(?:[;+\-*/%~?=&lt;>|&amp;:!\v[)}{(]|(?:=(?:(?&amp;opt_spaces)[0-9ex!.\-+~]*+(?&amp;opt_spaces)(?:true|false|Infinity)?)|@[^,;.!?()\-]+(?&amp;mand_space))))(?&amp;opt_spaces_including_left_paren)
(?:
    (?:[\-_\p{L}\p{N}$`]*+\.)*
    (?:
        (?:S(?:VG(?:(?:(?:(?:F(?:E(?:D(?:i(?:s(?:placementMap|tantLight)|ffuseLighting)|ropShadow)|Co(?:mpo(?:nentTransfer|site)|(?:nvolve|lor)Matrix)|M(?:erg(?:eNod)?e|orphology)|Sp(?:ecularLighting|otLight)|(?:T(?:urbulenc|il)|Imag)e|(?:PointLigh|Offse)t|F(?:unc[ABGR]|lood)|GaussianBlur|Blend)|o(?:nt(?:Face(?:Format|Name|Src|Uri)?)?|reignObject)|ilter)|C(?:omponentTransferFunction|lipPath|ircle|ursor)|G(?:ra(?:dient|phics)|lyph(?:Ref)?|eometry)?|HKern|Image)Ele|D(?:(?:e(?:fs|sc)|iscard)Ele|ocu))men|S(?:(?:(?:crip|e)t|witch|ymbol|VG)Elemen|t(?:(?:yle|op)Elemen|ringLis))|R(?:e(?:c(?:tElemen)?|nderingInten)|adialGradientElemen))t|P(?:at(?:h(?:Seg(?:C(?:urveto(?:Quadratic(?:Smooth(?:Abs|Rel)|Abs|Rel)|Cubic(?:Smooth(?:Abs|Rel)|Abs|Rel))|losePath)|Li(?:neto(?:Horizontal(?:Abs|Rel)|Vertical(?:Abs|Rel)|Abs|Rel)|st)|Moveto(?:Abs|Rel)|Arc(?:Abs|Rel))?|Element)|ternElement)|o(?:ly(?:line|gon)Elemen|in(?:tLis)?)t|reserveAspectRatio)|A(?:n(?:imat(?:e(?:d(?:(?:Enumeratio|Boolea)n|(?:TransformLis|Rec)t|PreserveAspectRatio|Length(?:List)?|Number(?:List)?|Integer|String|Angle)|(?:Transform|Motion)?Element)|ionElement)|gle)|(?:ltGlyph(?:Item|Def)?)?Element)|T(?:(?:ext(?:P(?:ositioning|ath)|Content)?|Span|itle)Element|ransform(?:List)?)|M(?:(?:(?:issingGlyp|Pat)h|etadata)Element|a(?:(?:rker|sk)Element|trix))|L(?:ine(?:arGradient)?Element|ength(?:List)?)|El(?:ement(?:Instance)?|lipseElement)|V(?:iew(?:Element|Spec)|KernElement)|U(?:seElement|nitTypes)|Zoom(?:AndPan|Event)|Number(?:List)?)|t(?:yleShee(?:tLis)?t|orage(?:Event)?|ring)|cr(?:iptProcessorNode|ollAreaEvent|een)|peechSynthesis(?:Utterance|Event)|(?:impleGesture|martCard)Event|ha(?:redWorker|dowRoot)|e(?:lection|t)|yntaxError)|H(?:TML(?:(?:(?:T(?:able(?:C(?:(?:el|o)l|aption)|Section|Row)?|e(?:mplate|xtArea)|i(?:tl|m)e|rack)|M(?:e(?:nu(?:Item)?|t(?:er|a)|dia)|a(?:rquee|p)|od)|S(?:(?:crip|elec)t|(?:ourc|tyl)e|hadow|pan)|I(?:(?:Fram|mag)e|nput)|H(?:ead(?:ing)?|tml|R)|L(?:egend|abel|ink|I)|B(?:utton|ase|ody|R)|U(?:nknown|List)|(?:Embed)?|Keygen|Quote|Video)Ele|D(?:(?:i(?:rectory|v)|ata(?:List)?|List)Ele|ocu))ment|F(?:o(?:rm(?:ControlsCollection|Element)|ntElement)|(?:rame(?:Set)?|ieldSet)Element)|O(?:pt(?:ion(?:sCollection|Element)|GroupElement)|(?:bjec|utpu|Lis)tElement)|P(?:r(?:o(?:pertiesCollection|gressElement)|eElement)|ara(?:graph|m)Element)|A(?:(?:nchor|pplet|udio|rea)Element|llCollection)|C(?:o(?:ntentElement|llection)|anvasElement))|ashChangeEvent|istory)|C(?:SS(?:(?:(?:(?:Charse|Impor)t|Keyframes?|FontFace|Unknown|Media)Rul|P(?:rimitiveValu|ageRul))e|Style(?:Declaration|Sheet|Rule)|V(?:alue(?:List)?|iewportRule)|Rule(?:List)?|2Properties)?|o(?:m(?:m(?:andEv)?|positionEv)ent|n(?:volverNod|sol)e|unter)|a(?:nvas(?:RenderingContext2D|Gradient|Pattern)|retPosition)|(?:l(?:i(?:entRec(?:tLis)?|pboardEven)|oseEven)|ustomEven)t|ha(?:nnel(?:Splitt|Merg)erNode|racterData)|DATASection|rypto)|D(?:OM(?:S(?:tring(?:List|Map)|ettableTokenList)|Re(?:ct(?:ReadOnly|List)?|quest)|P(?:oint(?:ReadOnly)?|arser)|T(?:ransactionEven|okenLis)t|E(?:xception|rror)|(?:MMIErr|Curs)or|Implementation|Quad)|e(?:vice(?:(?:(?:Orienta|Mo)tion|Proximity|Light)Event|Storage(?:ChangeEvent)?)|sktopNotification(?:Center)?|layNode)|at(?:a(?:Transfer(?:ItemList)?|Channel|View)|e)|ocument(?:Fragment|Type)?|ynamicsCompressorNode|ragEvent)|w(?:ebkit(?:C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|onvertPointFrom(?:NodeToPag|PageToNod)e)|R(?:e(?:quest(?:AnimationFrame|FileSystem)|solveLocalFileSystemURL)|TCPeerConnection)|IDB(?:(?:ObjectStor|Databas|KeyRang)e|Transaction|Factory|Request|Cursor|Index)|Speech(?:Recognition(?:E(?:rror|vent))?|Grammar(?:List)?)|Exit(?:PointerLock|Fullscreen)|(?:Offline)?AudioContext|MediaStream|URL)|rite(?:ln)?|indow)|M(?:e(?:dia(?:S(?:tream(?:Audio(?:Destination|Source)Node|Event|Track)?|ource)|E(?:lementAudioSourceNode|rror)|KeyE(?:rror|vent)|(?:Query)?List|Recorder)|ssage(?:(?:Even|Por)t|Channel))|o(?:z(?:(?:ContactChange|Application|Mms)Event|S(?:ms(?:Filter|Event)|ettingsEvent)|NamedAttrMap|PowerManager)|use(?:Scroll)?Event)|utation(?:Observer|Record|Event)|imeType(?:Array)?|ap)|c(?:reate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|a(?:ret(?:Position|Range)FromPoint|ncelAnimationFrame|ptureEvents)|o(?:n(?:t(?:ains|ent)|structor|firm)|mpareDocumentPosition)|l(?:ear(?:Interval|Timeout)?|o(?:neNod|s)e))|W(?:e(?:b(?:GL(?:Render(?:ingContext|buffer)|Shader(?:PrecisionFormat)?|(?:Frameb|B)uffer|UniformLocation|ContextEvent|VertexArray|ActiveInfo|Program|Texture)|Kit(?:CSS(?:(?:Filter(?:Valu|Rul)|TransformValu)e|Matrix)|(?:(?:Transi|Anima)tionEve|Poi)nt|MutationObserver|Gamepad)|Socket)|ak(?:Map|Set))|aveShaperNode|heelEvent|indow|orker)|I(?:DB(?:(?:VersionChangeEven|Reques)t|O(?:penDBRequest|bjectStore)|F(?:ileHandle|actory)|(?:Databas|KeyRang)e|Cursor(?:WithValue)?|Transaction|Index)|n(?:t(?:(?:16|32|8)Array|ernalError)|put(?:MethodContex|Even)t)|frame(?:Window|Proxy|Base)?|mage(?:Bitmap|Data)?|terator)|P(?:er(?:formance(?:(?:Resource)?Timing|M(?:easure|ark)|Navigation|Entry)?|iodicWave)|ro(?:(?:pertyNodeLis|gressEven)t|cessingInstruction|mise|xy)|a(?:(?:intReque(?:stLi)?s|geTransitionEven)t|nnerNode|th2D)|op(?:upBlocked|State)Event|honeNumberService|lugin(?:Array)?)|m(?:o(?:z(?:R(?:TC(?:(?:SessionDescrip|PeerConnec)tion|IceCandidate)|equestAnimationFrame)|C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|ontact)|ExitPointerLock|SetImageElement)|ve(?:By|To))|a(?:ybeRedirectForGBV|tchMedia))|A(?:u(?:dio(?:P(?:rocessingEvent|aram)|Buffer(?:SourceNode)?|(?:Destination)?Node|StreamTrack|Listener|Context)?|tocompleteErrorEvent)|pplicationCache(?:ErrorEvent)?|n(?:imationEvent|alyserNode)|rray(?:Buffer)?|ttr)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|(?:DefaultComputed|Override)Style|C(?:SSCanvasContext|omputedStyle)|I(?:nterface|tems)|MatchedCSSRules|Selection)|cscript)|T(?:ext(?:Track(?:Cue(?:List)?|List)?|E(?:ncoder|vent)|Decoder|Metrics)?|o(?:uch(?:(?:Even|Lis)t)?|olbarApi)|r(?:a(?:nsition|ck)Event|eeWalker)|ime(?:Ranges|Event)|ypeError)|R(?:TC(?:(?:PeerConnectionIce|DataChannel)Event|S(?:essionDescription|tatsReport)|IceCandidate)|e(?:c(?:ordErrorEven)?t|ferenceError|gExp)|ange(?:Error)?|GBColor)|X(?:ML(?:S(?:tylesheetProcessingInstruction|erializer)|HttpRequest(?:ProgressEvent|Upload)?|Document)|Path(?:E(?:xpression|valuator)|Result)|SLTProcessor)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|questAnimationFrame|gisterElement|size(?:By|To)|placeChild)|wt)|s(?:e(?:t(?:Resizable|Interval|Timeout)|lf)|croll(?:By(?:(?:Lin|Pag)es)?|To)?|howModalDialog|izeToContent|top)|N(?:o(?:t(?:if(?:yPaintEvent|ication)|ation)|de(?:(?:Iterato|Filte)r|List)?)|a(?:medNodeMap|vigator)|umber)|F(?:ile(?:Re(?:quest|ader)|Handle|Error|List)?|o(?:cusEvent|ntFace|rmData)|loat(?:32|64)Array|unction)|e(?:n(?:ableStyleSheetsForSet|codeURI(?:Component)?)|lementFromPoint|val(?:uate)?|xecCommand|scape)|O(?:(?:ffline(?:AudioCo(?:mpletionEven|ntex)|ResourceLis)|verflowEven|bjec)t|scillatorNode|ption)|U(?:int(?:8(?:Clamped)?|16|32)Array|R(?:L(?:SearchParams)?|IError)|(?:serProximity|I)Event)|E(?:v(?:ent(?:Source|Target)?|alError)|lem(?:entReplaceEv)?ent|rror(?:Event)?|xternal)|i(?:s(?:(?:(?:Equal|Same)Nod|DefaultNamespac|Finit)e|NaN)|(?:nsertBefor|mportNod)e)|B(?:a(?:tteryManager|rProp)|eforeUnloadEvent|iquadFilterNode|lob(?:Event)?|oolean)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|p(?:(?:ar(?:se(?:Floa|In)|en)|r(?:omp|in))t|ostMessage)|d(?:ecodeURI(?:Component)?|(?:ispatchEv|ocum)ent|ump)|a(?:d(?:dEventListener|optNode)|ppendChild|lert|tob)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|ome)|V(?:(?:alidityStat|TTCu)e|ideoStreamTrack)|Loc(?:a(?:lMediaStream|tion)|kedFile)|f(?:o(?:rward|cus)|unction|rames|ind)|o(?:pen(?:D(?:atabase|ialog))?|nblur)|Ga(?:mepad(?:Button|Event)?|inNode)|u(?:ne(?:scape|val)|pdateCommands)|lookup(?:NamespaceURI|Prefix)|Key(?:board)?Event|n(?:ormalize|ycli)|b(?:ack|lur|toa)|_gj(?:uc|h)|t(?:his|op))(?&amp;opt_spaces)[`(\]\[]|
        (?:o(?:n(?:p(?:o(?:inter(?:l(?:ock(?:change|error)|eave)|o(?:ver|ut)|cancel|enter|down|move|up)|pstate)|a(?:ge(?:hide|show)|(?:st|us)e)|lay(?:ing)?|rogress)|m(?:o(?:z(?:pointerlock(?:change|error)|fullscreen(?:change|error))|use(?:(?:lea|mo)ve|o(?:ver|ut)|enter|wheel|down|up))|essage)|w(?:ebkit(?:animation(?:iteration|start|end)|pointerlock(?:change|error)|fullscreen(?:change|error)|transitionend)|aiting|heel)|d(?:evice(?:(?:orienta|mo)tion|proximity|light)|r(?:ag(?:en(?:ter|d)|leave|start|over)?|op)|urationchange|blclick)|s(?:e(?:lect(?:ionchange|start)?|ek(?:ing|ed)|arch)|t(?:alled|orage)|u(?:spend|bmit)|croll|how)|c(?:an(?:play(?:through)?|cel)|o(?:ntextmenu|py)|u(?:echange|t)|l(?:ick|ose)|hange)|b(?:efore(?:p(?:aste|rint)|scriptexecute|c(?:opy|ut)|unload)|lur)|a(?:fter(?:scriptexecute|print)|utocomplete(?:error)?|bort)|(?:(?:volume|hash)chang|gotpointercaptur|o(?:ff|n)lin)e|lo(?:ad(?:ed(?:meta)?data|start)?|stpointercapture)|r(?:e(?:adystatechange|s(?:ize|et))|atechange)|t(?:(?:imeupdat|oggl)e|ransitionend)|fo(?:rm(?:change|input)|cus)|e(?:(?:mpti|nd)ed|rror)|u(?:serproximity|nload)|key(?:press|down|up)|in(?:valid|put))|uter(?:Height|Width)|ffscreenBuffering|wnerDocument|pen(?:er)?|sapi)|c(?:r(?:eate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|ypto)|l(?:o(?:s(?:ure_(?:lm_(?:102420|238531|693595|738932)|uid_(?:676336601|820998867)|memoize_cache_)|ed?)|neNode)|ientInformation|ear)|o(?:n(?:t(?:ent(?:Type)?|ains)|sole)|mpa(?:reDocumentPosition|tMode)|okie)|h(?:ild(?:ElementCount|Nodes|ren)|ar(?:acterS|s)et|rome)|a(?:retPositionFromPoint|ptureEvents)|urrentScript)|m(?:oz(?:(?:P(?:ointerLockEleme|aintCou)|SetImageEleme)nt|(?:AnimationStartTim|VisibilityStat)e|FullScreen(?:E(?:lement|nabled))?|In(?:nerScreen[XY]|dexedDB)|(?:CancelFullScre|Hidd)en|ExitPointerLock)|enubar)|w(?:ebkit(?:Full(?:ScreenKeyboardInputAllowed|screenE(?:lement|nabled))|(?:CurrentFullScreen|PointerLock)Element|I(?:sFullScreen|ndexedDB)|VisibilityState|StorageInfo|Hidden)|rite(?:ln)?|indow)|s(?:cr(?:oll(?:[XY]|Max[XY]|bars)|een(?:[XY]|Left|Top)?|ipts)|e(?:l(?:ectedStyle[Ss]heetSet|f)|ssionStorage)|t(?:yle(?:She(?:etS)?ets|Media)|atus(?:bar)?)|peechSynthesis|hindig|idebar)|C(?:SS(?:(?:(?:(?:NameSp|FontF)ac|Pag)e|C(?:ondition|harset)|M(?:ozDocument|edia)|S(?:upports|tyle)|Grouping|Import)Rule|Rule(?:List)?)?|(?:DATA_SECTION|OMMENT)_NODE|ontrollers)|l(?:o(?:ca(?:l(?:Storag|Nam)e|tion(?:bar)?)|okup(?:NamespaceURI|Prefix))|ast(?:(?:(?:Element)?Chil|Modifie)d|StyleSheetSet)|ink(?:Color|s)|ength|gt)|d(?:e(?:fault(?:[Ss]tatus|Charset|View)|vicePixelRatio|signMode)|o(?:c(?:ument(?:Element|URI)?|type)|main)|i(?:spatchEvent|r)|r(?:asil)?)|i(?:n(?:ner(?:Height|Width)|putEncoding|sertBefore|dexedDB)|m(?:p(?:lementation|ortNode)|ages)|s(?:DefaultNamespac|EqualNod)e|frame[rs])|DOCUMENT_(?:POSITION_(?:IMPLEMENTATION_SPECIFIC|(?:FOLLOW|PRECED)ING|CONTAIN(?:ED_BY|S)|DISCONNECTED)|(?:(?:FRAGMENT|TYPE)_)?NODE)|p(?:re(?:f(?:erredStyle[Ss]heetSet|ix)|viousSibling)|a(?:rent(?:Element|Node)?|ge[XY]Offset)|er(?:formance|sonalbar)|(?:lugin|o)s)|M(?:o(?:z(?:M(?:obileMessage(?:Manager|Thread)|msMessage)|Sms(?:SegmentInfo|Message)|CSSKeyframes?Rule)|dalContentWindow)|ath)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|Selection|Items)|oogle(?:apis)?|a(?:dgets|pi)|b(?:ar_?|qf))|a(?:pp(?:l(?:icationCache|ets)|endChild)|d(?:dEventListener|optNode)|l(?:inkColor|l)|ctiveElement|nchors)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|placeChild|adyState|ferrer)|ootElement)|e(?:(?:nableStyleSheetsForSe|lementFromPoin)t|x(?:ecCommand|ternal)|v(?:aluate|ent)|mbeds)|n(?:o(?:de(?:Valu|Nam|Typ)|rmaliz)e|a(?:mespaceURI|vigator)|e(?:xtSibling|tscape)|ycli)|f(?:irs(?:tElemen)?tChild|u(?:llScree|nctio)n|rame(?:Element|s)|o(?:nt|rm)s|gColor|p)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|_(?:_(?:gapi_jstiming__|commandLineAPI|jsaction|_jsl|PVT)|gjwl|loc|ss)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|i(?:story|dden)|plogo|ead)|I(?:1_14085(?:38546619|41122438)|n(?:stallTrigger|finity|tl))|(?:E(?:NTITY(?:_REFERENCE)?|LEMENT)|ATTRIBUTE)_NODE|P(?:ROCESSING_INSTRUCTION_NODE|ERSISTENT)|XPath(?:Expression|NSResolver|Result)|t(?:o(?:olbar|p)|extContent|itle|his)|S(?:to(?:pIteration|rage)|VGNumber)|xml(?:Standalone|Encoding|Version)|v(?:isibilityState|linkColor)|j(?:e(?:srScriptTags)?|sl)|b(?:aseURI|gColor|ody)|TE(?:MPORARY|XT_NODE)|N(?:OTATION_NODE|aN)|Window(?:Utils)?|undefined|Location|JSON|URL)(?&amp;opt_spaces_including_right_paren)(?:=|/\*)
    )
    |
    new(?&amp;mand_space)(?:S(?:VG(?:(?:(?:(?:F(?:E(?:D(?:i(?:s(?:placementMap|tantLight)|ffuseLighting)|ropShadow)|Co(?:mpo(?:nentTransfer|site)|(?:nvolve|lor)Matrix)|M(?:erg(?:eNod)?e|orphology)|Sp(?:ecularLighting|otLight)|(?:T(?:urbulenc|il)|Imag)e|(?:PointLigh|Offse)t|F(?:unc[ABGR]|lood)|GaussianBlur|Blend)|o(?:nt(?:Face(?:Format|Name|Src|Uri)?)?|reignObject)|ilter)|C(?:omponentTransferFunction|lipPath|ircle|ursor)|G(?:ra(?:dient|phics)|lyph(?:Ref)?|eometry)?|HKern|Image)Ele|D(?:(?:e(?:fs|sc)|iscard)Ele|ocu))men|S(?:(?:(?:crip|e)t|witch|ymbol|VG)Elemen|t(?:(?:yle|op)Elemen|ringLis))|R(?:e(?:c(?:tElemen)?|nderingInten)|adialGradientElemen))t|P(?:at(?:h(?:Seg(?:C(?:urveto(?:Quadratic(?:Smooth(?:Abs|Rel)|Abs|Rel)|Cubic(?:Smooth(?:Abs|Rel)|Abs|Rel))|losePath)|Li(?:neto(?:Horizontal(?:Abs|Rel)|Vertical(?:Abs|Rel)|Abs|Rel)|st)|Moveto(?:Abs|Rel)|Arc(?:Abs|Rel))?|Element)|ternElement)|o(?:ly(?:line|gon)Elemen|in(?:tLis)?)t|reserveAspectRatio)|A(?:n(?:imat(?:e(?:d(?:(?:Enumeratio|Boolea)n|(?:TransformLis|Rec)t|PreserveAspectRatio|Length(?:List)?|Number(?:List)?|Integer|String|Angle)|(?:Transform|Motion)?Element)|ionElement)|gle)|(?:ltGlyph(?:Item|Def)?)?Element)|T(?:(?:ext(?:P(?:ositioning|ath)|Content)?|Span|itle)Element|ransform(?:List)?)|M(?:(?:(?:issingGlyp|Pat)h|etadata)Element|a(?:(?:rker|sk)Element|trix))|L(?:ine(?:arGradient)?Element|ength(?:List)?)|El(?:ement(?:Instance)?|lipseElement)|V(?:iew(?:Element|Spec)|KernElement)|U(?:seElement|nitTypes)|Zoom(?:AndPan|Event)|Number(?:List)?)|t(?:yleShee(?:tLis)?t|orage(?:Event)?|ring)|cr(?:iptProcessorNode|ollAreaEvent|een)|peechSynthesis(?:Utterance|Event)|(?:impleGesture|martCard)Event|ha(?:redWorker|dowRoot)|e(?:lection|t)|yntaxError)|H(?:TML(?:(?:(?:T(?:able(?:C(?:(?:el|o)l|aption)|Section|Row)?|e(?:mplate|xtArea)|i(?:tl|m)e|rack)|M(?:e(?:nu(?:Item)?|t(?:er|a)|dia)|a(?:rquee|p)|od)|S(?:(?:crip|elec)t|(?:ourc|tyl)e|hadow|pan)|I(?:(?:Fram|mag)e|nput)|H(?:ead(?:ing)?|tml|R)|L(?:egend|abel|ink|I)|B(?:utton|ase|ody|R)|U(?:nknown|List)|(?:Embed)?|Keygen|Quote|Video)Ele|D(?:(?:i(?:rectory|v)|ata(?:List)?|List)Ele|ocu))ment|F(?:o(?:rm(?:ControlsCollection|Element)|ntElement)|(?:rame(?:Set)?|ieldSet)Element)|O(?:pt(?:ion(?:sCollection|Element)|GroupElement)|(?:bjec|utpu|Lis)tElement)|P(?:r(?:o(?:pertiesCollection|gressElement)|eElement)|ara(?:graph|m)Element)|A(?:(?:nchor|pplet|udio|rea)Element|llCollection)|C(?:o(?:ntentElement|llection)|anvasElement))|ashChangeEvent|istory)|C(?:SS(?:(?:(?:(?:Charse|Impor)t|Keyframes?|FontFace|Unknown|Media)Rul|P(?:rimitiveValu|ageRul))e|Style(?:Declaration|Sheet|Rule)|V(?:alue(?:List)?|iewportRule)|Rule(?:List)?|2Properties)?|o(?:m(?:m(?:andEv)?|positionEv)ent|n(?:volverNod|sol)e|unter)|a(?:nvas(?:RenderingContext2D|Gradient|Pattern)|retPosition)|(?:l(?:i(?:entRec(?:tLis)?|pboardEven)|oseEven)|ustomEven)t|ha(?:nnel(?:Splitt|Merg)erNode|racterData)|DATASection|rypto)|D(?:OM(?:S(?:tring(?:List|Map)|ettableTokenList)|Re(?:ct(?:ReadOnly|List)?|quest)|P(?:oint(?:ReadOnly)?|arser)|T(?:ransactionEven|okenLis)t|E(?:xception|rror)|(?:MMIErr|Curs)or|Implementation|Quad)|e(?:vice(?:(?:(?:Orienta|Mo)tion|Proximity|Light)Event|Storage(?:ChangeEvent)?)|sktopNotification(?:Center)?|layNode)|at(?:a(?:Transfer(?:ItemList)?|Channel|View)|e)|ocument(?:Fragment|Type)?|ynamicsCompressorNode|ragEvent)|w(?:ebkit(?:C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|onvertPointFrom(?:NodeToPag|PageToNod)e)|R(?:e(?:quest(?:AnimationFrame|FileSystem)|solveLocalFileSystemURL)|TCPeerConnection)|IDB(?:(?:ObjectStor|Databas|KeyRang)e|Transaction|Factory|Request|Cursor|Index)|Speech(?:Recognition(?:E(?:rror|vent))?|Grammar(?:List)?)|Exit(?:PointerLock|Fullscreen)|(?:Offline)?AudioContext|MediaStream|URL)|rite(?:ln)?|indow)|M(?:e(?:dia(?:S(?:tream(?:Audio(?:Destination|Source)Node|Event|Track)?|ource)|E(?:lementAudioSourceNode|rror)|KeyE(?:rror|vent)|(?:Query)?List|Recorder)|ssage(?:(?:Even|Por)t|Channel))|o(?:z(?:(?:ContactChange|Application|Mms)Event|S(?:ms(?:Filter|Event)|ettingsEvent)|NamedAttrMap|PowerManager)|use(?:Scroll)?Event)|utation(?:Observer|Record|Event)|imeType(?:Array)?|ap)|c(?:reate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|a(?:ret(?:Position|Range)FromPoint|ncelAnimationFrame|ptureEvents)|o(?:n(?:t(?:ains|ent)|structor|firm)|mpareDocumentPosition)|l(?:ear(?:Interval|Timeout)?|o(?:neNod|s)e))|W(?:e(?:b(?:GL(?:Render(?:ingContext|buffer)|Shader(?:PrecisionFormat)?|(?:Frameb|B)uffer|UniformLocation|ContextEvent|VertexArray|ActiveInfo|Program|Texture)|Kit(?:CSS(?:(?:Filter(?:Valu|Rul)|TransformValu)e|Matrix)|(?:(?:Transi|Anima)tionEve|Poi)nt|MutationObserver|Gamepad)|Socket)|ak(?:Map|Set))|aveShaperNode|heelEvent|indow|orker)|I(?:DB(?:(?:VersionChangeEven|Reques)t|O(?:penDBRequest|bjectStore)|F(?:ileHandle|actory)|(?:Databas|KeyRang)e|Cursor(?:WithValue)?|Transaction|Index)|n(?:t(?:(?:16|32|8)Array|ernalError)|put(?:MethodContex|Even)t)|frame(?:Window|Proxy|Base)?|mage(?:Bitmap|Data)?|terator)|P(?:er(?:formance(?:(?:Resource)?Timing|M(?:easure|ark)|Navigation|Entry)?|iodicWave)|ro(?:(?:pertyNodeLis|gressEven)t|cessingInstruction|mise|xy)|a(?:(?:intReque(?:stLi)?s|geTransitionEven)t|nnerNode|th2D)|op(?:upBlocked|State)Event|honeNumberService|lugin(?:Array)?)|m(?:o(?:z(?:R(?:TC(?:(?:SessionDescrip|PeerConnec)tion|IceCandidate)|equestAnimationFrame)|C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|ontact)|ExitPointerLock|SetImageElement)|ve(?:By|To))|a(?:ybeRedirectForGBV|tchMedia))|A(?:u(?:dio(?:P(?:rocessingEvent|aram)|Buffer(?:SourceNode)?|(?:Destination)?Node|StreamTrack|Listener|Context)?|tocompleteErrorEvent)|pplicationCache(?:ErrorEvent)?|n(?:imationEvent|alyserNode)|rray(?:Buffer)?|ttr)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|(?:DefaultComputed|Override)Style|C(?:SSCanvasContext|omputedStyle)|I(?:nterface|tems)|MatchedCSSRules|Selection)|cscript)|T(?:ext(?:Track(?:Cue(?:List)?|List)?|E(?:ncoder|vent)|Decoder|Metrics)?|o(?:uch(?:(?:Even|Lis)t)?|olbarApi)|r(?:a(?:nsition|ck)Event|eeWalker)|ime(?:Ranges|Event)|ypeError)|R(?:TC(?:(?:PeerConnectionIce|DataChannel)Event|S(?:essionDescription|tatsReport)|IceCandidate)|e(?:c(?:ordErrorEven)?t|ferenceError|gExp)|ange(?:Error)?|GBColor)|X(?:ML(?:S(?:tylesheetProcessingInstruction|erializer)|HttpRequest(?:ProgressEvent|Upload)?|Document)|Path(?:E(?:xpression|valuator)|Result)|SLTProcessor)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|questAnimationFrame|gisterElement|size(?:By|To)|placeChild)|wt)|s(?:e(?:t(?:Resizable|Interval|Timeout)|lf)|croll(?:By(?:(?:Lin|Pag)es)?|To)?|howModalDialog|izeToContent|top)|N(?:o(?:t(?:if(?:yPaintEvent|ication)|ation)|de(?:(?:Iterato|Filte)r|List)?)|a(?:medNodeMap|vigator)|umber)|F(?:ile(?:Re(?:quest|ader)|Handle|Error|List)?|o(?:cusEvent|ntFace|rmData)|loat(?:32|64)Array|unction)|e(?:n(?:ableStyleSheetsForSet|codeURI(?:Component)?)|lementFromPoint|val(?:uate)?|xecCommand|scape)|O(?:(?:ffline(?:AudioCo(?:mpletionEven|ntex)|ResourceLis)|verflowEven|bjec)t|scillatorNode|ption)|U(?:int(?:8(?:Clamped)?|16|32)Array|R(?:L(?:SearchParams)?|IError)|(?:serProximity|I)Event)|E(?:v(?:ent(?:Source|Target)?|alError)|lem(?:entReplaceEv)?ent|rror(?:Event)?|xternal)|i(?:s(?:(?:(?:Equal|Same)Nod|DefaultNamespac|Finit)e|NaN)|(?:nsertBefor|mportNod)e)|B(?:a(?:tteryManager|rProp)|eforeUnloadEvent|iquadFilterNode|lob(?:Event)?|oolean)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|p(?:(?:ar(?:se(?:Floa|In)|en)|r(?:omp|in))t|ostMessage)|d(?:ecodeURI(?:Component)?|(?:ispatchEv|ocum)ent|ump)|a(?:d(?:dEventListener|optNode)|ppendChild|lert|tob)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|ome)|V(?:(?:alidityStat|TTCu)e|ideoStreamTrack)|Loc(?:a(?:lMediaStream|tion)|kedFile)|f(?:o(?:rward|cus)|unction|rames|ind)|o(?:pen(?:D(?:atabase|ialog))?|nblur)|Ga(?:mepad(?:Button|Event)?|inNode)|u(?:ne(?:scape|val)|pdateCommands)|lookup(?:NamespaceURI|Prefix)|Key(?:board)?Event|n(?:ormalize|ycli)|b(?:ack|lur|toa)|_gj(?:uc|h)|t(?:his|op))\b
)
|
(?:=|\*/)(?&amp;opt_spaces_including_left_paren)(?:[\-_\p{L}\p{N}$`]*+\.)?(?:S(?:VG(?:(?:(?:(?:F(?:E(?:D(?:i(?:s(?:placementMap|tantLight)|ffuseLighting)|ropShadow)|Co(?:mpo(?:nentTransfer|site)|(?:nvolve|lor)Matrix)|M(?:erg(?:eNod)?e|orphology)|Sp(?:ecularLighting|otLight)|(?:T(?:urbulenc|il)|Imag)e|(?:PointLigh|Offse)t|F(?:unc[ABGR]|lood)|GaussianBlur|Blend)|o(?:nt(?:Face(?:Format|Name|Src|Uri)?)?|reignObject)|ilter)|C(?:omponentTransferFunction|lipPath|ircle|ursor)|G(?:ra(?:dient|phics)|lyph(?:Ref)?|eometry)?|HKern|Image)Ele|D(?:(?:e(?:fs|sc)|iscard)Ele|ocu))men|S(?:(?:(?:crip|e)t|witch|ymbol|VG)Elemen|t(?:(?:yle|op)Elemen|ringLis))|R(?:e(?:c(?:tElemen)?|nderingInten)|adialGradientElemen))t|P(?:at(?:h(?:Seg(?:C(?:urveto(?:Quadratic(?:Smooth(?:Abs|Rel)|Abs|Rel)|Cubic(?:Smooth(?:Abs|Rel)|Abs|Rel))|losePath)|Li(?:neto(?:Horizontal(?:Abs|Rel)|Vertical(?:Abs|Rel)|Abs|Rel)|st)|Moveto(?:Abs|Rel)|Arc(?:Abs|Rel))?|Element)|ternElement)|o(?:ly(?:line|gon)Elemen|in(?:tLis)?)t|reserveAspectRatio)|A(?:n(?:imat(?:e(?:d(?:(?:Enumeratio|Boolea)n|(?:TransformLis|Rec)t|PreserveAspectRatio|Length(?:List)?|Number(?:List)?|Integer|String|Angle)|(?:Transform|Motion)?Element)|ionElement)|gle)|(?:ltGlyph(?:Item|Def)?)?Element)|T(?:(?:ext(?:P(?:ositioning|ath)|Content)?|Span|itle)Element|ransform(?:List)?)|M(?:(?:(?:issingGlyp|Pat)h|etadata)Element|a(?:(?:rker|sk)Element|trix))|L(?:ine(?:arGradient)?Element|ength(?:List)?)|El(?:ement(?:Instance)?|lipseElement)|V(?:iew(?:Element|Spec)|KernElement)|U(?:seElement|nitTypes)|Zoom(?:AndPan|Event)|Number(?:List)?)|t(?:yleShee(?:tLis)?t|orage(?:Event)?|ring)|cr(?:iptProcessorNode|ollAreaEvent|een)|peechSynthesis(?:Utterance|Event)|(?:impleGesture|martCard)Event|ha(?:redWorker|dowRoot)|e(?:lection|t)|yntaxError)|H(?:TML(?:(?:(?:T(?:able(?:C(?:(?:el|o)l|aption)|Section|Row)?|e(?:mplate|xtArea)|i(?:tl|m)e|rack)|M(?:e(?:nu(?:Item)?|t(?:er|a)|dia)|a(?:rquee|p)|od)|S(?:(?:crip|elec)t|(?:ourc|tyl)e|hadow|pan)|I(?:(?:Fram|mag)e|nput)|H(?:ead(?:ing)?|tml|R)|L(?:egend|abel|ink|I)|B(?:utton|ase|ody|R)|U(?:nknown|List)|(?:Embed)?|Keygen|Quote|Video)Ele|D(?:(?:i(?:rectory|v)|ata(?:List)?|List)Ele|ocu))ment|F(?:o(?:rm(?:ControlsCollection|Element)|ntElement)|(?:rame(?:Set)?|ieldSet)Element)|O(?:pt(?:ion(?:sCollection|Element)|GroupElement)|(?:bjec|utpu|Lis)tElement)|P(?:r(?:o(?:pertiesCollection|gressElement)|eElement)|ara(?:graph|m)Element)|A(?:(?:nchor|pplet|udio|rea)Element|llCollection)|C(?:o(?:ntentElement|llection)|anvasElement))|ashChangeEvent|istory)|C(?:SS(?:(?:(?:(?:Charse|Impor)t|Keyframes?|FontFace|Unknown|Media)Rul|P(?:rimitiveValu|ageRul))e|Style(?:Declaration|Sheet|Rule)|V(?:alue(?:List)?|iewportRule)|Rule(?:List)?|2Properties)?|o(?:m(?:m(?:andEv)?|positionEv)ent|n(?:volverNod|sol)e|unter)|a(?:nvas(?:RenderingContext2D|Gradient|Pattern)|retPosition)|(?:l(?:i(?:entRec(?:tLis)?|pboardEven)|oseEven)|ustomEven)t|ha(?:nnel(?:Splitt|Merg)erNode|racterData)|DATASection|rypto)|D(?:OM(?:S(?:tring(?:List|Map)|ettableTokenList)|Re(?:ct(?:ReadOnly|List)?|quest)|P(?:oint(?:ReadOnly)?|arser)|T(?:ransactionEven|okenLis)t|E(?:xception|rror)|(?:MMIErr|Curs)or|Implementation|Quad)|e(?:vice(?:(?:(?:Orienta|Mo)tion|Proximity|Light)Event|Storage(?:ChangeEvent)?)|sktopNotification(?:Center)?|layNode)|at(?:a(?:Transfer(?:ItemList)?|Channel|View)|e)|ocument(?:Fragment|Type)?|ynamicsCompressorNode|ragEvent)|w(?:ebkit(?:C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|onvertPointFrom(?:NodeToPag|PageToNod)e)|R(?:e(?:quest(?:AnimationFrame|FileSystem)|solveLocalFileSystemURL)|TCPeerConnection)|IDB(?:(?:ObjectStor|Databas|KeyRang)e|Transaction|Factory|Request|Cursor|Index)|Speech(?:Recognition(?:E(?:rror|vent))?|Grammar(?:List)?)|Exit(?:PointerLock|Fullscreen)|(?:Offline)?AudioContext|MediaStream|URL)|rite(?:ln)?|indow)|M(?:e(?:dia(?:S(?:tream(?:Audio(?:Destination|Source)Node|Event|Track)?|ource)|E(?:lementAudioSourceNode|rror)|KeyE(?:rror|vent)|(?:Query)?List|Recorder)|ssage(?:(?:Even|Por)t|Channel))|o(?:z(?:(?:ContactChange|Application|Mms)Event|S(?:ms(?:Filter|Event)|ettingsEvent)|NamedAttrMap|PowerManager)|use(?:Scroll)?Event)|utation(?:Observer|Record|Event)|imeType(?:Array)?|ap)|c(?:reate(?:E(?:lement(?:NS)?|xpression|vent)|N(?:odeIterato|SResolve)r|C(?:DATASection|omment)|T(?:reeWalker|extNode)|ProcessingInstruction|Attribute(?:NS)?|DocumentFragment|Range)|a(?:ret(?:Position|Range)FromPoint|ncelAnimationFrame|ptureEvents)|o(?:n(?:t(?:ains|ent)|structor|firm)|mpareDocumentPosition)|l(?:ear(?:Interval|Timeout)?|o(?:neNod|s)e))|W(?:e(?:b(?:GL(?:Render(?:ingContext|buffer)|Shader(?:PrecisionFormat)?|(?:Frameb|B)uffer|UniformLocation|ContextEvent|VertexArray|ActiveInfo|Program|Texture)|Kit(?:CSS(?:(?:Filter(?:Valu|Rul)|TransformValu)e|Matrix)|(?:(?:Transi|Anima)tionEve|Poi)nt|MutationObserver|Gamepad)|Socket)|ak(?:Map|Set))|aveShaperNode|heelEvent|indow|orker)|I(?:DB(?:(?:VersionChangeEven|Reques)t|O(?:penDBRequest|bjectStore)|F(?:ileHandle|actory)|(?:Databas|KeyRang)e|Cursor(?:WithValue)?|Transaction|Index)|n(?:t(?:(?:16|32|8)Array|ernalError)|put(?:MethodContex|Even)t)|frame(?:Window|Proxy|Base)?|mage(?:Bitmap|Data)?|terator)|P(?:er(?:formance(?:(?:Resource)?Timing|M(?:easure|ark)|Navigation|Entry)?|iodicWave)|ro(?:(?:pertyNodeLis|gressEven)t|cessingInstruction|mise|xy)|a(?:(?:intReque(?:stLi)?s|geTransitionEven)t|nnerNode|th2D)|op(?:upBlocked|State)Event|honeNumberService|lugin(?:Array)?)|m(?:o(?:z(?:R(?:TC(?:(?:SessionDescrip|PeerConnec)tion|IceCandidate)|equestAnimationFrame)|C(?:ancel(?:(?:Request)?AnimationFrame|FullScreen)|ontact)|ExitPointerLock|SetImageElement)|ve(?:By|To))|a(?:ybeRedirectForGBV|tchMedia))|A(?:u(?:dio(?:P(?:rocessingEvent|aram)|Buffer(?:SourceNode)?|(?:Destination)?Node|StreamTrack|Listener|Context)?|tocompleteErrorEvent)|pplicationCache(?:ErrorEvent)?|n(?:imationEvent|alyserNode)|rray(?:Buffer)?|ttr)|g(?:et(?:Element(?:sBy(?:(?:Class)?Name|TagName(?:NS)?)|ById)|(?:DefaultComputed|Override)Style|C(?:SSCanvasContext|omputedStyle)|I(?:nterface|tems)|MatchedCSSRules|Selection)|cscript)|T(?:ext(?:Track(?:Cue(?:List)?|List)?|E(?:ncoder|vent)|Decoder|Metrics)?|o(?:uch(?:(?:Even|Lis)t)?|olbarApi)|r(?:a(?:nsition|ck)Event|eeWalker)|ime(?:Ranges|Event)|ypeError)|R(?:TC(?:(?:PeerConnectionIce|DataChannel)Event|S(?:essionDescription|tatsReport)|IceCandidate)|e(?:c(?:ordErrorEven)?t|ferenceError|gExp)|ange(?:Error)?|GBColor)|X(?:ML(?:S(?:tylesheetProcessingInstruction|erializer)|HttpRequest(?:ProgressEvent|Upload)?|Document)|Path(?:E(?:xpression|valuator)|Result)|SLTProcessor)|r(?:e(?:move(?:EventListener|Child)|lease(?:Capture|Events)|questAnimationFrame|gisterElement|size(?:By|To)|placeChild)|wt)|s(?:e(?:t(?:Resizable|Interval|Timeout)|lf)|croll(?:By(?:(?:Lin|Pag)es)?|To)?|howModalDialog|izeToContent|top)|N(?:o(?:t(?:if(?:yPaintEvent|ication)|ation)|de(?:(?:Iterato|Filte)r|List)?)|a(?:medNodeMap|vigator)|umber)|F(?:ile(?:Re(?:quest|ader)|Handle|Error|List)?|o(?:cusEvent|ntFace|rmData)|loat(?:32|64)Array|unction)|e(?:n(?:ableStyleSheetsForSet|codeURI(?:Component)?)|lementFromPoint|val(?:uate)?|xecCommand|scape)|O(?:(?:ffline(?:AudioCo(?:mpletionEven|ntex)|ResourceLis)|verflowEven|bjec)t|scillatorNode|ption)|U(?:int(?:8(?:Clamped)?|16|32)Array|R(?:L(?:SearchParams)?|IError)|(?:serProximity|I)Event)|E(?:v(?:ent(?:Source|Target)?|alError)|lem(?:entReplaceEv)?ent|rror(?:Event)?|xternal)|i(?:s(?:(?:(?:Equal|Same)Nod|DefaultNamespac|Finit)e|NaN)|(?:nsertBefor|mportNod)e)|B(?:a(?:tteryManager|rProp)|eforeUnloadEvent|iquadFilterNode|lob(?:Event)?|oolean)|query(?:Command(?:S(?:upported|tate)|Indeterm|Enabled|Value)|Selector(?:All)?)|p(?:(?:ar(?:se(?:Floa|In)|en)|r(?:omp|in))t|ostMessage)|d(?:ecodeURI(?:Component)?|(?:ispatchEv|ocum)ent|ump)|a(?:d(?:dEventListener|optNode)|ppendChild|lert|tob)|h(?:as(?:(?:Attribut|ChildNod)e|Focu)s|ome)|V(?:(?:alidityStat|TTCu)e|ideoStreamTrack)|Loc(?:a(?:lMediaStream|tion)|kedFile)|f(?:o(?:rward|cus)|unction|rames|ind)|o(?:pen(?:D(?:atabase|ialog))?|nblur)|Ga(?:mepad(?:Button|Event)?|inNode)|u(?:ne(?:scape|val)|pdateCommands)|lookup(?:NamespaceURI|Prefix)|Key(?:board)?Event|n(?:ormalize|ycli)|b(?:ack|lur|toa)|_gj(?:uc|h)|t(?:his|op))\h*+(?:\|\||/[*/]|[)\v;:])</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-433</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2067">
            <Name>(default XSS_040a) HTML event handler in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_040a) HTML event handler</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?&lt;=[\h\v'&quot;`/:])on[a-z]{3,22}+[\h\v]*+=[^`(=]*+[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-434</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2068">
            <Name>(default XSS_040b) HTML event handler in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_040b) HTML event handler</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?&lt;=[\h\v'&quot;`/:])on[a-z]{3,22}+[\h\v]*+=[^`(=]*+[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-920</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2069">
            <Name>(default XSS_040c) HTML event handler in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30008</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default XSS_040c) HTML event handler</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?&lt;=[\h\v'&quot;`/:])on[a-z]{3,22}+[\h\v]*+=[^`(=]*+[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-223</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2070">
            <Name>(default XSS_045a) Known HTML event handler in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>BASIC</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_045a) Known HTML event handler</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?&lt;=[\h\v'&quot;`/:])on(?:p(?:o(?:inter(?:(?:lea|mo)ve|o(?:ver|ut)|cancel|enter|down|up)|p(?:up(?:hid(?:den|ing)|show(?:ing|n))|state))|a(?:ge(?:hide|show)|(?:st|us)e)|ro(?:pertychange|gress)|lay(?:ing)?)|d(?:r(?:ag(?:e(?:n(?:ter|d)|xit)|(?:gestur|leav)e|start|drop|over)?|op)|ata(?:setc(?:omplete|hanged)|available)|urationchange|blclick)|c(?:o(?:mmand(?:update)?|ntextmenu|py)|an(?:play(?:through)?|cel)|(?:ellc)?hange|u(?:echange|t)|l(?:ick|ose))|s(?:e(?:lec(?:tstar)?t|ek(?:ing|ed)|arch)|t(?:a(?:lled|rt)|o(?:rage|p))|u(?:spend|bmit)|croll|how)|b(?:efore(?:u(?:nload|pdate)|p(?:aste|rint)|c(?:opy|ut)|editfocus)|roadcast|ounce|lur)|r(?:ow(?:e(?:nter|xit)|inserted|sdelete)|e(?:adystatechange|s(?:ize|et)|do)|atechange)|lo(?:ad(?:ed(?:meta)?data|start)?|s(?:tpointer|e)capture)|f(?:o(?:rm(?:change|input)|cus)|i(?:lterchange|nish))|t(?:o(?:uch(?:cancel|start|move|end)|ggle)|imeupdate)|m(?:ouse(?:o(?:ver|ut)|wheel|down|move|up)|essage)|o(?:verflow(?:changed)?|(?:ff|n)line)|e(?:rror(?:update)?|(?:mpti|nd)ed)|(?:gotpointercaptur|volumechang)e|a(?:fter(?:update|print)|bort)|un(?:d(?:erflow|o)|load)|key(?:press|down|up)|h(?:ash?change|elp)|w(?:aiting|heel)|in(?:valid|put))[\h\v]*+=[^`(=]*+[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-435</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2071">
            <Name>(default XSS_045b) Known HTML event handler in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>BASIC</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_045b) Known HTML event handler</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?&lt;=[\h\v'&quot;`/:])on(?:p(?:o(?:inter(?:(?:lea|mo)ve|o(?:ver|ut)|cancel|enter|down|up)|p(?:up(?:hid(?:den|ing)|show(?:ing|n))|state))|a(?:ge(?:hide|show)|(?:st|us)e)|ro(?:pertychange|gress)|lay(?:ing)?)|d(?:r(?:ag(?:e(?:n(?:ter|d)|xit)|(?:gestur|leav)e|start|drop|over)?|op)|ata(?:setc(?:omplete|hanged)|available)|urationchange|blclick)|c(?:o(?:mmand(?:update)?|ntextmenu|py)|an(?:play(?:through)?|cel)|(?:ellc)?hange|u(?:echange|t)|l(?:ick|ose))|s(?:e(?:lec(?:tstar)?t|ek(?:ing|ed)|arch)|t(?:a(?:lled|rt)|o(?:rage|p))|u(?:spend|bmit)|croll|how)|b(?:efore(?:u(?:nload|pdate)|p(?:aste|rint)|c(?:opy|ut)|editfocus)|roadcast|ounce|lur)|r(?:ow(?:e(?:nter|xit)|inserted|sdelete)|e(?:adystatechange|s(?:ize|et)|do)|atechange)|lo(?:ad(?:ed(?:meta)?data|start)?|s(?:tpointer|e)capture)|f(?:o(?:rm(?:change|input)|cus)|i(?:lterchange|nish))|t(?:o(?:uch(?:cancel|start|move|end)|ggle)|imeupdate)|m(?:ouse(?:o(?:ver|ut)|wheel|down|move|up)|essage)|o(?:verflow(?:changed)?|(?:ff|n)line)|e(?:rror(?:update)?|(?:mpti|nd)ed)|(?:gotpointercaptur|volumechang)e|a(?:fter(?:update|print)|bort)|un(?:d(?:erflow|o)|load)|key(?:press|down|up)|h(?:ash?change|elp)|w(?:aiting|heel)|in(?:valid|put))[\h\v]*+=[^`(=]*+[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-921</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2072">
            <Name>(default XSS_045c) Known HTML event handler in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30008</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>BASIC</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default XSS_045c) Known HTML event handler</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?&lt;=[\h\v'&quot;`/:])on(?:p(?:o(?:inter(?:(?:lea|mo)ve|o(?:ver|ut)|cancel|enter|down|up)|p(?:up(?:hid(?:den|ing)|show(?:ing|n))|state))|a(?:ge(?:hide|show)|(?:st|us)e)|ro(?:pertychange|gress)|lay(?:ing)?)|d(?:r(?:ag(?:e(?:n(?:ter|d)|xit)|(?:gestur|leav)e|start|drop|over)?|op)|ata(?:setc(?:omplete|hanged)|available)|urationchange|blclick)|c(?:o(?:mmand(?:update)?|ntextmenu|py)|an(?:play(?:through)?|cel)|(?:ellc)?hange|u(?:echange|t)|l(?:ick|ose))|s(?:e(?:lec(?:tstar)?t|ek(?:ing|ed)|arch)|t(?:a(?:lled|rt)|o(?:rage|p))|u(?:spend|bmit)|croll|how)|b(?:efore(?:u(?:nload|pdate)|p(?:aste|rint)|c(?:opy|ut)|editfocus)|roadcast|ounce|lur)|r(?:ow(?:e(?:nter|xit)|inserted|sdelete)|e(?:adystatechange|s(?:ize|et)|do)|atechange)|lo(?:ad(?:ed(?:meta)?data|start)?|s(?:tpointer|e)capture)|f(?:o(?:rm(?:change|input)|cus)|i(?:lterchange|nish))|t(?:o(?:uch(?:cancel|start|move|end)|ggle)|imeupdate)|m(?:ouse(?:o(?:ver|ut)|wheel|down|move|up)|essage)|o(?:verflow(?:changed)?|(?:ff|n)line)|e(?:rror(?:update)?|(?:mpti|nd)ed)|(?:gotpointercaptur|volumechang)e|a(?:fter(?:update|print)|bort)|un(?:d(?:erflow|o)|load)|key(?:press|down|up)|h(?:ash?change|elp)|w(?:aiting|heel)|in(?:valid|put))[\h\v]*+=[^`(=]*+[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-224</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2073">
            <Name>(default XSS_050a) CSS expression in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_050a) CSS expression</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|[\v\h:=/\x{200b}])(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)e(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)x(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)p(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)r(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)e(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)s(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)s(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)i(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)o(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)n(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)\([^(=]*+[(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-436</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2074">
            <Name>(default XSS_050b) CSS expression in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_050b) CSS expression</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|[\v\h:=/\x{200b}])(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)e(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)x(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)p(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)r(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)e(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)s(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)s(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)i(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)o(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)n(?:(?:/\*(?:(?!\*/).)*+\*/)*+|\\)\([^(=]*+[(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-922</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2077">
            <Name>(default DOR_002a) Absolute UNIX path - known top level directory in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_002a) Absolute UNIX path - known top level directory</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^/[./]*(?:bin|boot|cdrom|data|dev|devices|etc|export|files|home|import|kernel|lib|lib32|lib64|lost+found|media|mnt|net|opt|platform|private|proc|rescue|root|run|sbin|selinux|srv|sys|tmp|usr|var|vol)/[./]*[^/ ]{2}[^ ]*$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-438</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2078">
            <Name>(default DOR_003a) Absolute UNIX path - environment variables in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_003a) Absolute UNIX path - environment variables</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
   (?&lt;env_var_name>{.*(?&lt;![a-z0-9])(?&amp;env_var_name)\b.*}|HOME|PWD|MAIL|PATH|JAVA_HOME|LD_LIBRARY_PATH|SHELL)
   (?&lt;env_var>\&quot;(?&amp;env_var)\&quot;|\$(?&amp;env_var_name))
)(?:^|/)(?&amp;env_var)(?:/|$)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-439</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2079">
            <Name>(default DOR_004a) Absolute UNIX path - critical system files in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_004a) Absolute UNIX path - critical system files</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^/[./]*etc/[./]*(?:crontab|group|passwd|master\.passwd|shadow|hosts|issue|ssh/.*)-?$
^/[./]*proc/[./]*(?:cmdline|self/.*)$  
^/[./]*var[./]*(?:db|mail)/</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-440</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2080">
            <Name>(default DOR_005a) Critical application files in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_005a) Critical application files</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|/|\\)\.(?:bash_history|[a-z]*rc|[a-z_.]*profile|ht(?:access|passwd))$
(?:^|/|\\)\.ssh2?[\\/]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-441</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2081">
            <Name>(default DOR_006a) Absolute UNIX path - critical application files in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_006a) Absolute UNIX path - critical application files</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^/[./]*etc/[./]*(?:httpd/.*|apache2?/.*|nginx.*|my\.cnf|mysql/.*|php\.ini)$
^/[./]*var/[a-z0-9/]*access[_\.]log</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-442</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2083">
            <Name>(default DOR_008a) Universal Naming Convention in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_008a) Universal Naming Convention</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^(?:\\{2}\?\\|[\\/]{2})[^\\/]{3,}[\\/]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-444</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2084">
            <Name>(default DOR_009a) Absolute Windows path - common top level directories in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_009a) Absolute Windows path - common top level directories</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^(?:(?:\\{2}\?\\)?(?:[a-z]:))?[\\/][.\\/]*(?:(?:Archivos de )?Program[a-z0-9() ]*|temp|Users|Benutzer|utilisateurs|utente|usuario|Document[a-z ]*|Docume~1|Windows|WinNT|\$Recycle.Bin|System Volume Information|MSOCache|Recovery|[a-z]{6}~[1-9])[\\/][^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}$
^(?:(?:\\{2}\?\\)?(?:[a-z]:))?[\\/][.\\/]*(?:boot\.ini|[a-z]+\.sys|\.rnd)$
^%(?:ALLUSERSPROFILE|APPDATA|CD|COMPUTERNAME|COMMONPROGRAMFILES(?:\(x86\))?|COMSPEC|HOMEDRIVE|HOMEPATH|LOCALAPPDATA|LOGONSERVER|D?PATH|PATHEXT|PROGRAMDATA|PROGRAMFILES|PROGRAMFILES(?:\(x86\))?|PROMPT|PSModulePath|PUBLIC|SystemDrive|SystemRoot|TE?MP|USERDOMAIN|USERNAME|USERPROFILE|windir|__(?:CD|APPDIR)__|=[a-z]:)%</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-445</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2085">
            <Name>(default DOR_010a) Directory traversal for Windows and UNIX in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_010a) Directory traversal for Windows and UNIX</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|[/\\])\.\.[/\\]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-446</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2086">
            <Name>(default DOR_010c) Directory traversal for Windows and UNIX in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30009</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default DOR_010c) Directory traversal for Windows and UNIX</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|[/\\])\.\.[/\\]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-226</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2087">
            <Name>(default DOR_011a) Critical file suffixes in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_011a) Critical file suffixes</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|/|\\)[^@]{2,30}\.(?:asa|asax|ascx|backup|bak|bat|cdx|cer|cfg|class|cmd|config(?:uration)?|conf|cs|csproj|csr|dat|(?&lt;!/Thumbs\.)db|dbf|dos|exe|htr|htw|ida|idc|idq|inc|(?&lt;!/desktop\.)ini|key|licx|lnk|log|mdb|old|pass|pdb|pol|printer|properties|pwd|resources|resx|sql|sys|vb|vbs|vbproj|vsdisco|webinfo|xsx)$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-447</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2088">
            <Name>(default DOR_011c) Critical file suffixes in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30009</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default DOR_011c) Critical file suffixes</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:^|/|\\)[^@]{2,30}\.(?:asa|asax|ascx|backup|bak|bat|cdx|cer|cfg|class|cmd|config(?:uration)?|conf|cs|csproj|csr|dat|(?&lt;!/Thumbs\.)db|dbf|dos|exe|htr|htw|ida|idc|idq|inc|(?&lt;!/desktop\.)ini|key|licx|lnk|log|mdb|old|pass|pdb|pol|printer|properties|pwd|resources|resx|sql|sys|vb|vbs|vbproj|vsdisco|webinfo|xsx)$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-227</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2089">
            <Name>(default DOR_012c) Critical elements in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30009</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default DOR_012c) Critical elements</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\\/]\.(?:git|hg|svn)[\\/]
(?:^|/|\\)\.ht(?:access|passwd)$
[\\/](?:cgi-bin[\\/][.\\/]*(?:printenv|test-cgi)|server-(?:status|info)|(?:jmx|web)-console|phpmyadmin)
[\\/](?:phpinfo\.php|config\.inc)$
[\\/]wp-admin(?:[\\/]|$)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-228</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2090">
            <Name>(default DOR_013a) Critical protocol schemes in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_013a) Critical protocol schemes</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^(?:bzip2?|data|expect|file|ftps?|glob|ogg|phar|php|rar|ssh2?|zip|zlib|):[/]{2,}[^/]{3}</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-448</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2092">
            <Name>(default DOR_014a) Protocol scheme in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) Not Location parameter</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Location$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-305</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default DOR_014a) Protocol scheme</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^(?!http)[a-z0-9.\-]{3,25}:\/\/</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-449</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2096">
            <Name>(default ENC_005a) MIN_VALUE floating point attack in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30003</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) MIN_VALUE floating point attack</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>2\.?2\.?2\.?5\.?0\.?7\.?3\.?8\.?5\.?8\.?5\.?0\.?7\.?2\.?0\.?1\.?[123]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-451</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2097">
            <Name>(default ENC_005b) MIN_VALUE floating point attack in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30015</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) MIN_VALUE floating point attack</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>2\.?2\.?2\.?5\.?0\.?7\.?3\.?8\.?5\.?8\.?5\.?0\.?7\.?2\.?0\.?1\.?[123]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-923</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2099">
            <Name>(default SAN_005d) Sanity check of parameter name</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30010</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default SAN_005d) Sanity check</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^(?:amp;)?+.*[&quot;'&amp;;&lt;=>\p{C}]
^[\h\v]*-[[:alpha:]]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-307</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2100">
            <Name>(default SAN_010a) Full-/half-width unicode in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30011</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SAN_010a) Full-/half-width unicode</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\x{FF01}-\x{FF5E}]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-452</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2101">
            <Name>(default SAN_010b) Full-/half-width unicode in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30013</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SAN_010b) Full-/half-width unicode</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\x{FF01}-\x{FF5E}]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-924</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2102">
            <Name>(default SAN_010c) Full-/half-width unicode in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30014</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default SAN_010c) Full-/half-width unicode</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\x{FF01}-\x{FF5E}]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-232</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2103">
            <Name>(default SAN_010d) Full-/half-width unicode in parameter name</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30010</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default SAN_010d) Full-/half-width unicode</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\x{FF01}-\x{FF5E}]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-308</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2104">
            <Name>(default SAN_015d) Non-printable characters in parameter name</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30010</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default SAN_015d) Non-printable characters</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[\P{C}\h]*$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-309</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2105">
            <Name>(default SAN_015c) Non-printable characters in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30014</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default SAN_015c) Non-printable characters</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[\P{C}\h]*$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-233</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2106">
            <Name>(default SAN_020a) Non-printable characters in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30011</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SAN_020a) Non-printable characters</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[\P{C}\h\v\x{200b}\x{200e}\x{200f}]*$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-453</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2107">
            <Name>(default SAN_025e) Enforce alphanumeric characters in HTTP header name</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30012</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default SAN_025e) Enforce alphanumeric characters</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[a-zA-Z][a-zA-Z0-9\-_.]+$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-807</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2108">
            <Name>(default SAN_030b) Enforce printable ASCII characters in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30013</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SAN_030b) Enforce printable ASCII characters</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[^[:print:]]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-925</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2109">
            <Name>(default HPE_001a) Response header injection in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30002</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HPE_001a) Response header injection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\n\r]\h*[[:graph:]]{6,}[\h]*:[^\v]{6,}</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-454</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2110">
            <Name>(default HPE_005a) Critical response header injection in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30002</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HPE_005a) Critical response header injection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\n\r](?:Location|Set-Cookie2?|Content-Length|Content-Type|Content-Disposition|Refresh)\h*:[^\v]{6,}</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-455</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2111">
            <Name>(default HPE_010a) Response body injection in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30002</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HPE_010a) Response body injection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\n\r?\n.*&lt;[\P{C}\h\v]{10}</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-456</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2112">
            <Name>(default HPE_015a) Critical response body injection in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30002</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HPE_015a) Critical response body injection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\n\r?\n.*&lt;(?:meta|html|body|head)[^a-z0-9]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-457</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2113">
            <Name>(default HPE_020a) HTTP parameter pollution in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30017</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HPE_020a) HTTP parameter pollution</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&amp;[\-%_:.~[:alnum:]]+=.</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-458</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2114">
            <Name>(default SQL_005a) Expression in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_005a) Expression in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot;(?&lt;dquote>) |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL))(?&lt;dquote>) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?
(?:
    (?:
        ,(?&amp;opt_spaces)
        (?:
            (?&amp;expr_list)(?&amp;opt_spaces), |
            (?:(?&amp;expr_list)(?&amp;opt_spaces))?(?&amp;inverse_brackets)(?:(?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)(?&amp;binary_op))?
        )
        |
        (?:(?&amp;r_expr)(?&amp;opt_spaces))?
        (?:
            (?&amp;binary_op) |
            (?&amp;inverse_brackets)(?:(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op))?
        )
    )(?&amp;opt_spaces)(?&amp;opt_unary_ops)(?:(?&amp;string)(?&amp;opt_spaces))?(?&amp;opt_charset_or_quoted_var)(?(dquote)&quot;|') 
    |
    (?:
        (?&amp;r_expr)? |
        ,(?&amp;opt_spaces)(?:(?&amp;expr_list)|(?&amp;closing_bracket_expr_list)) |
        (?&amp;r_closing_bracket_expr)
    )(?&amp;opt_spaces)(?:;|--|\#|(?&amp;keyword))
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-459</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2115">
            <Name>(default SQL_005b) Expression in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_005b) Expression in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot;(?&lt;dquote>) |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL))(?&lt;dquote>) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?
(?:
    (?:
        ,(?&amp;opt_spaces)
        (?:
            (?&amp;expr_list)(?&amp;opt_spaces), |
            (?:(?&amp;expr_list)(?&amp;opt_spaces))?(?&amp;inverse_brackets)(?:(?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)(?&amp;binary_op))?
        )
        |
        (?:(?&amp;r_expr)(?&amp;opt_spaces))?
        (?:
            (?&amp;binary_op) |
            (?&amp;inverse_brackets)(?:(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op))?
        )
    )(?&amp;opt_spaces)(?&amp;opt_unary_ops)(?:(?&amp;string)(?&amp;opt_spaces))?(?&amp;opt_charset_or_quoted_var)(?(dquote)&quot;|') 
    |
    (?:
        (?&amp;r_expr)? |
        ,(?&amp;opt_spaces)(?:(?&amp;expr_list)|(?&amp;closing_bracket_expr_list)) |
        (?&amp;r_closing_bracket_expr)
    )(?&amp;opt_spaces)(?:;|--|\#|(?&amp;keyword))
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-926</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2116">
            <Name>(default SQL_030a) New statement in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_030a) New statement in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;statement_with_condition>\bif\b(?&amp;opt_spaces)(?&amp;expr)(?:.*\belse\b)?(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement)))
    (?&lt;statement>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter|begin|create|delete|desc(?:ribe)?|drop|exec(?:ute)?|insert|load(?:_file)?|select|show|shutdown|truncate|update|waitfor|while)\b)
    (?&lt;statement_no_semicolon>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter(?&amp;mand_space)table\b|create(?&amp;mand_space)(?:table|user)\b|delete(?&amp;mand_space)from\b|drop(?&amp;mand_space)(?:table|database)\b|insert(?&amp;mand_space)into\b|shutdown(?:(?&amp;mand_space)with(?&amp;mand_space)nowait)?(?&amp;opt_spaces)(?:$|--|;)|truncate(?&amp;mand_space)(?:(?:table)(?&amp;mand_space))?+(?&amp;name)\b|update(?&amp;mand_space)(?&amp;name)(?&amp;mand_space)set\b|waitfor\b))
    (?&lt;cmd>;(.*;)?(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement))|(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement_no_semicolon)))
)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)
(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;closing_bracket_expr)(?&amp;opt_spaces))?(?:(?&amp;keyword)[^;]*)?(?&amp;cmd)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-460</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2117">
            <Name>(default SQL_030b) New statement in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_030b) New statement in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;statement_with_condition>\bif\b(?&amp;opt_spaces)(?&amp;expr)(?:.*\belse\b)?(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement)))
    (?&lt;statement>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter|begin|create|delete|desc(?:ribe)?|drop|exec(?:ute)?|insert|load(?:_file)?|select|show|shutdown|truncate|update|waitfor|while)\b)
    (?&lt;statement_no_semicolon>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter(?&amp;mand_space)table\b|create(?&amp;mand_space)(?:table|user)\b|delete(?&amp;mand_space)from\b|drop(?&amp;mand_space)(?:table|database)\b|insert(?&amp;mand_space)into\b|shutdown(?:(?&amp;mand_space)with(?&amp;mand_space)nowait)?(?&amp;opt_spaces)(?:$|--|;)|truncate(?&amp;mand_space)(?:(?:table)(?&amp;mand_space))?+(?&amp;name)\b|update(?&amp;mand_space)(?&amp;name)(?&amp;mand_space)set\b|waitfor\b))
    (?&lt;cmd>;(.*;)?(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement))|(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement_no_semicolon)))
)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)
(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;closing_bracket_expr)(?&amp;opt_spaces))?(?:(?&amp;keyword)[^;]*)?(?&amp;cmd)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-927</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2118">
            <Name>(default SQL_050a) Condition elimination in unquoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_050a) Condition elimination in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;end>(?:;|(?&amp;comment)|/\*)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=.*?(?&amp;end))(?&amp;opt_spaces)(?:
    (?&amp;expr) |
    (?=[^)]*\))(?&amp;closing_bracket_expr) |
    ^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?&amp;r_closing_bracket_expr)?
)(?&amp;mand_space)?(?&amp;end)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-461</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2119">
            <Name>(default SQL_050b) Condition elimination in unquoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 3</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Accept$
^Accept-Charset$
^Accept-Encoding$
^Accept-Language$
^Cache-Control$
^Content-Range$
^Content-Type$
^Range$
^User-Agent$
^Want-Digest$
^X-UCBrowser-UA$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-809</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_050b) Condition elimination in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;end>(?:;|(?&amp;comment)|/\*)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=.*?(?&amp;end))(?&amp;opt_spaces)(?:
    (?&amp;expr) |
    (?=[^)]*\))(?&amp;closing_bracket_expr) |
    ^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?&amp;r_closing_bracket_expr)?
)(?&amp;mand_space)?(?&amp;end)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-928</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2120">
            <Name>(default SQL_055a) Condition elimination in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_055a) Condition elimination in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT))^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;r_closing_bracket_expr)(?&amp;opt_spaces))?--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-462</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2121">
            <Name>(default SQL_055b) Condition elimination in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_055b) Condition elimination in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT))^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;r_closing_bracket_expr)(?&amp;opt_spaces))?--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-929</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2122">
            <Name>(default SQL_060a) Set operator in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_060a) Set operator</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;set_operator>(?:(?:union(?:(?&amp;mand_space)(?:all|distinct))?|intersect|minus|except)(?:[(\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++select\b)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=.*(?&amp;set_operator))(?:
    (?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\)(?:(?&amp;opt_spaces)(?&amp;r_expr))?)*(?&amp;opt_spaces)(?:(?&amp;keyword).*)?(?&amp;set_operator) |
    ^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;closing_bracket_expr)(?&amp;opt_spaces))?(?:(?&amp;keyword).*)?(?&amp;set_operator)
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-463</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2123">
            <Name>(default SQL_060b) Set operator in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_060b) Set operator</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;set_operator>(?:(?:union(?:(?&amp;mand_space)(?:all|distinct))?|intersect|minus|except)(?:[(\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++select\b)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=.*(?&amp;set_operator))(?:
    (?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\)(?:(?&amp;opt_spaces)(?&amp;r_expr))?)*(?&amp;opt_spaces)(?:(?&amp;keyword).*)?(?&amp;set_operator) |
    ^(?=[^&quot;']*+['&quot;])[^\\&quot;']*+(?x)(?:
  [^&quot;]*+&quot; |
  [^']*+' |
  (?:[^\\&quot;]++|\\\\|\\&quot;(?&lt;q>)|\\)*+&quot;(?(q)|(*FAIL)) |
  (?:[^\\']++|\\\\|\\'(?&lt;q>)|\\)*+'(?(q)|(*FAIL))
)(?&amp;opt_spaces)(?:(?&amp;string)(?&amp;opt_spaces))?(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;closing_bracket_expr)(?&amp;opt_spaces))?(?:(?&amp;keyword).*)?(?&amp;set_operator)
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-930</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2124">
            <Name>(default HTML_004a) Known HTML attribute in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30023</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HTML_004a) Known HTML attribute in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>['&quot;](*COMMIT).*(?&lt;=[\h\v'&quot;`/:])(?:(?:c(?:o(?:nt(?:e(?:nt(?:editable)?|xtmenu)|rols)|de(?:(?:bas|typ)e)?|l(?:s(?:pan)?|or)|m(?:mand|pact)|ords)|h(?:a(?:r(?:off|set)?|llenge)|ecked)|ell(?:padd|spac)ing|l(?:ass(?:id)?|ear)|rossorigin|ite)|s(?:t(?:a(?:ndby|rt)|yle|ep)|c(?:rolling|oped?|heme)|rc(?:lang|doc|set)?|e(?:amless|lected)|p(?:ellcheck|an)|ort(?:able|ed)|andbox|ummary|izes?|hape)|a(?:c(?:ce(?:p(?:t-charse)?t|sskey)|tion)|l(?:lowfullscreen|i(?:gn|nk)|t)|uto(?:complete|focus|play)|(?:ttributeNam|rchiv)e|sync|bbr|xis)|m(?:a(?:rgin(?:height|width)|x(?:length)?|nifest)|e(?:dia(?:group)?|thod|nu)|u(?:ltiple|ted)|in(?:length)?)|d(?:(?:r(?:aggabl|opzon)|atetim)e|e(?:f(?:ault|er)|clare)|i(?:r(?:name)?|sabled)|ownload)|f(?:or(?:m(?:(?:novalidat|enctyp)e|action|method|target)?)?|rame(?:border)?|ace)|r(?:e(?:v(?:ersed)?|adonly|quired|l)|ows(?:pan)?|adiogroup|ules)|h(?:e(?:aders|ight)|i(?:dden|gh)|ref(?:lang)?|ttp-equiv|space)|t(?:ype(?:mustmatch)?|(?:ranslat|itl)e|a(?:bindex|rget)|ext)|i(?:tem(?:(?:sco|ty)pe|prop|ref|id)|nputmode|smap|con|d)|p(?:r(?:o(?:file|mpt)|eload)|(?:lacehold|ost)er|attern)|l(?:a(?:ng(?:uage)?|bel)|o(?:ngdesc|op|w)|i(?:nk|st))|n(?:o(?:(?:validat|resiz|shad)e|href|wrap)|ame)|v(?:al(?:ue(?:type|s)?|ign)|ersion|space|link)|b(?:(?:gcolo|orde)r|ackground)|o(?:p(?:timum|en)|bject)|e(?:nctype|vent)|k(?:eytype|ind)|w(?:idth|rap)|usemap)|data(?:-[a-z]+)?)[\h\v]*=[^=>]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-464</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2125">
            <Name>(default HTML_004b) Known HTML attribute in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30024</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 1</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Content-Type$
^Sec-Metadata$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-808</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default HTML_004b) Known HTML attribute in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>['&quot;](*COMMIT).*(?&lt;=[\h\v'&quot;`/:])(?:(?:c(?:o(?:nt(?:e(?:nt(?:editable)?|xtmenu)|rols)|de(?:(?:bas|typ)e)?|l(?:s(?:pan)?|or)|m(?:mand|pact)|ords)|h(?:a(?:r(?:off|set)?|llenge)|ecked)|ell(?:padd|spac)ing|l(?:ass(?:id)?|ear)|rossorigin|ite)|s(?:t(?:a(?:ndby|rt)|yle|ep)|c(?:rolling|oped?|heme)|rc(?:lang|doc|set)?|e(?:amless|lected)|p(?:ellcheck|an)|ort(?:able|ed)|andbox|ummary|izes?|hape)|a(?:c(?:ce(?:p(?:t-charse)?t|sskey)|tion)|l(?:lowfullscreen|i(?:gn|nk)|t)|uto(?:complete|focus|play)|(?:ttributeNam|rchiv)e|sync|bbr|xis)|m(?:a(?:rgin(?:height|width)|x(?:length)?|nifest)|e(?:dia(?:group)?|thod|nu)|u(?:ltiple|ted)|in(?:length)?)|d(?:(?:r(?:aggabl|opzon)|atetim)e|e(?:f(?:ault|er)|clare)|i(?:r(?:name)?|sabled)|ownload)|f(?:or(?:m(?:(?:novalidat|enctyp)e|action|method|target)?)?|rame(?:border)?|ace)|r(?:e(?:v(?:ersed)?|adonly|quired|l)|ows(?:pan)?|adiogroup|ules)|h(?:e(?:aders|ight)|i(?:dden|gh)|ref(?:lang)?|ttp-equiv|space)|t(?:ype(?:mustmatch)?|(?:ranslat|itl)e|a(?:bindex|rget)|ext)|i(?:tem(?:(?:sco|ty)pe|prop|ref|id)|nputmode|smap|con|d)|p(?:r(?:o(?:file|mpt)|eload)|(?:lacehold|ost)er|attern)|l(?:a(?:ng(?:uage)?|bel)|o(?:ngdesc|op|w)|i(?:nk|st))|n(?:o(?:(?:validat|resiz|shad)e|href|wrap)|ame)|v(?:al(?:ue(?:type|s)?|ign)|ersion|space|link)|b(?:(?:gcolo|orde)r|ackground)|o(?:p(?:timum|en)|bject)|e(?:nctype|vent)|k(?:eytype|ind)|w(?:idth|rap)|usemap)|data(?:-[a-z]+)?)[\h\v]*=[^=>]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-931</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2126">
            <Name>(default HTML_004c) Known HTML attribute in quoted context in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30025</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default HTML_004c) Known HTML attribute in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>['&quot;](*COMMIT).*(?&lt;=[\h\v'&quot;`/:])(?:(?:c(?:o(?:nt(?:e(?:nt(?:editable)?|xtmenu)|rols)|de(?:(?:bas|typ)e)?|l(?:s(?:pan)?|or)|m(?:mand|pact)|ords)|h(?:a(?:r(?:off|set)?|llenge)|ecked)|ell(?:padd|spac)ing|l(?:ass(?:id)?|ear)|rossorigin|ite)|s(?:t(?:a(?:ndby|rt)|yle|ep)|c(?:rolling|oped?|heme)|rc(?:lang|doc|set)?|e(?:amless|lected)|p(?:ellcheck|an)|ort(?:able|ed)|andbox|ummary|izes?|hape)|a(?:c(?:ce(?:p(?:t-charse)?t|sskey)|tion)|l(?:lowfullscreen|i(?:gn|nk)|t)|uto(?:complete|focus|play)|(?:ttributeNam|rchiv)e|sync|bbr|xis)|m(?:a(?:rgin(?:height|width)|x(?:length)?|nifest)|e(?:dia(?:group)?|thod|nu)|u(?:ltiple|ted)|in(?:length)?)|d(?:(?:r(?:aggabl|opzon)|atetim)e|e(?:f(?:ault|er)|clare)|i(?:r(?:name)?|sabled)|ownload)|f(?:or(?:m(?:(?:novalidat|enctyp)e|action|method|target)?)?|rame(?:border)?|ace)|r(?:e(?:v(?:ersed)?|adonly|quired|l)|ows(?:pan)?|adiogroup|ules)|h(?:e(?:aders|ight)|i(?:dden|gh)|ref(?:lang)?|ttp-equiv|space)|t(?:ype(?:mustmatch)?|(?:ranslat|itl)e|a(?:bindex|rget)|ext)|i(?:tem(?:(?:sco|ty)pe|prop|ref|id)|nputmode|smap|con|d)|p(?:r(?:o(?:file|mpt)|eload)|(?:lacehold|ost)er|attern)|l(?:a(?:ng(?:uage)?|bel)|o(?:ngdesc|op|w)|i(?:nk|st))|n(?:o(?:(?:validat|resiz|shad)e|href|wrap)|ame)|v(?:al(?:ue(?:type|s)?|ign)|ersion|space|link)|b(?:(?:gcolo|orde)r|ackground)|o(?:p(?:timum|en)|bject)|e(?:nctype|vent)|k(?:eytype|ind)|w(?:idth|rap)|usemap)|data(?:-[a-z]+)?)[\h\v]*=[^=>]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-234</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2127">
            <Name>(default HTML_002a) Known HTML tag in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30023</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default HTML_002a) Known HTML tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;!?(?:t(?:(?:i(?:tl|m)|abl)e|e(?:mplate|xtarea)|(?:foo)?t|h(?:ead)?|r(?:ack)?|body|span|d)|a(?:nimate(?:Motion)?|r(?:ticle|ea)|ltGlyph|cronym|ddress|pplet|side|udio|bbr)?|s(?:e(?:ction|lect)|u(?:[bp]|mmary)|tr(?:ike|ong)|ource|mall|amp|pan|vg)?|c(?:o(?:l(?:or-profile|group)?|de)|a(?:ption|nvas)|(?:ente|urso)r|ite)|f(?:i(?:g(?:caption|ure)|eldset)|o(?:oter|nt|rm)|rame(?:set)?)|d(?:[dlt]|i(?:[rv]|alog)|ata(?:list)?|e(?:tails|l)|fn)|m(?:e(?:nu(?:item)?|t(?:er|a))|a(?:r(?:quee|k)|in|p))|b(?:ase(?:font)?|lockquote|d[io]|utton|ody|ig|r)?|h(?:[123456]|(?:andle)?r|ead(?:er)?|tml)|i(?:m(?:age|g)|n(?:put|s)|sindex|frame)?|l(?:i(?:n(?:earGradient|k))?|egend|abel)|o(?:pt(?:group|ion)|(?:bjec|utpu)t|l)|p(?:a(?:ttern|ram)|r(?:ogress|e))?|r(?:[bp]|adialGradient|tc?|uby)|n(?:o(?:frames|script)|av)|k(?:eygen|bd)|v(?:ideo|ar)|em(?:bed)?|u(?:se|l)?|wbr|q)[/\h\v].*(?&lt;=[\h\v'&quot;`/:])[a-z][a-z0-9._\-]{2,}[\h\v]*=.{3}
&lt;!?(?:s(?:cript|tyle)|picture|math)[>/\h\v]
&lt;!--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-465</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2128">
            <Name>(default HTML_002b) Known HTML tag in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30024</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default HTML_002b) Known HTML tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;!?(?:t(?:(?:i(?:tl|m)|abl)e|e(?:mplate|xtarea)|(?:foo)?t|h(?:ead)?|r(?:ack)?|body|span|d)|a(?:nimate(?:Motion)?|r(?:ticle|ea)|ltGlyph|cronym|ddress|pplet|side|udio|bbr)?|s(?:e(?:ction|lect)|u(?:[bp]|mmary)|tr(?:ike|ong)|ource|mall|amp|pan|vg)?|c(?:o(?:l(?:or-profile|group)?|de)|a(?:ption|nvas)|(?:ente|urso)r|ite)|f(?:i(?:g(?:caption|ure)|eldset)|o(?:oter|nt|rm)|rame(?:set)?)|d(?:[dlt]|i(?:[rv]|alog)|ata(?:list)?|e(?:tails|l)|fn)|m(?:e(?:nu(?:item)?|t(?:er|a))|a(?:r(?:quee|k)|in|p))|b(?:ase(?:font)?|lockquote|d[io]|utton|ody|ig|r)?|h(?:[123456]|(?:andle)?r|ead(?:er)?|tml)|i(?:m(?:age|g)|n(?:put|s)|sindex|frame)?|l(?:i(?:n(?:earGradient|k))?|egend|abel)|o(?:pt(?:group|ion)|(?:bjec|utpu)t|l)|p(?:a(?:ttern|ram)|r(?:ogress|e))?|r(?:[bp]|adialGradient|tc?|uby)|n(?:o(?:frames|script)|av)|k(?:eygen|bd)|v(?:ideo|ar)|em(?:bed)?|u(?:se|l)?|wbr|q)[/\h\v].*(?&lt;=[\h\v'&quot;`/:])[a-z][a-z0-9._\-]{2,}[\h\v]*=.{3}
&lt;!?(?:s(?:cript|tyle)|picture|math)[>/\h\v]
&lt;!--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-932</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2129">
            <Name>(default HTML_002c) Known HTML tag in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30025</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default HTML_002c) Known HTML tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;!?(?:t(?:(?:i(?:tl|m)|abl)e|e(?:mplate|xtarea)|(?:foo)?t|h(?:ead)?|r(?:ack)?|body|span|d)|a(?:nimate(?:Motion)?|r(?:ticle|ea)|ltGlyph|cronym|ddress|pplet|side|udio|bbr)?|s(?:e(?:ction|lect)|u(?:[bp]|mmary)|tr(?:ike|ong)|ource|mall|amp|pan|vg)?|c(?:o(?:l(?:or-profile|group)?|de)|a(?:ption|nvas)|(?:ente|urso)r|ite)|f(?:i(?:g(?:caption|ure)|eldset)|o(?:oter|nt|rm)|rame(?:set)?)|d(?:[dlt]|i(?:[rv]|alog)|ata(?:list)?|e(?:tails|l)|fn)|m(?:e(?:nu(?:item)?|t(?:er|a))|a(?:r(?:quee|k)|in|p))|b(?:ase(?:font)?|lockquote|d[io]|utton|ody|ig|r)?|h(?:[123456]|(?:andle)?r|ead(?:er)?|tml)|i(?:m(?:age|g)|n(?:put|s)|sindex|frame)?|l(?:i(?:n(?:earGradient|k))?|egend|abel)|o(?:pt(?:group|ion)|(?:bjec|utpu)t|l)|p(?:a(?:ttern|ram)|r(?:ogress|e))?|r(?:[bp]|adialGradient|tc?|uby)|n(?:o(?:frames|script)|av)|k(?:eygen|bd)|v(?:ideo|ar)|em(?:bed)?|u(?:se|l)?|wbr|q)[/\h\v].*(?&lt;=[\h\v'&quot;`/:])[a-z][a-z0-9._\-]{2,}[\h\v]*=.{3}
&lt;!?(?:s(?:cript|tyle)|picture|math)[>/\h\v]
&lt;!--</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-235</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2130">
            <Name>(default UNIX_001a) Bash command injection exploiting Shellshock bug in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30018</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default UNIX_001a) Bash command injection exploiting Shellshock bug</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^\h*\(\) \{</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-466</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2131">
            <Name>(default UNIX_001b) Bash command injection exploiting Shellshock bug in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30019</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default UNIX_001b) Bash command injection exploiting Shellshock bug</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^\h*\(\) \{</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-933</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2132">
            <Name>(default SAN_021a) Non-printable characters strict in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30011</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SAN_021a) Non-printable characters strict</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[\P{C}\h\v\x{200e}\x{200f}]*$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-467</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2141">
            <Name>(default AS_001a) SQL injection test with parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default AS_001a) SQL injection test</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^1'&quot;$
^\x{00BF}'\x{00BF}&quot;$
^\x{00F0}''\x{00F0}&quot;&quot;$
^1\x{00C0}\x{0001}xa7\x{00C0}\x{00a2}$
^\x{0040}\x{0040}[[:alnum:]]{5}$
^JyI=$
^'\ or\ \d=\d$
^'\ ?and\ \d=\d$
^\\$
^\x23''\x23&quot;&quot;$
^3\ AND\ 3\*2\*1=6\ AND\ ([0-9]{3})=\1$
^\d\ OR\ \d=\d$
^\w'\w&quot;\w'\w&quot;$
^(?:test|true)\ AND\ \d=\d(?:\ --)?
^''''&quot;&quot;&quot;&quot;$
^'&quot;'&quot;'&quot;'&quot;$
^\*/;?\ WAITFOR\ DELAY\ '[0-9:]+'--$
^\d\ or\ \d=\d\ WAITFOR\ DELAY\ '[0-9:]+'--$
^(?:true|test)\ ASC\ *--$
^Test(?:%|XYZABCDEFGHIJ)$
^Test\)\)\ AND\ \d{4}=\d{4}
^1&quot;'`
^1\)$
^-\d\ or\ \d=\d
^\d'\|\|!?this'$
^&quot;;return\ true;
^1(?:'&quot;|\\'\\&quot;)$
`sleep\ \d`$
[|&amp;]timeout\ /T\ [0-9{}&amp;]+$
UNION\ ALL\ select\ NULL\ --$
=DBMS_PIPE\.RECEIVE_MESSAGE\(CHR\(
sleep(?:\(\d|\ \{\d|\ \ds)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-475</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2142">
            <Name>(default AS_005a) XSS injection test with parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default AS_005a) XSS injection test</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\w{5}&lt;/->\w{5}/\*\w{5}&quot;\w{10}'\w{10}`\w{10} =$
\b\w{5}(?:&lt;/->|&lt;/| =|/\*)$
^(\w{5})(?:'|&quot;|`)\1$
^;alert\(\d\);?$
src=http://badsite\.com$
arachni_(?:name|user|secret|text|js|xss)
&lt;some_dangerous_input_
^vbscript:
^' ?onMouseOver=</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-476</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2143">
            <Name>(default AS_010a) XPath injection test with parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default AS_010a) XPath injection test</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^'&quot;$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-477</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2144">
            <Name>(default AS_015a) OS command injection test with parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default AS_015a) OS command injection test</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^`set\|set&amp;set`$
^\nset\|set&amp;set\n$
^set\|set&amp;set$
^;set\|set&amp;set;$
ping -[cn] \d localhost`?$
(?:^|; |/bin/)cat /etc/passwd(?:&amp;|$)
^`(?:true|false|uname)`$
[;\x0A]env$
^; */bin/sleep +\d</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-478</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2145">
            <Name>(default AS_020a) PHP code injection test with parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default AS_020a) PHP code injection test</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>acunetix_wvs_security_test
^echo str_repeat\(
^(?:\$\{@|;)print(?:\(| \d)
^String\.fromCharCode\(
^exit\(base64_decode\(
^` sleep \d
^phpinfo\(\);</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-479</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2146">
            <Name>(default AS_025a) XML injection test with parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default AS_025a) XML injection test</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;/?sfish></PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-480</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2147">
            <Name>(default AS_050b) Penetration testing tool detection with HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default AS_050b.1) Special headers of vulnerability scanners</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^User-Agent$
^Acunetix-</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-811</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default AS_050b) Penetration testing tool detection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\b(?:sqlmap|nessus|acunetix|Havij|w3af(?:\.org)?|Arachni|Nikto|bsqlbf|Hydra|WebScarab|DAV|webshag|UserAgent)\b</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-935</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2148">
            <Name>(default AS_052a) Penetration testing tool detection with parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30020</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default AS_052a) Penetration testing tool detection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^http://www.acunetix.com(?:/|$)
w3af\.org/rfi\.html$
arachni-scanner\.com/rfi\.md5\.txt$
http://vega\.invalid/
^vega://invalid/</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-481</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2149">
            <Name>(default XSS_055a) XSS filter evasion using arrays and objects in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_055a) XSS filter evasion using arrays and objects</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_non_possessive>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*)
    (?&lt;mand_space>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])++)
    (?&lt;js_comment>(?:/\*.*?\*/|//[^\v]*+[\v]))
    (?&lt;opt_spaces_including_left_paren>(?:[\h\v(]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_including_right_paren>(?:[\h\v)]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;quoted_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1})++)
    (?&lt;unary_op>[+\-!~])
    (?&lt;js_operator>[;+\-*/%~?=&lt;>|&amp;:!])
    (?&lt;var_name>[^\h\v!?,.&quot;'`#@%&amp;()*+,\-~/:;&lt;>=|[\]{}^]+)
    (?&lt;js_variable>(?&amp;opt_spaces)(?:(?&amp;quoted_string)|(?&amp;var_name)))
    (?&lt;js_func_call>(?&amp;js_variable)(?&amp;opt_spaces)(?:\([^)]*+\)|`[^`]*+`))
    (?&lt;js_array_method>(?:(?:i(?:sPrototype|ndex)|value)Of|p(?:ropertyIsEnumerable|ush|op)|__(?:define|lookup)[GS]etter__|s(?:o(?:me|rt)|p?lice|hift)|re(?:duce(?:Right)?|verse)|l(?:astIndexOf|ength)|con(?:structor|cat)|to(?:Locale)?String|f(?:orEach|ilter)|e(?:ntries|very)|hasOwnProperty|unshift|join|keys|map))
    (?&lt;array_element>(?:(?:(?&amp;js_variable)|(?&amp;js_func_call))(?:(?&amp;opt_spaces)=(?&amp;opt_spaces)(?:(?&amp;js_variable)|(?&amp;js_func_call)))?))
    (?&lt;multi_arr_elems>(?&amp;unary_op)?(?&amp;array_element)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unary_op)?(?&amp;array_element))*+)
    (?&lt;array>(?:new(?&amp;mand_space)Array(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;multi_arr_elems)?(?&amp;opt_spaces)\))|(?:\[(?&amp;opt_spaces)(?&amp;multi_arr_elems)?(?&amp;opt_spaces)\]))
    (?&lt;filter>\[(?&amp;opt_spaces)(?&amp;multi_arr_elems)(?&amp;opt_spaces)\]|\.(?&amp;opt_spaces)(?&amp;js_array_method))
    (?&lt;object_element>(?&amp;js_variable)(?&amp;opt_spaces):(?&amp;js_variable))
    (?&lt;object>\{(?&amp;opt_spaces)(?&amp;object_element)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;object_element))*+(?&amp;opt_spaces)\})
)(?x)
(?=^.*?[`(])(*COMMIT)
^.*?
(?:
    (?:
        (?&amp;js_operator)(?&amp;opt_spaces)
        (?:
            (?&amp;array)|
            (?&amp;object)
        )
    .*?){2}(*COMMIT)
|
    (?:
        (?&amp;array)|
        (?&amp;object)
    )
    (?&amp;opt_spaces)(?&amp;filter)
)
(?:
    [^(]*?\((*COMMIT)[^)]*?\)
|
    [^`]*?`(*COMMIT)[^`]*?`
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-482</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2150">
            <Name>(default XSS_055b) XSS filter evasion using arrays and objects in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_055b) XSS filter evasion using arrays and objects</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_non_possessive>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])*)
    (?&lt;mand_space>(?:[\h\v]|/\*.*?\*/|//[^\v]*+[\v])++)
    (?&lt;js_comment>(?:/\*.*?\*/|//[^\v]*+[\v]))
    (?&lt;opt_spaces_including_left_paren>(?:[\h\v(]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;opt_spaces_including_right_paren>(?:[\h\v)]|/\*.*?\*/|//[^\v]*+[\v])*+)
    (?&lt;quoted_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1})++)
    (?&lt;unary_op>[+\-!~])
    (?&lt;js_operator>[;+\-*/%~?=&lt;>|&amp;:!])
    (?&lt;var_name>[^\h\v!?,.&quot;'`#@%&amp;()*+,\-~/:;&lt;>=|[\]{}^]+)
    (?&lt;js_variable>(?&amp;opt_spaces)(?:(?&amp;quoted_string)|(?&amp;var_name)))
    (?&lt;js_func_call>(?&amp;js_variable)(?&amp;opt_spaces)(?:\([^)]*+\)|`[^`]*+`))
    (?&lt;js_array_method>(?:(?:i(?:sPrototype|ndex)|value)Of|p(?:ropertyIsEnumerable|ush|op)|__(?:define|lookup)[GS]etter__|s(?:o(?:me|rt)|p?lice|hift)|re(?:duce(?:Right)?|verse)|l(?:astIndexOf|ength)|con(?:structor|cat)|to(?:Locale)?String|f(?:orEach|ilter)|e(?:ntries|very)|hasOwnProperty|unshift|join|keys|map))
    (?&lt;array_element>(?:(?:(?&amp;js_variable)|(?&amp;js_func_call))(?:(?&amp;opt_spaces)=(?&amp;opt_spaces)(?:(?&amp;js_variable)|(?&amp;js_func_call)))?))
    (?&lt;multi_arr_elems>(?&amp;unary_op)?(?&amp;array_element)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unary_op)?(?&amp;array_element))*+)
    (?&lt;array>(?:new(?&amp;mand_space)Array(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;multi_arr_elems)?(?&amp;opt_spaces)\))|(?:\[(?&amp;opt_spaces)(?&amp;multi_arr_elems)?(?&amp;opt_spaces)\]))
    (?&lt;filter>\[(?&amp;opt_spaces)(?&amp;multi_arr_elems)(?&amp;opt_spaces)\]|\.(?&amp;opt_spaces)(?&amp;js_array_method))
    (?&lt;object_element>(?&amp;js_variable)(?&amp;opt_spaces):(?&amp;js_variable))
    (?&lt;object>\{(?&amp;opt_spaces)(?&amp;object_element)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;object_element))*+(?&amp;opt_spaces)\})
)(?x)
(?=^.*?[`(])(*COMMIT)
^.*?
(?:
    (?:
        (?&amp;js_operator)(?&amp;opt_spaces)
        (?:
            (?&amp;array)|
            (?&amp;object)
        )
    .*?){2}(*COMMIT)
|
    (?:
        (?&amp;array)|
        (?&amp;object)
    )
    (?&amp;opt_spaces)(?&amp;filter)
)
(?:
    [^(]*?\((*COMMIT)[^)]*?\)
|
    [^`]*?`(*COMMIT)[^`]*?`
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-936</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2151">
            <Name>(default UNIX_005a) UNIX command injection in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30018</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default UNIX_005a) UNIX command injection in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v(]|#[^\v]*[\v]|\\\v)*)
    (?&lt;cmd_op>(?:;|\|\||&amp;&amp;|&amp;|\||&lt;\(|&lt;\h+&lt;\(|(?&amp;inline_op)))
    (?&lt;cmd_boundary>[;|&amp;`'&quot;{$\v\h]|$)
    (?&lt;inline_op>(?:`|\$\())
    (?&lt;file_op>(?:(?&lt;!&lt;)&lt;&lt;&lt;|(?&lt;!>)>>|(?&lt;!>)>\||(?&lt;!&lt;)&lt;|(?&lt;!>)>))
    (?&lt;system_variable>\$[A-Z_][A-Z0-9_]*\b)
    (?&lt;file_character>(?:[^\h\\]|\\\\|\\\h))
    (?&lt;file_glob>(?:(?=(?&amp;file_character)*[\/])(?=(?&amp;file_character)*[\*?])(?&amp;file_character){3,}))
    (?&lt;func_name>[^\v\h!&lt;>|&amp;`&quot;';$()]+)
    (?&lt;func_def>(?&amp;func_name)\h*\(\h*\)(?&amp;opt_spaces)\{)
    (?&lt;list_element_comma>[^\h\v,}]*)
    (?&lt;list_element_dot>[^\h\v\.}]*)
    (?&lt;glob_list>[a-z]*?\{(?:(?:(?&amp;list_element_comma),)+(?&amp;list_element_comma)|(?:(?&amp;list_element_dot)\.\.){1,2}(?&amp;list_element_dot))})
    (?&lt;spec_param>\$[*@$!?\-_])
    (?&lt;rel_path>(?:(?=(?&amp;file_character)*\.\./)(?&amp;file_character)*))
    (?&lt;path_exp>~(?:\w+\b|\+|-|/))
    (?&lt;path>(?:(?&amp;rel_path)|(?&amp;tld)|(?&amp;path_exp)|(?&amp;file_glob)))
    (?&lt;string>(?:(?&amp;nonconcat_string)+))
    (?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
    (?&lt;variable>[a-z_][^{}\h\v=&lt;>|&amp;`&quot;';$]*)
    (?&lt;value>(?&amp;string)|(?&amp;variable_usage)|(?:[^{}\h\v=&lt;>|&amp;`&quot;';$]*))
    (?&lt;assignment>(?&amp;variable)=\(?(?&amp;value))
    (?&lt;variable_usage>\$\{?(?&amp;variable))
    (?&lt;param_expansion>\$\{[^!\^,~*@#%\/:\-=+?}]*[!\^,~*@#%\/:\-=+?])
    (?&lt;split_cmd>\w+\\\v)
    (?&lt;tld>[./]*(?:bin|boot|cdrom|data|dev|devices|etc|export|files|home|import|kernel|lib|lib32|lib64|lost+found|media|mnt|net|opt|platform|private|proc|rescue|root|run|sbin|selinux|srv|sys|tmp|usr|var|vol)/[./]*[^/\h]{2}[^\h]*)
    (?&lt;os_command>\b(?:g(?:nome-(?:s(?:hell(?:-(?:extension-(?:prefs|tool)|perf-tool))?|ession(?:-(?:inhib|qu)it)?|ystem-(?:monitor|log)|creenshot)|c(?:ont(?:rol-center|acts)|haracter-map|alculator|locks)|t(?:e(?:xt-editor|rminal)|humbnail-font)|d(?:isk(?:-image-mounter|s)|ocuments)|keyring(?:-(?:daemon|3))?|font-viewer|help)|r(?:ub(?:2-(?:m(?:k(?:(?:standalon|imag)e|re(?:lpath|scue)|(?:layou|fon)t|passwd-pbkdf2|netdir)|enulst2cfg)|s(?:cript-check|yslinux2cfg)|f(?:stest|ile)|render-label|glue-efi|editenv|kbdcomp)|-install)|o(?:up(?:(?:ad|mo)d|del|s)|(?:wisof|p)s|ff(?:er)?|tty|g)|p(?:c(?:onv|k)|unconv)|e(?:source|p))|s(?:t(?:-(?:(?:(?:inspect|launch)|typefind)-(?:0.1|1.)|(?:xml(?:inspect|launch)|feedback)-0.1)0|ack)|ettings(?:-data-convert)?|dj(?:500)?|l[jp]|bj|nd)?|p(?:g(?:-(?:(?:connect-)?agent|zip)|parsemail|key2ssh|split|conf|v2?|2)?|k-(?:(?:install-local-fil|dbus-servic)e|prefs|log)|asswd|rof|ic|m)|vfs-(?:m(?:o(?:nitor-(?:file|dir)|unt|ve)|kdir|ime)|s(?:et-attribut|av)e|r(?:ename|m)|tr(?:ash|ee)|c(?:opy|at)|l(?:es)?s|info|open)|e(?:t(?:c(?:ifsacl|onf|ap)|(?:keycode|pcap)s|e(?:ltorito|nt)|fa(?:ttr|cl)|text(?:.sh)?|hostip|opts?)|n(?:isoimage|cat)|dit|qn)|c(?:m-(?:i(?:nspec|mpor)t|(?:pick|view)er|calibrate)|o(?:nf(?:-merge-tree|tool-2)|re)|r-viewer|alccmd|c)|d(?:m(?:-screenshot|flexiserver)|k-pixbuf-query-loaders-64|b(?:-add-index|us)?|isk)|t(?:k-(?:update-icon-cache(?:-3.0)?|query-immodules-[23].0-64|launch)|bl|f)|a(?:mma4scanimage|pplication|tttool|wk)|l(?:ib-compile-schemas|x(?:gears|info))|kbd-keyboard-display|io-querymodules-64|u(?:charma|nzi)p|js(?:-console)?|z(?:exe|ip)|hostscript|make)|s(?:y(?:s(?:tem(?:d-(?:t(?:ty-ask-password-agent|mpfiles)|a(?:sk-password|nalyze)|c(?:g(?:top|ls)|at)|de(?:tect-virt|lta)|machine-id-setup|n(?:otify|spawn)|stdio-bridge|inhibit|run)|-config-printer(?:-applet)?|ctl)?|l(?:inux|ogd)|klogd|ctl)|n(?:c(?:lient)?|daemon))|e(?:[dq]|t(?:(?:l(?:ogcon|ed)|keycode)s|f(?:a(?:ttr|cl)|dprm|ont)|v(?:esablank|trgb)|c(?:ifsacl|ap)|s(?:erial|id)|p(?:riv|ci)|metamode|xkbmap|quota|arch|term)?|rv(?:ertool|ice)|n(?:dmail|sors)|ahorse|ssreg|lect)|t(?:a(?:rt(?:-(?:pulseaudio-(?:kde|x11)|statd)|x)|td?)|r(?:(?:ac(?:e-log-merg)?|fil)e|i(?:ngs|p)|eam)|dbuf|ty)|h(?:o(?:w(?:(?:consolefo|mou)nt|key|rgb)|pt)|a(?:(?:2(?:24|56)|384|512|1)?sum|resec)|u(?:tdown|f)|ift|red)?|m(?:b(?:c(?:(?:quota|acl)s|lient4?|ontrol)|t(?:a(?:-util|r)|ree)|passwd|spool|get)|-notify)|c(?:r(?:ipt(?:replay)?|een(?:dump)?)|p(?:-dbus-service)?|an(?:image|adf))|p(?:e(?:ech-dispatcher|aker-test)|d-(?:conf|say)|l(?:ain|it)|rof)|s(?:h(?:-(?:key(?:sca|ge)n|a(?:gent|dd)|copy-id)|d)?)?|a(?:ne(?:-find-scanner|d)|mba-regedit|fe_finger)|l(?:a(?:ttach|btop)|o(?:cate|gin)|eep)|u(?:do(?:replay|edit)?|login|shi|m)?|w(?:ap(?:o(?:ff|n)|label)|itch_root)|o(?:(?:ffi|ur)ce|truss|elim|xi?|rt)|bc(?:(?:de|en)c|info)|i(?:mple-scan|ze)|d(?:ptool|iff)|f(?:disk|tp)|g(?:disk)?|kill|nice|2p)|p(?:a(?:m(?:_t(?:imestamp_check|ally2)|on)|r(?:t(?:probe|ed|x)|ec(?:ord)?)|ngo-(?:querymodules-64|view)|s(?:uspender|swd|te)|c(?:at|md|tl)|t(?:hchk|ch)|x11publish|play|dsp)|d(?:f(?:to(?:p(?:pm|s)|cairo|html|text)|(?:separa|uni)te|i(?:mages|nfo)|2(?:dsc|ps)|detach|fonts)|bedit)|s(?:2(?:p(?:df(?:1[234]|wr)?|s2?)|(?:asci|eps)i)|f(?:strip|add|get|x)table|tr(?:ee(?:.x11)?|uct)|ed)?|o(?:d(?:2(?:latex|usage|html|text|man)|checker|select)|st-grohtml|weroff|rtmap|pd)|r(?:e(?:-grohtml|conv)|int(?:afm|env|f)|(?:limi|tsta)t|o(?:files|ve)|aliases)?|m(?:-(?:(?:suspen(?:d-hybri)?|is-supporte)d|(?:hibernat|powersav)e)|ap)|i(?:n(?:entry(?:-curses)?|g6?|ky)|c(?:o(?:nv)?)?|vot_root|xeltool|dof)|p(?:p(?:oe-discovery|d(?:ump)?|stats)|d(?:[ci]|merge|html|po)|hs)|u(?:rple-(?:send(?:-async)?|url-handler|remote)|lseaudio|shd)|y(?:thon(?:3(?:.4m?)?|2(?:.7)?)?|doc(?:3(?:.4)?)?|venv-3.4)|k(?:(?:acti|m)on|c(?:heck|on)|g-config|ttyagent|exec|ill)|e(?:rl(?:thanks|bug|doc|ivp)?|ekfd)|l(?:ipconfig|ymouthd?|2pm|ay|dd)|w(?:c(?:onv|k)|unconv|dx?)|t(?:ar(?:diff|grep)?|x)|f(?:btopfa|2afm)|11-kit|nm2ppa|grep)|m(?:[4v]|k(?:f(?:s(?:.(?:(?:cram|nt|b)fs|m(?:inix|sdos)|ext[234]|v?fat))?|ont(?:scale|dir)|ifo)|(?:lost+foun|rai)d|i(?:nitrd|sofs)|homedir_helper|(?:swa|tem)p|d(?:osfs|ir)|n(?:tfs|od)|manifest|zftree|e2fs)|o(?:u(?:nt(?:.(?:n(?:tfs(?:-3g)?|fs4?)|lowntfs-3g|fuse)|point|stats|d)?|setweaks)|d(?:probe|info)|(?:ntag|r)e|grify)|s(?:g(?:c(?:o(?:mm|nv)|at|mp)|f(?:ilter|mt)|un(?:fmt|iq)|e(?:xec|n)|attrib|merge|grep|init)|ho(?:rtname|wfat))|a(?:ke(?:d(?:eltarpm|bm?)|map)?|il(?:[qx]|stats|to)?|p(?:file|scrn)|n(?:path|db)?|chinectl|ttrib)|c(?:-(?:wait-for-name|tool)|o(?:okie|mp|py)|lasserase|heck|at|d)|d(?:el(?:(?:, mdel)?tree)?|5sum|ir|u)|e(?:ta(?:mail|send)|mdiskfind|rge|sg)|p(?:g(?:123|321)|artition)|i(?:mencode|i-tool|nfo)|t(?:ools(?:test)?|ype)?|m(?:o(?:unt|ve)|cli|d)|(?:utte|xta)r|badblocks|r(?:en|d)|format|label|zip)|c(?:u(?:ps(?:-(?:(?:genppdupd|calibr)ate|browsed)|a(?:ccept|ddsmb)|test(?:dsc|ppd)|d(?:isable)?|enable|filter|reject|ctl)|rl|t)|h(?:a(?:t(?:tr)?|rmap|cl|ge)|e(?:ck-binary-files|ese)|(?:r(?:oo)?|v)t|(?:passw|mo)d|c(?:on|pu)|(?:ow|f)n|kconfig|grp|sh)|a(?:r(?:ibou-preferences|d(?:ctl|mgr))|n(?:berra-gtk-play|cel)|l(?:ibrate_ppa|ler)?|t(?:chsegv|man)?|p(?:toinfo|sh)|se)|o(?:m(?:p(?:(?:osit|ar)e|ress)|(?:binedeltarp)?m)|n(?:(?:tinu|jur)e|fig_data|vert)|l(?:ormgr|crt|umn|rm)?|relist)|r(?:acklib-(?:(?:un)?packer|format|check)|eate-(?:cracklib-dict|jar-links)|on(?:tab|d)?|c32|da)|d(?:-(?:(?:create|fix)-profile|iccdump)|r(?:ecord|dao)|paranoia|da2wav)?|i(?:fs(?:creds|dd)|ptool)|lea(?:n-binary-files|r)|t(?:rlaltdel|stat|ags)|(?:_rehas|2p)h|p(?:an|io|p)?|[fg]disk|split|v[st]|ksum|mp|c)|l(?:o(?:g(?:(?:rotat|nam|sav)e|in(?:ctl)?|ger|out)|c(?:a(?:l(?:e(?:ctl|def)?|c)?|te)|kfile)|w(?:ntfs-3g|riter|eb)|f(?:romtemplat|fic)e|ad(?:unimap|keys)|impress|setup|draw|math|ok)|s(?:b(?:_release|lk)|(?:initr|mo)d|lo(?:gin|ck)s|p(?:gpot|ci)|usb(?:.py)?|attr|cpu|of)?|i(?:b(?:ieee1284_test|reoffice|netcfg)|n(?:[ek]|ux(?:-boot-prober|32|64)))|p(?:[cq]|r(?:setup.sh|m)?|(?:_sol|mo)ve|options|passwd|admin|info|stat)?|z(?:m(?:a(?:info)?|ore)|c(?:at|mp)|[ef]?grep|diff|less)?|wp-(?:d(?:ownload|ump)|request|mirror)|d(?:(?:.(?:gol|bf))?d|attach|config)?|e(?:ss(?:echo|key)?|xgrog|t)|2(?:ping|test)|ast(?:log|b)?|ftp(?:get)?|u(?:ac?|it)|n(?:stat)?|convert)|r(?:e(?:[dv]|a(?:d(?:o(?:nly|m)|profile|array|link|elf|cd)?|lpath)|s(?:ize(?:(?:con|2f)s|part)?|tore|et)|g(?:d(?:bdump|iff)|patch|shell|tree)|b(?:uild-jar-repository|oot)|c(?:ode-sr-latin)?|n(?:am|ic)e|pquota|xecd?|ject|turn)|p(?:c(?:(?:.(?:idmap|stat|gss)|bin)d|client|debug|info|gen)|m(?:(?:verif|quer)y|2cpio|keys|db)?)|u(?:n(?:-parts|level|user|con)|p(?:time)?|sersd?)|t(?:(?:acc|sta)t|kitctl|cwake|mon)|m(?:i(?:registry|d)|ail|dir|mod)?|a(?:idstart|msize|nlib|rpd?|w)|o(?:ute[dfl]?|otflags)|s(?:y(?:slogd|nc)|hd?)|hythmbox(?:-client)?|d(?:istd?|ate|ev)|c(?:[cp]|test)|w(?:hod?|all)|n(?:ano|dc)|vi(?:ew|m)|ichtext|logind?|fcomm|bash)|d(?:[df]|b(?:_(?:(?:archiv|upgrad)e|(?:checkpoin|sta)t|d(?:eadlock|ump)|hotbackup|printlog|recover|verify|load)|us-(?:(?:(?:run-sessi|daem)o|uuidge)n|cleanup-sockets|monitor|launch|send)|wrap_tool)|e(?:sktop-file-(?:validate|install|edit)|(?:allocv|lpar)t|bugfs|clare|vdump|pmod)|ns(?:sec-(?:sign(?:zone|key)|makekeyset|keygen)|domainname|masq)|i(?:r(?:colors|split|name)?|ff(?:-jars|3)?|s(?:able|play)|g)|v(?:d+rw-(?:mediainfo|booktype|format)|d-ram-control|ipdf)|o(?:(?:tlockfil|mainnam)e|sfs(?:label|ck)|exec)|(?:hclien(?:t-scrip)?|racu)t|u(?:mp(?:(?:e2f|key)s)?)?|m(?:idecode|setup|esg)|c(?:onf)?|lpsh|ate|wp)|n(?:t(?:fs(?:(?:(?:trunca|undele)t|resiz|mov|wip)e|-3g(?:.(?:secaudit|usermap|probe))?|c(?:l(?:uster|one)|m?p|at)|l(?:abel|s)|decrypt|info|fix)|db(?:(?:backu|dum)p|restore|tool)|pdate)|m(?:tui(?:-(?:(?:connec|edi)t|hostname))?|-(?:connection-editor|applet|online)|blookup4?|cli)?|a(?:utilus(?:-(?:autorun-software|connect-server|sendto))?|me(?:if?|d)|no)|e(?:w(?:(?:aliase|user)s|grp)|t(?:s(?:csid|tat)|cat)?|qn)|f(?:s(?:i(?:ostat|dmap)|stat|d)|nl_osf)|s(?:lookup|update|enter|tat)|c(?:ursesw?5-config|at)?|o(?:tify-send|login|hup)|i(?:sdomainnam|c)e|(?:gettex|umfm)t|proc|roff|l)|e(?:u-(?:s(?:t(?:ri(?:ngs|p)|ack)|ize)|(?:objdum|unstri)p|make-debug-archive|r(?:eadelf|anlib)|a(?:ddr2line|r)|elf(?:lint|cmp)|findtextrel|nm)|s(?:d(?:c(?:at|tl)|-config|sample|play|dsp|mon|rec)?|cputil)|n(?:c(?:hant(?:-lsmod)?|2xs)|v(?:subst)?|able)|m(?:pathy(?:-(?:accounts|debugger))?|acs)|v(?:ince(?:-(?:thumbnail|preview)er)?|al)|2(?:f(?:reefrag|sck)|image|label|undo)|x(?:p(?:and|iry|ort|r)|ec|it)?|asy_install(?:-2.7)?|l(?:fedit|vtune)|d(?:quota|it)?|t(?:htool|ags)|(?:4defra|o)g|ps2eps|grep|ject|cho|qn)|u(?:n(?:i(?:x(?:_(?:chkpwd|update)|-lpr.sh)|code_st(?:art|op)|q)|s(?:et(?:a2p)?|hare)|o(?:conv|pkg)|a(?:lias|me)|l(?:ink|zma)|zip(?:sfx)?|compress|expand|til|xz)|p(?:date(?:-(?:(?:(?:ca-certificat|alternativ)e|pciid)s|(?:desktop|mime)-database)|db)|ower|time)|s(?:b(?:_modeswitch(?:_dispatcher)?|-devices|hid-dump|muxd)|er(?:(?:ad|mo)d|del|s)|leep)|m(?:ount(?:.(?:udisks2|nfs4?))?|a(?:x_pp|sk))|d(?:ev(?:adm|d)|isksctl)|l(?:ockmgr_server|imit)?|u(?:(?:de|en)code|idgen)|tmpdump|cs2any|xterm|ic3|z)|x(?:d(?:g-(?:user-dir(?:s(?:-gtk)?-update)?|s(?:creensaver|ettings)|(?:icon-resourc|mim)e|desktop-(?:icon|menu)|email|open)|(?:py|ri)info)|m(?:l(?:patterns(?:validator)?|catalog|lint|wf)|essage|odmap)|s(?:et(?:pointer|wacom|mode|root)?|(?:tdcma|ubp)p|ltproc)|z(?:d(?:iff|ec)|c(?:at|mp)|[ef]?grep|less|more)?|ls(?:(?:clie|fo)nt|atom)s|t(?:ables-multi|erm)|in(?:(?:pu|i)t|etd)|r(?:efresh|andr|db)|g(?:ettext|amma)|k(?:bcomp|ill)|(?:win|v)info|a(?:rgs|uth)|console|brlapi|host|prop|ev|xd)|i(?:p(?:t(?:ables(?:-(?:(?:restor|sav)e|apply|xml))?|unnel)|6tables(?:-(?:restor|sav)e)?|od-read-sysinfo-extended|c(?:mk|rm|s)|maddr|ptool)?|n(?:s(?:t(?:all(?:-(?:printerdriver|info)|kernel)?|modsh)|mod)|fo(?:(?:toca|cm)p|key)?|putattach|etd|it)|s(?:o(?:hybrid|dump|info|size|vfy)|dv4-serial-inputattach|pell)|bus(?:-(?:daemon|setup))?|c(?:onv(?:config)?|eauth)|f(?:config|down|up)?|r(?:qbalance|b)|m(?:port|apd)|d(?:entify)?|ecset|onice|gawk|386|w)|a(?:u(?:to(?:(?:updat|mak)e|(?:re)?conf|header|scan)|last(?:log)?|diosend|syscall|virt|mix)|p(?:ply(?:gnupgdefaults|deltarpm)|lay(?:midi)?|ropos|md?|t)|c(?:pi(?:_available|d)?|ce(?:ss(?:db)?|pt)|onnect|local)|dd(?:r(?:2line|esses)|gnupghome|part|user)|r(?:ecord(?:midi)?|p(?:ing|d)?|ch)?|lsa(?:-info.sh|mixer|loop|ctl|ucm)|m(?:i(?:xer|di)|uFormat.sh)|vahi-(?:autoipd|daemon)|s(?:eq(?:dump|net))?|n(?:acron|imate)|t(?:[dq]|rm|tr)?|bs2rel|getty|wk)|t(?:r(?:a(?:c(?:ker-(?:s(?:earch|parql|tats)|i(?:mport|nfo)|control|tag)|e(?:route6?|path6?))|nsmission-gtk|p)|u(?:(?:ncat)?e|st)|y-from|off)?|c(?:p(?:(?:tracerout|slic)e|d(?:match|ump)?)|lsh(?:8.6)?)?|o(?:[ep]|tem(?:-(?:video-thumbnailer|audio-preview))?|uch)|e(?:l(?:netd?|init)|st(?:parm)?|e)|a(?:[cr]|skset|ilf?|lkd?|bs)|i(?:me(?:datectl|out|s)?|c)|(?:s(?:or|e)|zselec|pu)t|une(?:2fs|lp)|ype(?:set)?|nameserv|mpwatch|ftpd?|load|bl|gz|ty)|f(?:i(?:n(?:d(?:2perl|-jar|mnt|fs)?|gerd?)|le(?:-roller|frag)?|ps(?:check|hmac)|xparts|refox)|s(?:ck(?:.(?:m(?:inix|sdos)|ext[234]|cramfs|v?fat))?|t(?:ab-decode|rim)|freeze)|c-(?:(?:patter|sca)n|ca(?:che|t)|validate|match|query|list)|u(?:n(?:ctionalias|zip)|ser(?:mount)?)|o(?:nt(?:tosfnt|2c)|r(?:mail)?|ld)|a(?:l(?:locat|s)e|tlabel|ctor)|g(?:console|rep)|d(?:format|isk)|l(?:ock|ex)|etchmail|tpd?|ree|mt)|b(?:u(?:il(?:d-(?:classpath(?:-directory)?|jar-repository)|tin)|nzip2|sctl)|z(?:ip2(?:recover)?|c(?:at|mp)|[ef]?grep|diff|less|more)|l(?:uetooth(?:-sendto|ctl|d)|k(?:discar|map|i)d|ockdev)|a(?:s(?:e(?:name|64)|h(?:bug)?)|dblocks|nner|obab|tch)|r(?:ltty(?:-(?:t(?:rtxt|tb)|ctb))?|oadwayd|idge|eak)|i(?:osdecode|son|ff|nd)|dft(?:runcate|opcf)|c(?:cmd)?|ootctl|tmon)|h(?:p(?:-(?:(?:t(?:estpag|imedat)|firmwar)e|l(?:ogcapture|evels)|c(?:olorcal|lean)|p(?:lugin|robe)|s(?:etup|can)|makeuri|unload|align|query|info)|ijs)|ci(?:attach|config|tool)|ost(?:name(?:ctl)?|id)?|e(?:(?:xdum|l)p|ad)|2(?:ph|xs)|a(?:lt|sh)|tdigest|unspell|wclock|dparm)|q(?:(?:help(?:converte|generato)|collectiongenerato)r|d(?:bus(?:cpp2xml|xml2cpp|viewer)?|oc3)|uota(?:o(?:ff|n)|check|stats)?|ml(?:plugindump|viewer)|tconfig)|o(?:o(?:impress|writer|ffice|calc|draw)|s(?:-prober|d_login)|bj(?:copy|dump)|pen(?:ssl|vt)?|Lschema2ldif|(?:ldfin)?d|n_ac_power|r(?:bd|ca)|wnership|mshell)|w(?:h(?:i(?:ptail|ch|le)|(?:ere|at)is|o(?:ami|is)?)|pa_(?:passphrase|supplicant|cli)|a(?:tch(?:gnupg)?|rnquota|ll)|ftopfa|ipefs|dctl|odim|rite|get|c)?|z(?:i(?:p(?:details|cloak|split|grep|info|note)?|c)|e(?:grep|nity)|f(?:grep|orce)|d(?:iff|ump)|new(?:bind)?|c(?:at|mp)|grep|less|more)|k(?:e(?:rnel(?:-install|version)|y(?:too|ct)l)|bd(?:(?:_mod|rat)e|info)|ill(?:all5?)?|(?:log|mo)d|oi8rxterm|udzu)|v(?:i(?:m(?:tutor|diff)?|(?:dmod|nagr)e|[ep]w|sudo|gr)?|m(?:mouse_detec|sta)t|(?:pddecod|olnam)e|dir|stp)|y(?:p(?:p(?:asswd?d|oll|ush)|(?:ini|tes|ca)t|(?:mat|whi)ch|domainname|se(?:rv|t)|bind|xfr)|e(?:lp|s)|acc)|j(?:o(?:urnalctl|bs|in)|ava(?:ws)?|son_pp|vmjar)|M(?:odemManager|ail)|X(?:wayland|org|11)|NetworkManager|c+\+(?:filt)?|g+\+)(?&amp;cmd_boundary))
    (?&lt;cmd_execution>(?&amp;os_command)|(?&amp;path)|(?&amp;system_variable)|(?&amp;func_def)|(?&amp;glob_list)+|(?&amp;spec_param)|(?&amp;param_expansion)|(?&amp;split_cmd))
)(?x)
^(?=.*&quot;)(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\&quot;|[^&quot;])*&quot;(?:[^&quot;]|(?&amp;nonconcat_string))*?
    (?:
        (?:(?&amp;opt_spaces)(?&amp;cmd_op))+
        (?:
            (?:(?&amp;opt_spaces)(?&amp;assignment))*(?&amp;opt_spaces)(?&amp;cmd_execution)|
            (?:(?&amp;opt_spaces)(?&amp;assignment))+(?&amp;cmd_boundary).*(?&amp;variable_usage)
        )|
        (?&amp;opt_spaces)(?&amp;file_op)(?&amp;opt_spaces)(?&amp;path)
    )
|
^(?=.*')(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\'|[^'])*'(?:[^']|(?&amp;nonconcat_string))*?
    (?:
        (?:(?&amp;opt_spaces)(?&amp;cmd_op))+
        (?:
            (?:(?&amp;opt_spaces)(?&amp;assignment))*(?&amp;opt_spaces)(?&amp;cmd_execution)|
            (?:(?&amp;opt_spaces)(?&amp;assignment))+(?&amp;cmd_boundary).*(?&amp;variable_usage)
        )|
        (?&amp;opt_spaces)(?&amp;file_op)(?&amp;opt_spaces)(?&amp;path)
      )
|
^(?=.*(?&amp;inline_op)).*(?&amp;inline_op)
    (?:(?:(?&amp;opt_spaces)(?&amp;assignment))*(?&amp;opt_spaces)(?&amp;cmd_execution)|
      (?:(?&amp;opt_spaces)(?&amp;assignment))+.*(?&amp;variable_usage))</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-483</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2152">
            <Name>(default UNIX_005b) UNIX command injection in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30019</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 1</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Content-Type$
^Sec-Metadata$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-808</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default UNIX_005b) UNIX command injection in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v(]|#[^\v]*[\v]|\\\v)*)
    (?&lt;cmd_op>(?:;|\|\||&amp;&amp;|&amp;|\||&lt;\(|&lt;\h+&lt;\(|(?&amp;inline_op)))
    (?&lt;cmd_boundary>[;|&amp;`'&quot;{$\v\h]|$)
    (?&lt;inline_op>(?:`|\$\())
    (?&lt;file_op>(?:(?&lt;!&lt;)&lt;&lt;&lt;|(?&lt;!>)>>|(?&lt;!>)>\||(?&lt;!&lt;)&lt;|(?&lt;!>)>))
    (?&lt;system_variable>\$[A-Z_][A-Z0-9_]*\b)
    (?&lt;file_character>(?:[^\h\\]|\\\\|\\\h))
    (?&lt;file_glob>(?:(?=(?&amp;file_character)*[\/])(?=(?&amp;file_character)*[\*?])(?&amp;file_character){3,}))
    (?&lt;func_name>[^\v\h!&lt;>|&amp;`&quot;';$()]+)
    (?&lt;func_def>(?&amp;func_name)\h*\(\h*\)(?&amp;opt_spaces)\{)
    (?&lt;list_element_comma>[^\h\v,}]*)
    (?&lt;list_element_dot>[^\h\v\.}]*)
    (?&lt;glob_list>[a-z]*?\{(?:(?:(?&amp;list_element_comma),)+(?&amp;list_element_comma)|(?:(?&amp;list_element_dot)\.\.){1,2}(?&amp;list_element_dot))})
    (?&lt;spec_param>\$[*@$!?\-_])
    (?&lt;rel_path>(?:(?=(?&amp;file_character)*\.\./)(?&amp;file_character)*))
    (?&lt;path_exp>~(?:\w+\b|\+|-|/))
    (?&lt;path>(?:(?&amp;rel_path)|(?&amp;tld)|(?&amp;path_exp)|(?&amp;file_glob)))
    (?&lt;string>(?:(?&amp;nonconcat_string)+))
    (?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
    (?&lt;variable>[a-z_][^{}\h\v=&lt;>|&amp;`&quot;';$]*)
    (?&lt;value>(?&amp;string)|(?&amp;variable_usage)|(?:[^{}\h\v=&lt;>|&amp;`&quot;';$]*))
    (?&lt;assignment>(?&amp;variable)=\(?(?&amp;value))
    (?&lt;variable_usage>\$\{?(?&amp;variable))
    (?&lt;param_expansion>\$\{[^!\^,~*@#%\/:\-=+?}]*[!\^,~*@#%\/:\-=+?])
    (?&lt;split_cmd>\w+\\\v)
    (?&lt;tld>[./]*(?:bin|boot|cdrom|data|dev|devices|etc|export|files|home|import|kernel|lib|lib32|lib64|lost+found|media|mnt|net|opt|platform|private|proc|rescue|root|run|sbin|selinux|srv|sys|tmp|usr|var|vol)/[./]*[^/\h]{2}[^\h]*)
    (?&lt;os_command>\b(?:g(?:nome-(?:s(?:hell(?:-(?:extension-(?:prefs|tool)|perf-tool))?|ession(?:-(?:inhib|qu)it)?|ystem-(?:monitor|log)|creenshot)|c(?:ont(?:rol-center|acts)|haracter-map|alculator|locks)|t(?:e(?:xt-editor|rminal)|humbnail-font)|d(?:isk(?:-image-mounter|s)|ocuments)|keyring(?:-(?:daemon|3))?|font-viewer|help)|r(?:ub(?:2-(?:m(?:k(?:(?:standalon|imag)e|re(?:lpath|scue)|(?:layou|fon)t|passwd-pbkdf2|netdir)|enulst2cfg)|s(?:cript-check|yslinux2cfg)|f(?:stest|ile)|render-label|glue-efi|editenv|kbdcomp)|-install)|o(?:up(?:(?:ad|mo)d|del|s)|(?:wisof|p)s|ff(?:er)?|tty|g)|p(?:c(?:onv|k)|unconv)|e(?:source|p))|s(?:t(?:-(?:(?:(?:inspect|launch)|typefind)-(?:0.1|1.)|(?:xml(?:inspect|launch)|feedback)-0.1)0|ack)|ettings(?:-data-convert)?|dj(?:500)?|l[jp]|bj|nd)?|p(?:g(?:-(?:(?:connect-)?agent|zip)|parsemail|key2ssh|split|conf|v2?|2)?|k-(?:(?:install-local-fil|dbus-servic)e|prefs|log)|asswd|rof|ic|m)|vfs-(?:m(?:o(?:nitor-(?:file|dir)|unt|ve)|kdir|ime)|s(?:et-attribut|av)e|r(?:ename|m)|tr(?:ash|ee)|c(?:opy|at)|l(?:es)?s|info|open)|e(?:t(?:c(?:ifsacl|onf|ap)|(?:keycode|pcap)s|e(?:ltorito|nt)|fa(?:ttr|cl)|text(?:.sh)?|hostip|opts?)|n(?:isoimage|cat)|dit|qn)|c(?:m-(?:i(?:nspec|mpor)t|(?:pick|view)er|calibrate)|o(?:nf(?:-merge-tree|tool-2)|re)|r-viewer|alccmd|c)|d(?:m(?:-screenshot|flexiserver)|k-pixbuf-query-loaders-64|b(?:-add-index|us)?|isk)|t(?:k-(?:update-icon-cache(?:-3.0)?|query-immodules-[23].0-64|launch)|bl|f)|a(?:mma4scanimage|pplication|tttool|wk)|l(?:ib-compile-schemas|x(?:gears|info))|kbd-keyboard-display|io-querymodules-64|u(?:charma|nzi)p|js(?:-console)?|z(?:exe|ip)|hostscript|make)|s(?:y(?:s(?:tem(?:d-(?:t(?:ty-ask-password-agent|mpfiles)|a(?:sk-password|nalyze)|c(?:g(?:top|ls)|at)|de(?:tect-virt|lta)|machine-id-setup|n(?:otify|spawn)|stdio-bridge|inhibit|run)|-config-printer(?:-applet)?|ctl)?|l(?:inux|ogd)|klogd|ctl)|n(?:c(?:lient)?|daemon))|e(?:[dq]|t(?:(?:l(?:ogcon|ed)|keycode)s|f(?:a(?:ttr|cl)|dprm|ont)|v(?:esablank|trgb)|c(?:ifsacl|ap)|s(?:erial|id)|p(?:riv|ci)|metamode|xkbmap|quota|arch|term)?|rv(?:ertool|ice)|n(?:dmail|sors)|ahorse|ssreg|lect)|t(?:a(?:rt(?:-(?:pulseaudio-(?:kde|x11)|statd)|x)|td?)|r(?:(?:ac(?:e-log-merg)?|fil)e|i(?:ngs|p)|eam)|dbuf|ty)|h(?:o(?:w(?:(?:consolefo|mou)nt|key|rgb)|pt)|a(?:(?:2(?:24|56)|384|512|1)?sum|resec)|u(?:tdown|f)|ift|red)?|m(?:b(?:c(?:(?:quota|acl)s|lient4?|ontrol)|t(?:a(?:-util|r)|ree)|passwd|spool|get)|-notify)|c(?:r(?:ipt(?:replay)?|een(?:dump)?)|p(?:-dbus-service)?|an(?:image|adf))|p(?:e(?:ech-dispatcher|aker-test)|d-(?:conf|say)|l(?:ain|it)|rof)|s(?:h(?:-(?:key(?:sca|ge)n|a(?:gent|dd)|copy-id)|d)?)?|a(?:ne(?:-find-scanner|d)|mba-regedit|fe_finger)|l(?:a(?:ttach|btop)|o(?:cate|gin)|eep)|u(?:do(?:replay|edit)?|login|shi|m)?|w(?:ap(?:o(?:ff|n)|label)|itch_root)|o(?:(?:ffi|ur)ce|truss|elim|xi?|rt)|bc(?:(?:de|en)c|info)|i(?:mple-scan|ze)|d(?:ptool|iff)|f(?:disk|tp)|g(?:disk)?|kill|nice|2p)|p(?:a(?:m(?:_t(?:imestamp_check|ally2)|on)|r(?:t(?:probe|ed|x)|ec(?:ord)?)|ngo-(?:querymodules-64|view)|s(?:uspender|swd|te)|c(?:at|md|tl)|t(?:hchk|ch)|x11publish|play|dsp)|d(?:f(?:to(?:p(?:pm|s)|cairo|html|text)|(?:separa|uni)te|i(?:mages|nfo)|2(?:dsc|ps)|detach|fonts)|bedit)|s(?:2(?:p(?:df(?:1[234]|wr)?|s2?)|(?:asci|eps)i)|f(?:strip|add|get|x)table|tr(?:ee(?:.x11)?|uct)|ed)?|o(?:d(?:2(?:latex|usage|html|text|man)|checker|select)|st-grohtml|weroff|rtmap|pd)|r(?:e(?:-grohtml|conv)|int(?:afm|env|f)|(?:limi|tsta)t|o(?:files|ve)|aliases)?|m(?:-(?:(?:suspen(?:d-hybri)?|is-supporte)d|(?:hibernat|powersav)e)|ap)|i(?:n(?:entry(?:-curses)?|g6?|ky)|c(?:o(?:nv)?)?|vot_root|xeltool|dof)|p(?:p(?:oe-discovery|d(?:ump)?|stats)|d(?:[ci]|merge|html|po)|hs)|u(?:rple-(?:send(?:-async)?|url-handler|remote)|lseaudio|shd)|y(?:thon(?:3(?:.4m?)?|2(?:.7)?)?|doc(?:3(?:.4)?)?|venv-3.4)|k(?:(?:acti|m)on|c(?:heck|on)|g-config|ttyagent|exec|ill)|e(?:rl(?:thanks|bug|doc|ivp)?|ekfd)|l(?:ipconfig|ymouthd?|2pm|ay|dd)|w(?:c(?:onv|k)|unconv|dx?)|t(?:ar(?:diff|grep)?|x)|f(?:btopfa|2afm)|11-kit|nm2ppa|grep)|m(?:[4v]|k(?:f(?:s(?:.(?:(?:cram|nt|b)fs|m(?:inix|sdos)|ext[234]|v?fat))?|ont(?:scale|dir)|ifo)|(?:lost+foun|rai)d|i(?:nitrd|sofs)|homedir_helper|(?:swa|tem)p|d(?:osfs|ir)|n(?:tfs|od)|manifest|zftree|e2fs)|o(?:u(?:nt(?:.(?:n(?:tfs(?:-3g)?|fs4?)|lowntfs-3g|fuse)|point|stats|d)?|setweaks)|d(?:probe|info)|(?:ntag|r)e|grify)|s(?:g(?:c(?:o(?:mm|nv)|at|mp)|f(?:ilter|mt)|un(?:fmt|iq)|e(?:xec|n)|attrib|merge|grep|init)|ho(?:rtname|wfat))|a(?:ke(?:d(?:eltarpm|bm?)|map)?|il(?:[qx]|stats|to)?|p(?:file|scrn)|n(?:path|db)?|chinectl|ttrib)|c(?:-(?:wait-for-name|tool)|o(?:okie|mp|py)|lasserase|heck|at|d)|d(?:el(?:(?:, mdel)?tree)?|5sum|ir|u)|e(?:ta(?:mail|send)|mdiskfind|rge|sg)|p(?:g(?:123|321)|artition)|i(?:mencode|i-tool|nfo)|t(?:ools(?:test)?|ype)?|m(?:o(?:unt|ve)|cli|d)|(?:utte|xta)r|badblocks|r(?:en|d)|format|label|zip)|c(?:u(?:ps(?:-(?:(?:genppdupd|calibr)ate|browsed)|a(?:ccept|ddsmb)|test(?:dsc|ppd)|d(?:isable)?|enable|filter|reject|ctl)|rl|t)|h(?:a(?:t(?:tr)?|rmap|cl|ge)|e(?:ck-binary-files|ese)|(?:r(?:oo)?|v)t|(?:passw|mo)d|c(?:on|pu)|(?:ow|f)n|kconfig|grp|sh)|a(?:r(?:ibou-preferences|d(?:ctl|mgr))|n(?:berra-gtk-play|cel)|l(?:ibrate_ppa|ler)?|t(?:chsegv|man)?|p(?:toinfo|sh)|se)|o(?:m(?:p(?:(?:osit|ar)e|ress)|(?:binedeltarp)?m)|n(?:(?:tinu|jur)e|fig_data|vert)|l(?:ormgr|crt|umn|rm)?|relist)|r(?:acklib-(?:(?:un)?packer|format|check)|eate-(?:cracklib-dict|jar-links)|on(?:tab|d)?|c32|da)|d(?:-(?:(?:create|fix)-profile|iccdump)|r(?:ecord|dao)|paranoia|da2wav)?|i(?:fs(?:creds|dd)|ptool)|lea(?:n-binary-files|r)|t(?:rlaltdel|stat|ags)|(?:_rehas|2p)h|p(?:an|io|p)?|[fg]disk|split|v[st]|ksum|mp|c)|l(?:o(?:g(?:(?:rotat|nam|sav)e|in(?:ctl)?|ger|out)|c(?:a(?:l(?:e(?:ctl|def)?|c)?|te)|kfile)|w(?:ntfs-3g|riter|eb)|f(?:romtemplat|fic)e|ad(?:unimap|keys)|impress|setup|draw|math|ok)|s(?:b(?:_release|lk)|(?:initr|mo)d|lo(?:gin|ck)s|p(?:gpot|ci)|usb(?:.py)?|attr|cpu|of)?|i(?:b(?:ieee1284_test|reoffice|netcfg)|n(?:[ek]|ux(?:-boot-prober|32|64)))|p(?:[cq]|r(?:setup.sh|m)?|(?:_sol|mo)ve|options|passwd|admin|info|stat)?|z(?:m(?:a(?:info)?|ore)|c(?:at|mp)|[ef]?grep|diff|less)?|wp-(?:d(?:ownload|ump)|request|mirror)|d(?:(?:.(?:gol|bf))?d|attach|config)?|e(?:ss(?:echo|key)?|xgrog|t)|2(?:ping|test)|ast(?:log|b)?|ftp(?:get)?|u(?:ac?|it)|n(?:stat)?|convert)|r(?:e(?:[dv]|a(?:d(?:o(?:nly|m)|profile|array|link|elf|cd)?|lpath)|s(?:ize(?:(?:con|2f)s|part)?|tore|et)|g(?:d(?:bdump|iff)|patch|shell|tree)|b(?:uild-jar-repository|oot)|c(?:ode-sr-latin)?|n(?:am|ic)e|pquota|xecd?|ject|turn)|p(?:c(?:(?:.(?:idmap|stat|gss)|bin)d|client|debug|info|gen)|m(?:(?:verif|quer)y|2cpio|keys|db)?)|u(?:n(?:-parts|level|user|con)|p(?:time)?|sersd?)|t(?:(?:acc|sta)t|kitctl|cwake|mon)|m(?:i(?:registry|d)|ail|dir|mod)?|a(?:idstart|msize|nlib|rpd?|w)|o(?:ute[dfl]?|otflags)|s(?:y(?:slogd|nc)|hd?)|hythmbox(?:-client)?|d(?:istd?|ate|ev)|c(?:[cp]|test)|w(?:hod?|all)|n(?:ano|dc)|vi(?:ew|m)|ichtext|logind?|fcomm|bash)|d(?:[df]|b(?:_(?:(?:archiv|upgrad)e|(?:checkpoin|sta)t|d(?:eadlock|ump)|hotbackup|printlog|recover|verify|load)|us-(?:(?:(?:run-sessi|daem)o|uuidge)n|cleanup-sockets|monitor|launch|send)|wrap_tool)|e(?:sktop-file-(?:validate|install|edit)|(?:allocv|lpar)t|bugfs|clare|vdump|pmod)|ns(?:sec-(?:sign(?:zone|key)|makekeyset|keygen)|domainname|masq)|i(?:r(?:colors|split|name)?|ff(?:-jars|3)?|s(?:able|play)|g)|v(?:d+rw-(?:mediainfo|booktype|format)|d-ram-control|ipdf)|o(?:(?:tlockfil|mainnam)e|sfs(?:label|ck)|exec)|(?:hclien(?:t-scrip)?|racu)t|u(?:mp(?:(?:e2f|key)s)?)?|m(?:idecode|setup|esg)|c(?:onf)?|lpsh|ate|wp)|n(?:t(?:fs(?:(?:(?:trunca|undele)t|resiz|mov|wip)e|-3g(?:.(?:secaudit|usermap|probe))?|c(?:l(?:uster|one)|m?p|at)|l(?:abel|s)|decrypt|info|fix)|db(?:(?:backu|dum)p|restore|tool)|pdate)|m(?:tui(?:-(?:(?:connec|edi)t|hostname))?|-(?:connection-editor|applet|online)|blookup4?|cli)?|a(?:utilus(?:-(?:autorun-software|connect-server|sendto))?|me(?:if?|d)|no)|e(?:w(?:(?:aliase|user)s|grp)|t(?:s(?:csid|tat)|cat)?|qn)|f(?:s(?:i(?:ostat|dmap)|stat|d)|nl_osf)|s(?:lookup|update|enter|tat)|c(?:ursesw?5-config|at)?|o(?:tify-send|login|hup)|i(?:sdomainnam|c)e|(?:gettex|umfm)t|proc|roff|l)|e(?:u-(?:s(?:t(?:ri(?:ngs|p)|ack)|ize)|(?:objdum|unstri)p|make-debug-archive|r(?:eadelf|anlib)|a(?:ddr2line|r)|elf(?:lint|cmp)|findtextrel|nm)|s(?:d(?:c(?:at|tl)|-config|sample|play|dsp|mon|rec)?|cputil)|n(?:c(?:hant(?:-lsmod)?|2xs)|v(?:subst)?|able)|m(?:pathy(?:-(?:accounts|debugger))?|acs)|v(?:ince(?:-(?:thumbnail|preview)er)?|al)|2(?:f(?:reefrag|sck)|image|label|undo)|x(?:p(?:and|iry|ort|r)|ec|it)?|asy_install(?:-2.7)?|l(?:fedit|vtune)|d(?:quota|it)?|t(?:htool|ags)|(?:4defra|o)g|ps2eps|grep|ject|cho|qn)|u(?:n(?:i(?:x(?:_(?:chkpwd|update)|-lpr.sh)|code_st(?:art|op)|q)|s(?:et(?:a2p)?|hare)|o(?:conv|pkg)|a(?:lias|me)|l(?:ink|zma)|zip(?:sfx)?|compress|expand|til|xz)|p(?:date(?:-(?:(?:(?:ca-certificat|alternativ)e|pciid)s|(?:desktop|mime)-database)|db)|ower|time)|s(?:b(?:_modeswitch(?:_dispatcher)?|-devices|hid-dump|muxd)|er(?:(?:ad|mo)d|del|s)|leep)|m(?:ount(?:.(?:udisks2|nfs4?))?|a(?:x_pp|sk))|d(?:ev(?:adm|d)|isksctl)|l(?:ockmgr_server|imit)?|u(?:(?:de|en)code|idgen)|tmpdump|cs2any|xterm|ic3|z)|x(?:d(?:g-(?:user-dir(?:s(?:-gtk)?-update)?|s(?:creensaver|ettings)|(?:icon-resourc|mim)e|desktop-(?:icon|menu)|email|open)|(?:py|ri)info)|m(?:l(?:patterns(?:validator)?|catalog|lint|wf)|essage|odmap)|s(?:et(?:pointer|wacom|mode|root)?|(?:tdcma|ubp)p|ltproc)|z(?:d(?:iff|ec)|c(?:at|mp)|[ef]?grep|less|more)?|ls(?:(?:clie|fo)nt|atom)s|t(?:ables-multi|erm)|in(?:(?:pu|i)t|etd)|r(?:efresh|andr|db)|g(?:ettext|amma)|k(?:bcomp|ill)|(?:win|v)info|a(?:rgs|uth)|console|brlapi|host|prop|ev|xd)|i(?:p(?:t(?:ables(?:-(?:(?:restor|sav)e|apply|xml))?|unnel)|6tables(?:-(?:restor|sav)e)?|od-read-sysinfo-extended|c(?:mk|rm|s)|maddr|ptool)?|n(?:s(?:t(?:all(?:-(?:printerdriver|info)|kernel)?|modsh)|mod)|fo(?:(?:toca|cm)p|key)?|putattach|etd|it)|s(?:o(?:hybrid|dump|info|size|vfy)|dv4-serial-inputattach|pell)|bus(?:-(?:daemon|setup))?|c(?:onv(?:config)?|eauth)|f(?:config|down|up)?|r(?:qbalance|b)|m(?:port|apd)|d(?:entify)?|ecset|onice|gawk|386|w)|a(?:u(?:to(?:(?:updat|mak)e|(?:re)?conf|header|scan)|last(?:log)?|diosend|syscall|virt|mix)|p(?:ply(?:gnupgdefaults|deltarpm)|lay(?:midi)?|ropos|md?|t)|c(?:pi(?:_available|d)?|ce(?:ss(?:db)?|pt)|onnect|local)|dd(?:r(?:2line|esses)|gnupghome|part|user)|r(?:ecord(?:midi)?|p(?:ing|d)?|ch)?|lsa(?:-info.sh|mixer|loop|ctl|ucm)|m(?:i(?:xer|di)|uFormat.sh)|vahi-(?:autoipd|daemon)|s(?:eq(?:dump|net))?|n(?:acron|imate)|t(?:[dq]|rm|tr)?|bs2rel|getty|wk)|t(?:r(?:a(?:c(?:ker-(?:s(?:earch|parql|tats)|i(?:mport|nfo)|control|tag)|e(?:route6?|path6?))|nsmission-gtk|p)|u(?:(?:ncat)?e|st)|y-from|off)?|c(?:p(?:(?:tracerout|slic)e|d(?:match|ump)?)|lsh(?:8.6)?)?|o(?:[ep]|tem(?:-(?:video-thumbnailer|audio-preview))?|uch)|e(?:l(?:netd?|init)|st(?:parm)?|e)|a(?:[cr]|skset|ilf?|lkd?|bs)|i(?:me(?:datectl|out|s)?|c)|(?:s(?:or|e)|zselec|pu)t|une(?:2fs|lp)|ype(?:set)?|nameserv|mpwatch|ftpd?|load|bl|gz|ty)|f(?:i(?:n(?:d(?:2perl|-jar|mnt|fs)?|gerd?)|le(?:-roller|frag)?|ps(?:check|hmac)|xparts|refox)|s(?:ck(?:.(?:m(?:inix|sdos)|ext[234]|cramfs|v?fat))?|t(?:ab-decode|rim)|freeze)|c-(?:(?:patter|sca)n|ca(?:che|t)|validate|match|query|list)|u(?:n(?:ctionalias|zip)|ser(?:mount)?)|o(?:nt(?:tosfnt|2c)|r(?:mail)?|ld)|a(?:l(?:locat|s)e|tlabel|ctor)|g(?:console|rep)|d(?:format|isk)|l(?:ock|ex)|etchmail|tpd?|ree|mt)|b(?:u(?:il(?:d-(?:classpath(?:-directory)?|jar-repository)|tin)|nzip2|sctl)|z(?:ip2(?:recover)?|c(?:at|mp)|[ef]?grep|diff|less|more)|l(?:uetooth(?:-sendto|ctl|d)|k(?:discar|map|i)d|ockdev)|a(?:s(?:e(?:name|64)|h(?:bug)?)|dblocks|nner|obab|tch)|r(?:ltty(?:-(?:t(?:rtxt|tb)|ctb))?|oadwayd|idge|eak)|i(?:osdecode|son|ff|nd)|dft(?:runcate|opcf)|c(?:cmd)?|ootctl|tmon)|h(?:p(?:-(?:(?:t(?:estpag|imedat)|firmwar)e|l(?:ogcapture|evels)|c(?:olorcal|lean)|p(?:lugin|robe)|s(?:etup|can)|makeuri|unload|align|query|info)|ijs)|ci(?:attach|config|tool)|ost(?:name(?:ctl)?|id)?|e(?:(?:xdum|l)p|ad)|2(?:ph|xs)|a(?:lt|sh)|tdigest|unspell|wclock|dparm)|q(?:(?:help(?:converte|generato)|collectiongenerato)r|d(?:bus(?:cpp2xml|xml2cpp|viewer)?|oc3)|uota(?:o(?:ff|n)|check|stats)?|ml(?:plugindump|viewer)|tconfig)|o(?:o(?:impress|writer|ffice|calc|draw)|s(?:-prober|d_login)|bj(?:copy|dump)|pen(?:ssl|vt)?|Lschema2ldif|(?:ldfin)?d|n_ac_power|r(?:bd|ca)|wnership|mshell)|w(?:h(?:i(?:ptail|ch|le)|(?:ere|at)is|o(?:ami|is)?)|pa_(?:passphrase|supplicant|cli)|a(?:tch(?:gnupg)?|rnquota|ll)|ftopfa|ipefs|dctl|odim|rite|get|c)?|z(?:i(?:p(?:details|cloak|split|grep|info|note)?|c)|e(?:grep|nity)|f(?:grep|orce)|d(?:iff|ump)|new(?:bind)?|c(?:at|mp)|grep|less|more)|k(?:e(?:rnel(?:-install|version)|y(?:too|ct)l)|bd(?:(?:_mod|rat)e|info)|ill(?:all5?)?|(?:log|mo)d|oi8rxterm|udzu)|v(?:i(?:m(?:tutor|diff)?|(?:dmod|nagr)e|[ep]w|sudo|gr)?|m(?:mouse_detec|sta)t|(?:pddecod|olnam)e|dir|stp)|y(?:p(?:p(?:asswd?d|oll|ush)|(?:ini|tes|ca)t|(?:mat|whi)ch|domainname|se(?:rv|t)|bind|xfr)|e(?:lp|s)|acc)|j(?:o(?:urnalctl|bs|in)|ava(?:ws)?|son_pp|vmjar)|M(?:odemManager|ail)|X(?:wayland|org|11)|NetworkManager|c+\+(?:filt)?|g+\+)(?&amp;cmd_boundary))
    (?&lt;cmd_execution>(?&amp;os_command)|(?&amp;path)|(?&amp;system_variable)|(?&amp;func_def)|(?&amp;glob_list)+|(?&amp;spec_param)|(?&amp;param_expansion)|(?&amp;split_cmd))
)(?x)
^(?=.*&quot;)(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\&quot;|[^&quot;])*&quot;(?:[^&quot;]|(?&amp;nonconcat_string))*?
    (?:
        (?:(?&amp;opt_spaces)(?&amp;cmd_op))+
        (?:
            (?:(?&amp;opt_spaces)(?&amp;assignment))*(?&amp;opt_spaces)(?&amp;cmd_execution)|
            (?:(?&amp;opt_spaces)(?&amp;assignment))+(?&amp;cmd_boundary).*(?&amp;variable_usage)
        )|
        (?&amp;opt_spaces)(?&amp;file_op)(?&amp;opt_spaces)(?&amp;path)
    )
|
^(?=.*')(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\'|[^'])*'(?:[^']|(?&amp;nonconcat_string))*?
    (?:
        (?:(?&amp;opt_spaces)(?&amp;cmd_op))+
        (?:
            (?:(?&amp;opt_spaces)(?&amp;assignment))*(?&amp;opt_spaces)(?&amp;cmd_execution)|
            (?:(?&amp;opt_spaces)(?&amp;assignment))+(?&amp;cmd_boundary).*(?&amp;variable_usage)
        )|
        (?&amp;opt_spaces)(?&amp;file_op)(?&amp;opt_spaces)(?&amp;path)
      )
|
^(?=.*(?&amp;inline_op)).*(?&amp;inline_op)
    (?:(?:(?&amp;opt_spaces)(?&amp;assignment))*(?&amp;opt_spaces)(?&amp;cmd_execution)|
      (?:(?&amp;opt_spaces)(?&amp;assignment))+.*(?&amp;variable_usage))</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-937</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2153">
            <Name>(default UNIX_006a) UNIX command injection in quoted context (strict) in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30018</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default UNIX_006a) UNIX command injection in quoted context (strict)</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v(]|#[^\v]*[\v])*)
    (?&lt;cmd_op>;|\|\||&amp;&amp;|`|\$\(|&amp;|\||&lt;\(|&lt;\h+&lt;\()
    (?&lt;cmd_boundary>[;|&amp;`\v\h]|$)
    (?&lt;string>(?:(?&amp;nonconcat_string)+))
    (?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
    (?&lt;command>[a-z0-9.\-\/=]*[a-z]+[a-z0-9.\-\/=]*)
)(?x)
^(?=.*&quot;)(?=.*(?&amp;cmd_op))(?:\\&quot;|[^&quot;])*&quot;(?:[^&quot;]|(?&amp;nonconcat_string))*?(?:(?&amp;opt_spaces)(?&amp;cmd_op))+(?&amp;opt_spaces)(?&amp;command)(?&amp;cmd_boundary) |
^(?=.*')(?=.*(?&amp;cmd_op))(?:\\'|[^'])*'(?:[^']|(?&amp;nonconcat_string))*?(?:(?&amp;opt_spaces)(?&amp;cmd_op))+(?&amp;opt_spaces)(?&amp;command)(?&amp;cmd_boundary)</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-484</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2154">
            <Name>(default UNIX_006b) UNIX command injection in quoted context (strict) in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30019</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 1</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Content-Type$
^Sec-Metadata$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-808</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default UNIX_006b) UNIX command injection in quoted context (strict)</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v(]|#[^\v]*[\v])*)
    (?&lt;cmd_op>;|\|\||&amp;&amp;|`|\$\(|&amp;|\||&lt;\(|&lt;\h+&lt;\()
    (?&lt;cmd_boundary>[;|&amp;`\v\h]|$)
    (?&lt;string>(?:(?&amp;nonconcat_string)+))
    (?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
    (?&lt;command>[a-z0-9.\-\/=]*[a-z]+[a-z0-9.\-\/=]*)
)(?x)
^(?=.*&quot;)(?=.*(?&amp;cmd_op))(?:\\&quot;|[^&quot;])*&quot;(?:[^&quot;]|(?&amp;nonconcat_string))*?(?:(?&amp;opt_spaces)(?&amp;cmd_op))+(?&amp;opt_spaces)(?&amp;command)(?&amp;cmd_boundary) |
^(?=.*')(?=.*(?&amp;cmd_op))(?:\\'|[^'])*'(?:[^']|(?&amp;nonconcat_string))*?(?:(?&amp;opt_spaces)(?&amp;cmd_op))+(?&amp;opt_spaces)(?&amp;command)(?&amp;cmd_boundary)</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-938</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2155">
            <Name>(default UNIX_010a) UNIX command injection in unquoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30018</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default UNIX_010a) UNIX command injection in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v(]|#[^\v]*[\v]|\\\v)*)
    (?&lt;cmd_op>(?:;|\|\||&amp;&amp;|&amp;|\||&lt;\(|&lt;\h+&lt;\(|(?&amp;inline_op)))
    (?&lt;cmd_boundary>[;|&amp;`'&quot;{$\v\h]|$)
    (?&lt;inline_op>(?:`|\$\())
    (?&lt;file_op>(?:(?&lt;!&lt;)&lt;&lt;&lt;|(?&lt;!>)>>|(?&lt;!>)>\||(?&lt;!&lt;)&lt;|(?&lt;!>)>))
    (?&lt;system_variable>\$[A-Z_][A-Z0-9_]*\b)
    (?&lt;file_character>(?:[^\h\\]|\\\\|\\\h))
    (?&lt;file_glob>(?:(?=(?&amp;file_character)*[\/])(?=(?&amp;file_character)*[\*?])(?&amp;file_character){3,}))
    (?&lt;func_name>[^\v\h!&lt;>|&amp;`&quot;';$()]+)
    (?&lt;func_def>(?&amp;func_name)\h*\(\h*\)(?&amp;opt_spaces)\{)
    (?&lt;list_element_comma>[^\h\v,}]*)
    (?&lt;list_element_dot>[^\h\v\.}]*)
    (?&lt;glob_list>[a-z]*?\{(?:(?:(?&amp;list_element_comma),)+(?&amp;list_element_comma)|(?:(?&amp;list_element_dot)\.\.){1,2}(?&amp;list_element_dot))})
    (?&lt;spec_param>\$[*@$!?\-_])
    (?&lt;rel_path>(?:(?=(?&amp;file_character)*\.\./)(?&amp;file_character)*))
    (?&lt;path_exp>~(?:\w+\b|\+|-|/))
    (?&lt;path>(?:(?&amp;rel_path)|(?&amp;tld)|(?&amp;path_exp)|(?&amp;file_glob)))
    (?&lt;string>(?:(?&amp;nonconcat_string)+))
    (?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
    (?&lt;variable>[a-z_][^{}\h\v=&lt;>|&amp;`&quot;';$]*)
    (?&lt;value>(?&amp;string)|(?&amp;variable_usage)|(?:[^{}\h\v=&lt;>|&amp;`&quot;';$]*))
    (?&lt;assignment>(?&amp;variable)=\(?(?&amp;value))
    (?&lt;variable_usage>\$\{?(?&amp;variable))
    (?&lt;param_expansion>\$\{[^!\^,~*@#%\/:\-=+?}]*[!\^,~*@#%\/:\-=+?])
    (?&lt;split_cmd>\w+\\\v)
    (?&lt;tld>[./]*(?:bin|boot|cdrom|data|dev|devices|etc|export|files|home|import|kernel|lib|lib32|lib64|lost+found|media|mnt|net|opt|platform|private|proc|rescue|root|run|sbin|selinux|srv|sys|tmp|usr|var|vol)/[./]*[^/\h]{2}[^\h]*)
    (?&lt;param>(?:--|-|\+)[a-zA-Z]+\b)
    (?&lt;url>[^\h]+\.(?!\h)[a-zA-Z]{2,}(?!\.)\b)
    (?&lt;ipv4>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))
    (?&lt;ipv6>(?>(?>([a-fA-F0-9]{1,4})(?>:(?1)){7}|(?!(?:.*[a-fA-F0-9](?>:|$)){8,})((?1)(?>:(?1)){0,6})?::(?2)?)|(?>(?>(?1)(?>:(?1)){5}:|(?!(?:.*[a-fA-F0-9]:){6,})(?3)?::(?>((?1)(?>:(?1)){0,4}):)?)?(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\.(?4)){3})))
    (?&lt;sleep>(?:(?:sleep|timeout)[\h\v]+\d+)\b)
    (?&lt;fp_command>\b(?:s(?:e(?:(?:ahors|rvic)e|(?:lec)?t|d)|o(?:(?:ffi|ur)ce|rt)|h(?:utdown|ift|red)|t(?:r(?:eam|ip)|at)|u(?:shi|do|m)?|cr(?:een|ipt)|aned|kill|leep|plit|ize|ync)|c(?:[cd]|o(?:m(?:p(?:(?:osit|ar)e|ress)|m)|n(?:(?:tinu|jur)e|vert)|l(?:umn)?)|a(?:l(?:ler)?|ncel|se|t)|h(?:eese|at)|u(?:rl|t)|lear)|t(?:r(?:u(?:(?:ncat)?e|st)|off|ap)?|e(?:(?:lne|s)t|e)|i(?:me(?:out)?|c)|o(?:[ep]|tem|uch)|a(?:[cr]|il|lk)|ype(?:set)?)|e(?:x(?:p(?:and|iry|ort)|ec|it)?|n(?:chant|able)|m(?:pathy|acs)|d(?:it)?|vince|ject|cho)|f(?:i(?:n(?:ger|d)|le)|a(?:ctor|lse)|l(?:ock|ex)|o(?:ld|r)|user|ree|tp)|l(?:o(?:g(?:ger|out|in)|ca(?:le?|te)|ok)|e(?:ss|t)|in[ek]|ast|s)|a(?:(?:ddresse)?s|cce(?:pt|ss)|p(?:ropos|t)|r(?:ch)?|nimate|t)|r(?:e(?:[cv]|s(?:(?:tor|iz)e|et)|(?:boo|jec)t|a?d)|oute|aw)|b(?:a(?:(?:tc|s)h|nner|obab)|r(?:idge|eak)|i(?:son|nd))|d(?:i(?:[gr]|s(?:able|play))|(?:eclar|at)e|u(?:mp)?)|m(?:o(?:(?:ntag|r)e|unt)|a(?:il|ke|n)|utter|erge)|i(?:n(?:stall|fo)|d(?:entify)?|mport|onice|f)|p(?:a(?:ste|tch)|i(?:co?|ng)|ython|rove|lay)|w(?:h(?:i(?:ch|le)|o)|a(?:tch|ll)|rite|c)|n(?:a(?:utilus|med|no)|roff|ice|et)|h(?:a(?:lt|sh)|e(?:ad|lp)|ost)|u(?:n(?:set|til|zip)|ptime)|o(?:wnership|pen|rca|d)|g(?:ro(?:ups|g)|awk|s)|y(?:e(?:lp|s)|acc)|vi(?:nagre|ew)?|k(?:udzu|ill)|j(?:ava|oin)|quota|zip)(?&amp;cmd_boundary))
    (?&lt;os_command>\b(?:g(?:nome-(?:s(?:hell(?:-(?:extension-(?:prefs|tool)|perf-tool))?|ession(?:-(?:inhib|qu)it)?|ystem-(?:monitor|log)|creenshot)|c(?:ont(?:rol-center|acts)|haracter-map|alculator|locks)|t(?:e(?:xt-editor|rminal)|humbnail-font)|d(?:isk(?:-image-mounter|s)|ocuments)|keyring(?:-(?:daemon|3))?|font-viewer|help)|r(?:ub(?:2-(?:m(?:k(?:(?:standalon|imag)e|re(?:lpath|scue)|(?:layou|fon)t|passwd-pbkdf2|netdir)|enulst2cfg)|s(?:cript-check|yslinux2cfg)|f(?:stest|ile)|render-label|glue-efi|editenv|kbdcomp)|-install)|o(?:up(?:(?:ad|mo)d|del)|(?:wisof|p)s|ff(?:er)?|tty)|p(?:c(?:onv|k)|unconv)|e(?:source|p))|s(?:t(?:-(?:(?:(?:inspect|launch)|typefind)-(?:0.1|1.)|(?:xml(?:inspect|launch)|feedback)-0.1)0|ack)|ettings(?:-data-convert)?|dj(?:500)?|l[jp]|bj|nd)|p(?:g(?:-(?:(?:connect-)?agent|zip)|parsemail|key2ssh|split|conf|v2?|2)?|k-(?:(?:install-local-fil|dbus-servic)e|prefs|log)|asswd|rof|ic|m)|vfs-(?:m(?:o(?:nitor-(?:file|dir)|unt|ve)|kdir|ime)|s(?:et-attribut|av)e|r(?:ename|m)|tr(?:ash|ee)|c(?:opy|at)|l(?:es)?s|info|open)|e(?:t(?:c(?:ifsacl|onf|ap)|(?:keycode|pcap)s|e(?:ltorito|nt)|fa(?:ttr|cl)|text(?:.sh)?|hostip|opts?)|n(?:isoimage|cat)|dit|qn)|c(?:m-(?:i(?:nspec|mpor)t|(?:pick|view)er|calibrate)|o(?:nf(?:-merge-tree|tool-2)|re)|r-viewer|alccmd|c)|d(?:m(?:-screenshot|flexiserver)|k-pixbuf-query-loaders-64|b(?:-add-index|us)?|isk)|t(?:k-(?:update-icon-cache(?:-3.0)?|query-immodules-[23].0-64|launch)|bl|f)|l(?:ib-compile-schemas|x(?:gears|info))|a(?:mma4scanimage|pplication|tttool)|kbd-keyboard-display|io-querymodules-64|u(?:charma|nzi)p|js(?:-console)?|z(?:exe|ip)|hostscript|make)|s(?:y(?:s(?:tem(?:d-(?:t(?:ty-ask-password-agent|mpfiles)|a(?:sk-password|nalyze)|c(?:g(?:top|ls)|at)|de(?:tect-virt|lta)|machine-id-setup|n(?:otify|spawn)|stdio-bridge|inhibit|run)|-config-printer(?:-applet)?|ctl)?|l(?:inux|ogd)|klogd|ctl)|n(?:client|daemon))|e(?:t(?:(?:l(?:ogcon|ed)|keycode)s|f(?:a(?:ttr|cl)|dprm|ont)|v(?:esablank|trgb)|c(?:ifsacl|ap)|s(?:erial|id)|p(?:riv|ci)|metamode|xkbmap|quota|arch|term)|n(?:dmail|sors)|rvertool|ssreg|q)|t(?:a(?:rt(?:-(?:pulseaudio-(?:kde|x11)|statd)|x)|td)|r(?:(?:ac(?:e-log-merg)?|fil)e|ings)|dbuf|ty)|m(?:b(?:c(?:(?:quota|acl)s|lient4?|ontrol)|t(?:a(?:-util|r)|ree)|passwd|spool|get)|-notify)|h(?:o(?:w(?:(?:consolefo|mou)nt|key|rgb)|pt)|a(?:(?:2(?:24|56)|384|512|1)?sum|resec)|uf)?|c(?:r(?:iptreplay|eendump)|p(?:-dbus-service)?|an(?:image|adf))|p(?:e(?:ech-dispatcher|aker-test)|d-(?:conf|say)|lain|rof)|s(?:h(?:-(?:key(?:sca|ge)n|a(?:gent|dd)|copy-id)|d)?)?|a(?:(?:ne-find-scann|fe_fing)er|mba-regedit)|w(?:ap(?:o(?:ff|n)|label)|itch_root)|l(?:a(?:ttach|btop)|o(?:cate|gin))|u(?:do(?:replay|edit)|login)|bc(?:(?:de|en)c|info)|o(?:truss|elim|xi?)|d(?:ptool|iff)|f(?:disk|tp)|g(?:disk)?|imple-scan|nice|2p)|p(?:a(?:m(?:_t(?:imestamp_check|ally2)|on)|r(?:t(?:probe|ed|x)|ec(?:ord)?)|ngo-(?:querymodules-64|view)|s(?:uspender|swd)|c(?:at|md|tl)|x11publish|thchk|play|dsp)|d(?:f(?:to(?:p(?:pm|s)|cairo|html|text)|(?:separa|uni)te|i(?:mages|nfo)|2(?:dsc|ps)|detach|fonts)|bedit)|s(?:2(?:p(?:df(?:1[234]|wr)?|s2?)|(?:asci|eps)i)|f(?:strip|add|get|x)table|tr(?:ee(?:.x11)?|uct)|ed)?|o(?:d(?:2(?:latex|usage|html|text|man)|checker|select)|st-grohtml|weroff|rtmap|pd)|r(?:e(?:-grohtml|conv)|(?:alias|ofil)es|int(?:afm|env|f)|(?:limi|tsta)t)?|m(?:-(?:(?:suspen(?:d-hybri)?|is-supporte)d|(?:hibernat|powersav)e)|ap)|p(?:p(?:oe-discovery|d(?:ump)?|stats)|d(?:[ci]|merge|html|po)|hs)|u(?:rple-(?:send(?:-async)?|url-handler|remote)|lseaudio|shd)|i(?:n(?:entry(?:-curses)?|g6|ky)|vot_root|xeltool|conv|dof)|y(?:thon(?:3(?:.4m?)?|2(?:.7)?)|doc(?:3(?:.4)?)?|venv-3.4)|k(?:(?:acti|m)on|c(?:heck|on)|g-config|ttyagent|exec|ill)|e(?:rl(?:thanks|bug|doc|ivp)?|ekfd)|l(?:ipconfig|ymouthd?|2pm|dd)|w(?:c(?:onv|k)|unconv|dx?)|t(?:ar(?:diff|grep)?|x)|f(?:btopfa|2afm)|11-kit|nm2ppa|grep)|m(?:[4v]|k(?:f(?:s(?:.(?:(?:cram|nt|b)fs|m(?:inix|sdos)|ext[234]|v?fat))?|ont(?:scale|dir)|ifo)|(?:lost+foun|rai)d|i(?:nitrd|sofs)|homedir_helper|(?:swa|tem)p|d(?:osfs|ir)|n(?:tfs|od)|manifest|zftree|e2fs)|s(?:g(?:c(?:o(?:mm|nv)|at|mp)|f(?:ilter|mt)|un(?:fmt|iq)|e(?:xec|n)|attrib|merge|grep|init)|ho(?:rtname|wfat))|o(?:u(?:nt(?:.(?:n(?:tfs(?:-3g)?|fs4?)|lowntfs-3g|fuse)|point|stats|d)|setweaks)|d(?:probe|info)|grify)|a(?:ke(?:d(?:eltarpm|bm?)|map)|il(?:[qx]|stats|to)|p(?:file|scrn)|n(?:path|db)|chinectl|ttrib)|c(?:-(?:wait-for-name|tool)|o(?:okie|mp|py)|lasserase|heck|at|d)|d(?:el(?:(?:, mdel)?tree)?|5sum|ir|u)|e(?:ta(?:mail|send)|mdiskfind|sg)|p(?:g(?:123|321)|artition)|i(?:mencode|i-tool|nfo)|t(?:ools(?:test)?|ype)?|m(?:o(?:unt|ve)|cli|d)|badblocks|r(?:en|d)|format|label|xtar|zip)|c(?:ups(?:-(?:(?:genppdupd|calibr)ate|browsed)|a(?:ccept|ddsmb)|test(?:dsc|ppd)|d(?:isable)?|enable|filter|reject|ctl)|h(?:a(?:rmap|ttr|cl|ge)|eck-binary-files|(?:r(?:oo)?|v)t|(?:passw|mo)d|c(?:on|pu)|(?:ow|f)n|kconfig|grp|sh)|a(?:r(?:ibou-preferences|d(?:ctl|mgr))|nberra-gtk-play|t(?:chsegv|man)|p(?:toinfo|sh)|librate_ppa)|r(?:acklib-(?:(?:un)?packer|format|check)|eate-(?:cracklib-dict|jar-links)|on(?:tab|d)?|c32|da)|d(?:-(?:(?:create|fix)-profile|iccdump)|r(?:ecord|dao)|paranoia|da2wav)?|o(?:m(?:binedeltarpm|mand)|l(?:ormgr|crt|rm)|nfig_data|relist)|i(?:fs(?:creds|dd)|ptool)|t(?:rlaltdel|stat|ags)|lean-binary-files|(?:_rehas|2p)h|p(?:an|io|p)?|[fg]disk|split|v[st]|ksum|mp)|l(?:o(?:c(?:al(?:e(?:ctl|def)|c)|kfile)|g(?:(?:rotat|nam|sav)e|inctl)|w(?:ntfs-3g|riter|eb)|f(?:romtemplat|fic)e|ad(?:unimap|keys)|impress|setup|draw|math)|s(?:b(?:_release|lk)|(?:initr|mo)d|lo(?:gin|ck)s|p(?:gpot|ci)|usb(?:.py)?|attr|cpu|of)?|p(?:[cq]|r(?:setup.sh|m)?|(?:_sol|mo)ve|options|passwd|admin|info|stat)?|i(?:b(?:ieee1284_test|reoffice|netcfg)|nux(?:-boot-prober|32|64))|z(?:m(?:a(?:info)?|ore)|c(?:at|mp)|[ef]?grep|diff|less)?|wp-(?:d(?:ownload|ump)|request|mirror)|d(?:(?:.(?:gol|bf))?d|attach|config)?|e(?:ss(?:echo|key)|xgrog)|2(?:ping|test)|ast(?:log|b)|ftp(?:get)?|u(?:ac?|it)|n(?:stat)?|convert)|r(?:e(?:a(?:d(?:o(?:nly|m)|profile|array|link|elf|cd)|lpath)|g(?:d(?:bdump|iff)|patch|shell|tree)|b(?:uild-jar-repository|oot)|size(?:(?:con|2f)s|part)|(?:code-sr-lati|tur)n|n(?:am|ic)e|pquota|xecd?)|p(?:c(?:(?:.(?:idmap|stat|gss)|bin)d|client|debug|info|gen)|m(?:(?:verif|quer)y|2cpio|keys|db)?)|u(?:n(?:-parts|level|user|con)|p(?:time)?|sersd?)|t(?:(?:acc|sta)t|kitctl|cwake|mon)|m(?:i(?:registry|d)|ail|dir|mod)?|a(?:idstart|msize|nlib|rpd?)|s(?:y(?:slogd|nc)|hd?)|o(?:ute[dfl]|otflags)|hythmbox(?:-client)?|d(?:istd?|ate|ev)|c(?:[cp]|test)|w(?:hod?|all)|n(?:ano|dc)|vi(?:ew|m)|ichtext|logind?|fcomm|bash)|d(?:[df]|b(?:_(?:(?:archiv|upgrad)e|(?:checkpoin|sta)t|d(?:eadlock|ump)|hotbackup|printlog|recover|verify|load)|us-(?:(?:(?:run-sessi|daem)o|uuidge)n|cleanup-sockets|monitor|launch|send)|wrap_tool)|e(?:sktop-file-(?:validate|install|edit)|(?:allocv|lpar)t|bugfs|vdump|pmod)|ns(?:sec-(?:sign(?:zone|key)|makekeyset|keygen)|domainname|masq)|v(?:d+rw-(?:mediainfo|booktype|format)|d-ram-control|ipdf)|o(?:(?:tlockfil|mainnam)e|sfs(?:label|ck)|exec)|i(?:r(?:colors|split|name)|ff(?:-jars|3)?)|(?:hclien(?:t-scrip)?|racu)t|m(?:idecode|setup|esg)|ump(?:e2f|key)s|c(?:onf)?|lpsh|wp)|n(?:t(?:fs(?:(?:(?:trunca|undele)t|resiz|mov|wip)e|-3g(?:.(?:secaudit|usermap|probe))?|c(?:l(?:uster|one)|m?p|at)|l(?:abel|s)|decrypt|info|fix)|db(?:(?:backu|dum)p|restore|tool)|pdate)|m(?:tui(?:-(?:(?:connec|edi)t|hostname))?|-(?:connection-editor|applet|online)|blookup4?|cli)?|a(?:utilus-(?:autorun-software|connect-server|sendto)|meif?)|e(?:w(?:(?:aliase|user)s|grp)|t(?:s(?:csid|tat)|cat)|qn)|f(?:s(?:i(?:ostat|dmap)|stat|d)|nl_osf)|s(?:lookup|update|enter|tat)|c(?:ursesw?5-config|at)?|o(?:tify-send|login|hup)|(?:gettex|umfm)t|isdomainname|proc|l)|x(?:d(?:g-(?:user-dir(?:s(?:-gtk)?-update)?|s(?:creensaver|ettings)|(?:icon-resourc|mim)e|desktop-(?:icon|menu)|email|open)|(?:py|ri)info)|m(?:l(?:patterns(?:validator)?|catalog|lint|wf)|essage|odmap)|s(?:et(?:pointer|wacom|mode|root)?|(?:tdcma|ubp)p|ltproc)|z(?:d(?:iff|ec)|c(?:at|mp)|[ef]?grep|less|more)?|ls(?:(?:clie|fo)nt|atom)s|t(?:ables-multi|erm)|in(?:(?:pu|i)t|etd)|r(?:efresh|andr|db)|g(?:ettext|amma)|k(?:bcomp|ill)|(?:win|v)info|a(?:rgs|uth)|console|brlapi|host|prop|ev|xd)|u(?:n(?:i(?:x(?:_(?:chkpwd|update)|-lpr.sh)|code_st(?:art|op)|q)|s(?:eta2p|hare)|o(?:conv|pkg)|a(?:lias|me)|l(?:ink|zma)|compress|expand|zipsfx|xz)|p(?:date(?:-(?:(?:(?:ca-certificat|alternativ)e|pciid)s|(?:desktop|mime)-database)|db)|ower)|s(?:b(?:_modeswitch(?:_dispatcher)?|-devices|hid-dump|muxd)|er(?:(?:ad|mo)d|del|s)|leep)|m(?:ount(?:.(?:udisks2|nfs4?))?|a(?:x_pp|sk))|d(?:ev(?:adm|d)|isksctl)|l(?:ockmgr_server|imit)?|u(?:(?:de|en)code|idgen)|tmpdump|cs2any|xterm|ic3|z)|e(?:u-(?:s(?:t(?:ri(?:ngs|p)|ack)|ize)|(?:objdum|unstri)p|make-debug-archive|r(?:eadelf|anlib)|a(?:ddr2line|r)|elf(?:lint|cmp)|findtextrel|nm)|s(?:d(?:c(?:at|tl)|-config|sample|play|dsp|mon|rec)?|cputil)|2(?:f(?:reefrag|sck)|image|label|undo)|n(?:c(?:hant-lsmod|2xs)|v(?:subst)?)|v(?:ince-(?:thumbnail|preview)er|al)|mpathy-(?:accounts|debugger)|asy_install(?:-2.7)?|l(?:fedit|vtune)|t(?:htool|ags)|(?:4defra|o)g|xp(?:ort|r)|dquota|ps2eps|grep|ject|cho|qn)|i(?:p(?:t(?:ables(?:-(?:(?:restor|sav)e|apply|xml))?|unnel)|6tables(?:-(?:restor|sav)e)?|od-read-sysinfo-extended|c(?:mk|rm|s)|maddr|ptool)?|n(?:s(?:t(?:all(?:-(?:printerdriver|info)|kernel)|modsh)|mod)|fo(?:(?:toca|cm)p|key)|putattach|etd|it)|s(?:o(?:hybrid|dump|info|size|vfy)|dv4-serial-inputattach|pell)|bus(?:-(?:daemon|setup))?|c(?:onv(?:config)?|eauth)|f(?:config|down|up)?|r(?:qbalance|b)|(?:map)?d|ecset|gawk|386|w)|a(?:u(?:to(?:(?:updat|mak)e|(?:re)?conf|header|scan)|last(?:log)?|diosend|syscall|virt|mix)|p(?:ply(?:gnupgdefaults|deltarpm)|lay(?:midi)?|md?)|c(?:pi(?:_available|d)?|cessdb|onnect|local)|l(?:sa(?:-info.sh|mixer|loop|ctl|ucm)|ias)|dd(?:(?:gnupghom|r2lin)e|part|user)|r(?:ecord(?:midi)?|p(?:ing|d)?)|m(?:i(?:xer|di)|uFormat.sh)|vahi-(?:autoipd|daemon)|seq(?:dump|net)|t(?:[dq]|rm|tr)|bs2rel|nacron|getty|wk)|f(?:i(?:n(?:d(?:2perl|-jar|mnt|fs)|gerd)|le(?:-roller|frag)|ps(?:check|hmac)|xparts|refox)|s(?:ck(?:.(?:m(?:inix|sdos)|ext[234]|cramfs|v?fat))?|t(?:ab-decode|rim)|freeze)|c-(?:(?:patter|sca)n|ca(?:che|t)|validate|match|query|list)|u(?:n(?:ction(?:alias)?|zip)|sermount)|o(?:nt(?:tosfnt|2c)|rmail)|a(?:llocate|tlabel)|g(?:console|rep)|d(?:format|isk)|etchmail|tpd|mt)|t(?:r(?:a(?:c(?:ker-(?:s(?:earch|parql|tats)|i(?:mport|nfo)|control|tag)|e(?:route6?|path6?))|nsmission-gtk)|y-from)|c(?:p(?:(?:tracerout|slic)e|d(?:match|ump)?)|lsh(?:8.6)?)?|otem-(?:video-thumbnailer|audio-preview)|e(?:l(?:init|netd)|stparm)|(?:s(?:or|e)|zselec|pu)t|a(?:skset|ilf|lkd|bs)|ime(?:datectl|s)|une(?:2fs|lp)|nameserv|mpwatch|ftpd?|load|bl|gz|ty)|b(?:u(?:il(?:d-(?:classpath(?:-directory)?|jar-repository)|tin)|nzip2|sctl)|z(?:ip2(?:recover)?|c(?:at|mp)|[ef]?grep|diff|less|more)|l(?:uetooth(?:-sendto|ctl|d)|k(?:discar|map|i)d|ockdev)|r(?:ltty(?:-(?:t(?:rtxt|tb)|ctb))?|oadwayd)|a(?:s(?:e(?:name|64)|hbug)|dblocks)|dft(?:runcate|opcf)|i(?:osdecode|ff)|c(?:cmd)?|ootctl|tmon)|h(?:p(?:-(?:(?:t(?:estpag|imedat)|firmwar)e|l(?:ogcapture|evels)|c(?:olorcal|lean)|p(?:lugin|robe)|s(?:etup|can)|makeuri|unload|align|query|info)|ijs)|ci(?:attach|config|tool)|ost(?:name(?:ctl)?|id)|(?:tdiges|al)t|2(?:ph|xs)|unspell|exdump|wclock|dparm)|q(?:(?:help(?:converte|generato)|collectiongenerato)r|d(?:bus(?:cpp2xml|xml2cpp|viewer)?|oc3)|uota(?:o(?:ff|n)|check|stats)|ml(?:plugindump|viewer)|tconfig)|o(?:o(?:impress|writer|ffice|calc|draw)|s(?:-prober|d_login)|bj(?:copy|dump)|(?:ldfin|rb)d|pen(?:ssl|vt)|Lschema2ldif|n_ac_power|mshell)|z(?:i(?:p(?:details|cloak|split|grep|info|note)|c)|e(?:grep|nity)|f(?:grep|orce)|d(?:iff|ump)|new(?:bind)?|c(?:at|mp)|grep|less|more)|w(?:h(?:(?:ere|at)is|o(?:ami|is)|iptail)|pa_(?:passphrase|supplicant|cli)|a(?:tchgnupg|rnquota)|ftopfa|ipefs|dctl|odim|get)?|k(?:e(?:rnel(?:-install|version)|y(?:too|ct)l)|bd(?:(?:_mod|rat)e|info)|(?:log|mo)d|oi8rxterm|illall5?)|v(?:i(?:m(?:tutor|diff)?|dmode|sudo|gr|pw)|m(?:mouse_detec|sta)t|(?:pddecod|olnam)e|dir|stp)|yp(?:p(?:asswd?d|oll|ush)|(?:ini|tes|ca)t|(?:mat|whi)ch|domainname|se(?:rv|t)|bind|xfr)|j(?:o(?:urnalctl|bs)|son_pp|avaws|vmjar)|M(?:odemManager|ail)|X(?:wayland|org|11)|NetworkManager|c+\+(?:filt)?|g+\+)(?&amp;cmd_boundary))
)(?x)
(?:(?&amp;cmd_op)(?&amp;opt_spaces))(?:(?:(?&amp;assignment)(?&amp;opt_spaces))*
    (?:
        (?&amp;os_command)|
        (?&amp;fp_command)(?&amp;opt_spaces)
            (?:
                (?&amp;param)|
                (?&amp;path)|
                (?&amp;url)|
                (?&amp;ipv4)|
                (?&amp;ipv6)
            )|
        (?&amp;path)|
        (?&amp;sleep)|
        (?&amp;system_variable)|
        (?&amp;func_def)|
        (?&amp;glob_list)+|
        (?&amp;spec_param)|
        (?&amp;param_expansion)|
        (?&amp;split_cmd)
      )|
      (?:(?&amp;opt_spaces)(?&amp;assignment))+.*(?&amp;variable_usage)
)|
(?&amp;file_op)(?&amp;opt_spaces)(?&amp;path)</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-485</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2156">
            <Name>(default UNIX_010b) UNIX command injection in unquoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30019</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 4</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Accept$
^Accept-Language$
^Accept-Encoding$
^Accept-Charset$
^Content-Type$
^Referer$
^User-Agent$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-812</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default UNIX_010b) UNIX command injection in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;opt_spaces>(?:[\h\v(]|#[^\v]*[\v]|\\\v)*)
    (?&lt;cmd_op>(?:;|\|\||&amp;&amp;|&amp;|\||&lt;\(|&lt;\h+&lt;\(|(?&amp;inline_op)))
    (?&lt;cmd_boundary>[;|&amp;`'&quot;{$\v\h]|$)
    (?&lt;inline_op>(?:`|\$\())
    (?&lt;file_op>(?:(?&lt;!&lt;)&lt;&lt;&lt;|(?&lt;!>)>>|(?&lt;!>)>\||(?&lt;!&lt;)&lt;|(?&lt;!>)>))
    (?&lt;system_variable>\$[A-Z_][A-Z0-9_]*\b)
    (?&lt;file_character>(?:[^\h\\]|\\\\|\\\h))
    (?&lt;file_glob>(?:(?=(?&amp;file_character)*[\/])(?=(?&amp;file_character)*[\*?])(?&amp;file_character){3,}))
    (?&lt;func_name>[^\v\h!&lt;>|&amp;`&quot;';$()]+)
    (?&lt;func_def>(?&amp;func_name)\h*\(\h*\)(?&amp;opt_spaces)\{)
    (?&lt;list_element_comma>[^\h\v,}]*)
    (?&lt;list_element_dot>[^\h\v\.}]*)
    (?&lt;glob_list>[a-z]*?\{(?:(?:(?&amp;list_element_comma),)+(?&amp;list_element_comma)|(?:(?&amp;list_element_dot)\.\.){1,2}(?&amp;list_element_dot))})
    (?&lt;spec_param>\$[*@$!?\-_])
    (?&lt;rel_path>(?:(?=(?&amp;file_character)*\.\./)(?&amp;file_character)*))
    (?&lt;path_exp>~(?:\w+\b|\+|-|/))
    (?&lt;path>(?:(?&amp;rel_path)|(?&amp;tld)|(?&amp;path_exp)|(?&amp;file_glob)))
    (?&lt;string>(?:(?&amp;nonconcat_string)+))
    (?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
    (?&lt;variable>[a-z_][^{}\h\v=&lt;>|&amp;`&quot;';$]*)
    (?&lt;value>(?&amp;string)|(?&amp;variable_usage)|(?:[^{}\h\v=&lt;>|&amp;`&quot;';$]*))
    (?&lt;assignment>(?&amp;variable)=\(?(?&amp;value))
    (?&lt;variable_usage>\$\{?(?&amp;variable))
    (?&lt;param_expansion>\$\{[^!\^,~*@#%\/:\-=+?}]*[!\^,~*@#%\/:\-=+?])
    (?&lt;split_cmd>\w+\\\v)
    (?&lt;tld>[./]*(?:bin|boot|cdrom|data|dev|devices|etc|export|files|home|import|kernel|lib|lib32|lib64|lost+found|media|mnt|net|opt|platform|private|proc|rescue|root|run|sbin|selinux|srv|sys|tmp|usr|var|vol)/[./]*[^/\h]{2}[^\h]*)
    (?&lt;param>(?:--|-|\+)[a-zA-Z]+\b)
    (?&lt;url>[^\h]+\.(?!\h)[a-zA-Z]{2,}(?!\.)\b)
    (?&lt;ipv4>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))
    (?&lt;ipv6>(?>(?>([a-fA-F0-9]{1,4})(?>:(?1)){7}|(?!(?:.*[a-fA-F0-9](?>:|$)){8,})((?1)(?>:(?1)){0,6})?::(?2)?)|(?>(?>(?1)(?>:(?1)){5}:|(?!(?:.*[a-fA-F0-9]:){6,})(?3)?::(?>((?1)(?>:(?1)){0,4}):)?)?(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\.(?4)){3})))
    (?&lt;sleep>(?:(?:sleep|timeout)[\h\v]+\d+)\b)
    (?&lt;fp_command>\b(?:s(?:e(?:(?:ahors|rvic)e|(?:lec)?t|d)|o(?:(?:ffi|ur)ce|rt)|h(?:utdown|ift|red)|t(?:r(?:eam|ip)|at)|u(?:shi|do|m)?|cr(?:een|ipt)|aned|kill|leep|plit|ize|ync)|c(?:[cd]|o(?:m(?:p(?:(?:osit|ar)e|ress)|m)|n(?:(?:tinu|jur)e|vert)|l(?:umn)?)|a(?:l(?:ler)?|ncel|se|t)|h(?:eese|at)|u(?:rl|t)|lear)|t(?:r(?:u(?:(?:ncat)?e|st)|off|ap)?|e(?:(?:lne|s)t|e)|i(?:me(?:out)?|c)|o(?:[ep]|tem|uch)|a(?:[cr]|il|lk)|ype(?:set)?)|e(?:x(?:p(?:and|iry|ort)|ec|it)?|n(?:chant|able)|m(?:pathy|acs)|d(?:it)?|vince|ject|cho)|f(?:i(?:n(?:ger|d)|le)|a(?:ctor|lse)|l(?:ock|ex)|o(?:ld|r)|user|ree|tp)|l(?:o(?:g(?:ger|out|in)|ca(?:le?|te)|ok)|e(?:ss|t)|in[ek]|ast|s)|a(?:(?:ddresse)?s|cce(?:pt|ss)|p(?:ropos|t)|r(?:ch)?|nimate|t)|r(?:e(?:[cv]|s(?:(?:tor|iz)e|et)|(?:boo|jec)t|a?d)|oute|aw)|b(?:a(?:(?:tc|s)h|nner|obab)|r(?:idge|eak)|i(?:son|nd))|d(?:i(?:[gr]|s(?:able|play))|(?:eclar|at)e|u(?:mp)?)|m(?:o(?:(?:ntag|r)e|unt)|a(?:il|ke|n)|utter|erge)|i(?:n(?:stall|fo)|d(?:entify)?|mport|onice|f)|p(?:a(?:ste|tch)|i(?:co?|ng)|ython|rove|lay)|w(?:h(?:i(?:ch|le)|o)|a(?:tch|ll)|rite|c)|n(?:a(?:utilus|med|no)|roff|ice|et)|h(?:a(?:lt|sh)|e(?:ad|lp)|ost)|u(?:n(?:set|til|zip)|ptime)|o(?:wnership|pen|rca|d)|g(?:ro(?:ups|g)|awk|s)|y(?:e(?:lp|s)|acc)|vi(?:nagre|ew)?|k(?:udzu|ill)|j(?:ava|oin)|quota|zip)(?&amp;cmd_boundary))
    (?&lt;os_command>\b(?:g(?:nome-(?:s(?:hell(?:-(?:extension-(?:prefs|tool)|perf-tool))?|ession(?:-(?:inhib|qu)it)?|ystem-(?:monitor|log)|creenshot)|c(?:ont(?:rol-center|acts)|haracter-map|alculator|locks)|t(?:e(?:xt-editor|rminal)|humbnail-font)|d(?:isk(?:-image-mounter|s)|ocuments)|keyring(?:-(?:daemon|3))?|font-viewer|help)|r(?:ub(?:2-(?:m(?:k(?:(?:standalon|imag)e|re(?:lpath|scue)|(?:layou|fon)t|passwd-pbkdf2|netdir)|enulst2cfg)|s(?:cript-check|yslinux2cfg)|f(?:stest|ile)|render-label|glue-efi|editenv|kbdcomp)|-install)|o(?:up(?:(?:ad|mo)d|del)|(?:wisof|p)s|ff(?:er)?|tty)|p(?:c(?:onv|k)|unconv)|e(?:source|p))|s(?:t(?:-(?:(?:(?:inspect|launch)|typefind)-(?:0.1|1.)|(?:xml(?:inspect|launch)|feedback)-0.1)0|ack)|ettings(?:-data-convert)?|dj(?:500)?|l[jp]|bj|nd)|p(?:g(?:-(?:(?:connect-)?agent|zip)|parsemail|key2ssh|split|conf|v2?|2)?|k-(?:(?:install-local-fil|dbus-servic)e|prefs|log)|asswd|rof|ic|m)|vfs-(?:m(?:o(?:nitor-(?:file|dir)|unt|ve)|kdir|ime)|s(?:et-attribut|av)e|r(?:ename|m)|tr(?:ash|ee)|c(?:opy|at)|l(?:es)?s|info|open)|e(?:t(?:c(?:ifsacl|onf|ap)|(?:keycode|pcap)s|e(?:ltorito|nt)|fa(?:ttr|cl)|text(?:.sh)?|hostip|opts?)|n(?:isoimage|cat)|dit|qn)|c(?:m-(?:i(?:nspec|mpor)t|(?:pick|view)er|calibrate)|o(?:nf(?:-merge-tree|tool-2)|re)|r-viewer|alccmd|c)|d(?:m(?:-screenshot|flexiserver)|k-pixbuf-query-loaders-64|b(?:-add-index|us)?|isk)|t(?:k-(?:update-icon-cache(?:-3.0)?|query-immodules-[23].0-64|launch)|bl|f)|l(?:ib-compile-schemas|x(?:gears|info))|a(?:mma4scanimage|pplication|tttool)|kbd-keyboard-display|io-querymodules-64|u(?:charma|nzi)p|js(?:-console)?|z(?:exe|ip)|hostscript|make)|s(?:y(?:s(?:tem(?:d-(?:t(?:ty-ask-password-agent|mpfiles)|a(?:sk-password|nalyze)|c(?:g(?:top|ls)|at)|de(?:tect-virt|lta)|machine-id-setup|n(?:otify|spawn)|stdio-bridge|inhibit|run)|-config-printer(?:-applet)?|ctl)?|l(?:inux|ogd)|klogd|ctl)|n(?:client|daemon))|e(?:t(?:(?:l(?:ogcon|ed)|keycode)s|f(?:a(?:ttr|cl)|dprm|ont)|v(?:esablank|trgb)|c(?:ifsacl|ap)|s(?:erial|id)|p(?:riv|ci)|metamode|xkbmap|quota|arch|term)|n(?:dmail|sors)|rvertool|ssreg|q)|t(?:a(?:rt(?:-(?:pulseaudio-(?:kde|x11)|statd)|x)|td)|r(?:(?:ac(?:e-log-merg)?|fil)e|ings)|dbuf|ty)|m(?:b(?:c(?:(?:quota|acl)s|lient4?|ontrol)|t(?:a(?:-util|r)|ree)|passwd|spool|get)|-notify)|h(?:o(?:w(?:(?:consolefo|mou)nt|key|rgb)|pt)|a(?:(?:2(?:24|56)|384|512|1)?sum|resec)|uf)?|c(?:r(?:iptreplay|eendump)|p(?:-dbus-service)?|an(?:image|adf))|p(?:e(?:ech-dispatcher|aker-test)|d-(?:conf|say)|lain|rof)|s(?:h(?:-(?:key(?:sca|ge)n|a(?:gent|dd)|copy-id)|d)?)?|a(?:(?:ne-find-scann|fe_fing)er|mba-regedit)|w(?:ap(?:o(?:ff|n)|label)|itch_root)|l(?:a(?:ttach|btop)|o(?:cate|gin))|u(?:do(?:replay|edit)|login)|bc(?:(?:de|en)c|info)|o(?:truss|elim|xi?)|d(?:ptool|iff)|f(?:disk|tp)|g(?:disk)?|imple-scan|nice|2p)|p(?:a(?:m(?:_t(?:imestamp_check|ally2)|on)|r(?:t(?:probe|ed|x)|ec(?:ord)?)|ngo-(?:querymodules-64|view)|s(?:uspender|swd)|c(?:at|md|tl)|x11publish|thchk|play|dsp)|d(?:f(?:to(?:p(?:pm|s)|cairo|html|text)|(?:separa|uni)te|i(?:mages|nfo)|2(?:dsc|ps)|detach|fonts)|bedit)|s(?:2(?:p(?:df(?:1[234]|wr)?|s2?)|(?:asci|eps)i)|f(?:strip|add|get|x)table|tr(?:ee(?:.x11)?|uct)|ed)?|o(?:d(?:2(?:latex|usage|html|text|man)|checker|select)|st-grohtml|weroff|rtmap|pd)|r(?:e(?:-grohtml|conv)|(?:alias|ofil)es|int(?:afm|env|f)|(?:limi|tsta)t)?|m(?:-(?:(?:suspen(?:d-hybri)?|is-supporte)d|(?:hibernat|powersav)e)|ap)|p(?:p(?:oe-discovery|d(?:ump)?|stats)|d(?:[ci]|merge|html|po)|hs)|u(?:rple-(?:send(?:-async)?|url-handler|remote)|lseaudio|shd)|i(?:n(?:entry(?:-curses)?|g6|ky)|vot_root|xeltool|conv|dof)|y(?:thon(?:3(?:.4m?)?|2(?:.7)?)|doc(?:3(?:.4)?)?|venv-3.4)|k(?:(?:acti|m)on|c(?:heck|on)|g-config|ttyagent|exec|ill)|e(?:rl(?:thanks|bug|doc|ivp)?|ekfd)|l(?:ipconfig|ymouthd?|2pm|dd)|w(?:c(?:onv|k)|unconv|dx?)|t(?:ar(?:diff|grep)?|x)|f(?:btopfa|2afm)|11-kit|nm2ppa|grep)|m(?:[4v]|k(?:f(?:s(?:.(?:(?:cram|nt|b)fs|m(?:inix|sdos)|ext[234]|v?fat))?|ont(?:scale|dir)|ifo)|(?:lost+foun|rai)d|i(?:nitrd|sofs)|homedir_helper|(?:swa|tem)p|d(?:osfs|ir)|n(?:tfs|od)|manifest|zftree|e2fs)|s(?:g(?:c(?:o(?:mm|nv)|at|mp)|f(?:ilter|mt)|un(?:fmt|iq)|e(?:xec|n)|attrib|merge|grep|init)|ho(?:rtname|wfat))|o(?:u(?:nt(?:.(?:n(?:tfs(?:-3g)?|fs4?)|lowntfs-3g|fuse)|point|stats|d)|setweaks)|d(?:probe|info)|grify)|a(?:ke(?:d(?:eltarpm|bm?)|map)|il(?:[qx]|stats|to)|p(?:file|scrn)|n(?:path|db)|chinectl|ttrib)|c(?:-(?:wait-for-name|tool)|o(?:okie|mp|py)|lasserase|heck|at|d)|d(?:el(?:(?:, mdel)?tree)?|5sum|ir|u)|e(?:ta(?:mail|send)|mdiskfind|sg)|p(?:g(?:123|321)|artition)|i(?:mencode|i-tool|nfo)|t(?:ools(?:test)?|ype)?|m(?:o(?:unt|ve)|cli|d)|badblocks|r(?:en|d)|format|label|xtar|zip)|c(?:ups(?:-(?:(?:genppdupd|calibr)ate|browsed)|a(?:ccept|ddsmb)|test(?:dsc|ppd)|d(?:isable)?|enable|filter|reject|ctl)|h(?:a(?:rmap|ttr|cl|ge)|eck-binary-files|(?:r(?:oo)?|v)t|(?:passw|mo)d|c(?:on|pu)|(?:ow|f)n|kconfig|grp|sh)|a(?:r(?:ibou-preferences|d(?:ctl|mgr))|nberra-gtk-play|t(?:chsegv|man)|p(?:toinfo|sh)|librate_ppa)|r(?:acklib-(?:(?:un)?packer|format|check)|eate-(?:cracklib-dict|jar-links)|on(?:tab|d)?|c32|da)|d(?:-(?:(?:create|fix)-profile|iccdump)|r(?:ecord|dao)|paranoia|da2wav)?|o(?:m(?:binedeltarpm|mand)|l(?:ormgr|crt|rm)|nfig_data|relist)|i(?:fs(?:creds|dd)|ptool)|t(?:rlaltdel|stat|ags)|lean-binary-files|(?:_rehas|2p)h|p(?:an|io|p)?|[fg]disk|split|v[st]|ksum|mp)|l(?:o(?:c(?:al(?:e(?:ctl|def)|c)|kfile)|g(?:(?:rotat|nam|sav)e|inctl)|w(?:ntfs-3g|riter|eb)|f(?:romtemplat|fic)e|ad(?:unimap|keys)|impress|setup|draw|math)|s(?:b(?:_release|lk)|(?:initr|mo)d|lo(?:gin|ck)s|p(?:gpot|ci)|usb(?:.py)?|attr|cpu|of)?|p(?:[cq]|r(?:setup.sh|m)?|(?:_sol|mo)ve|options|passwd|admin|info|stat)?|i(?:b(?:ieee1284_test|reoffice|netcfg)|nux(?:-boot-prober|32|64))|z(?:m(?:a(?:info)?|ore)|c(?:at|mp)|[ef]?grep|diff|less)?|wp-(?:d(?:ownload|ump)|request|mirror)|d(?:(?:.(?:gol|bf))?d|attach|config)?|e(?:ss(?:echo|key)|xgrog)|2(?:ping|test)|ast(?:log|b)|ftp(?:get)?|u(?:ac?|it)|n(?:stat)?|convert)|r(?:e(?:a(?:d(?:o(?:nly|m)|profile|array|link|elf|cd)|lpath)|g(?:d(?:bdump|iff)|patch|shell|tree)|b(?:uild-jar-repository|oot)|size(?:(?:con|2f)s|part)|(?:code-sr-lati|tur)n|n(?:am|ic)e|pquota|xecd?)|p(?:c(?:(?:.(?:idmap|stat|gss)|bin)d|client|debug|info|gen)|m(?:(?:verif|quer)y|2cpio|keys|db)?)|u(?:n(?:-parts|level|user|con)|p(?:time)?|sersd?)|t(?:(?:acc|sta)t|kitctl|cwake|mon)|m(?:i(?:registry|d)|ail|dir|mod)?|a(?:idstart|msize|nlib|rpd?)|s(?:y(?:slogd|nc)|hd?)|o(?:ute[dfl]|otflags)|hythmbox(?:-client)?|d(?:istd?|ate|ev)|c(?:[cp]|test)|w(?:hod?|all)|n(?:ano|dc)|vi(?:ew|m)|ichtext|logind?|fcomm|bash)|d(?:[df]|b(?:_(?:(?:archiv|upgrad)e|(?:checkpoin|sta)t|d(?:eadlock|ump)|hotbackup|printlog|recover|verify|load)|us-(?:(?:(?:run-sessi|daem)o|uuidge)n|cleanup-sockets|monitor|launch|send)|wrap_tool)|e(?:sktop-file-(?:validate|install|edit)|(?:allocv|lpar)t|bugfs|vdump|pmod)|ns(?:sec-(?:sign(?:zone|key)|makekeyset|keygen)|domainname|masq)|v(?:d+rw-(?:mediainfo|booktype|format)|d-ram-control|ipdf)|o(?:(?:tlockfil|mainnam)e|sfs(?:label|ck)|exec)|i(?:r(?:colors|split|name)|ff(?:-jars|3)?)|(?:hclien(?:t-scrip)?|racu)t|m(?:idecode|setup|esg)|ump(?:e2f|key)s|c(?:onf)?|lpsh|wp)|n(?:t(?:fs(?:(?:(?:trunca|undele)t|resiz|mov|wip)e|-3g(?:.(?:secaudit|usermap|probe))?|c(?:l(?:uster|one)|m?p|at)|l(?:abel|s)|decrypt|info|fix)|db(?:(?:backu|dum)p|restore|tool)|pdate)|m(?:tui(?:-(?:(?:connec|edi)t|hostname))?|-(?:connection-editor|applet|online)|blookup4?|cli)?|a(?:utilus-(?:autorun-software|connect-server|sendto)|meif?)|e(?:w(?:(?:aliase|user)s|grp)|t(?:s(?:csid|tat)|cat)|qn)|f(?:s(?:i(?:ostat|dmap)|stat|d)|nl_osf)|s(?:lookup|update|enter|tat)|c(?:ursesw?5-config|at)?|o(?:tify-send|login|hup)|(?:gettex|umfm)t|isdomainname|proc|l)|x(?:d(?:g-(?:user-dir(?:s(?:-gtk)?-update)?|s(?:creensaver|ettings)|(?:icon-resourc|mim)e|desktop-(?:icon|menu)|email|open)|(?:py|ri)info)|m(?:l(?:patterns(?:validator)?|catalog|lint|wf)|essage|odmap)|s(?:et(?:pointer|wacom|mode|root)?|(?:tdcma|ubp)p|ltproc)|z(?:d(?:iff|ec)|c(?:at|mp)|[ef]?grep|less|more)?|ls(?:(?:clie|fo)nt|atom)s|t(?:ables-multi|erm)|in(?:(?:pu|i)t|etd)|r(?:efresh|andr|db)|g(?:ettext|amma)|k(?:bcomp|ill)|(?:win|v)info|a(?:rgs|uth)|console|brlapi|host|prop|ev|xd)|u(?:n(?:i(?:x(?:_(?:chkpwd|update)|-lpr.sh)|code_st(?:art|op)|q)|s(?:eta2p|hare)|o(?:conv|pkg)|a(?:lias|me)|l(?:ink|zma)|compress|expand|zipsfx|xz)|p(?:date(?:-(?:(?:(?:ca-certificat|alternativ)e|pciid)s|(?:desktop|mime)-database)|db)|ower)|s(?:b(?:_modeswitch(?:_dispatcher)?|-devices|hid-dump|muxd)|er(?:(?:ad|mo)d|del|s)|leep)|m(?:ount(?:.(?:udisks2|nfs4?))?|a(?:x_pp|sk))|d(?:ev(?:adm|d)|isksctl)|l(?:ockmgr_server|imit)?|u(?:(?:de|en)code|idgen)|tmpdump|cs2any|xterm|ic3|z)|e(?:u-(?:s(?:t(?:ri(?:ngs|p)|ack)|ize)|(?:objdum|unstri)p|make-debug-archive|r(?:eadelf|anlib)|a(?:ddr2line|r)|elf(?:lint|cmp)|findtextrel|nm)|s(?:d(?:c(?:at|tl)|-config|sample|play|dsp|mon|rec)?|cputil)|2(?:f(?:reefrag|sck)|image|label|undo)|n(?:c(?:hant-lsmod|2xs)|v(?:subst)?)|v(?:ince-(?:thumbnail|preview)er|al)|mpathy-(?:accounts|debugger)|asy_install(?:-2.7)?|l(?:fedit|vtune)|t(?:htool|ags)|(?:4defra|o)g|xp(?:ort|r)|dquota|ps2eps|grep|ject|cho|qn)|i(?:p(?:t(?:ables(?:-(?:(?:restor|sav)e|apply|xml))?|unnel)|6tables(?:-(?:restor|sav)e)?|od-read-sysinfo-extended|c(?:mk|rm|s)|maddr|ptool)?|n(?:s(?:t(?:all(?:-(?:printerdriver|info)|kernel)|modsh)|mod)|fo(?:(?:toca|cm)p|key)|putattach|etd|it)|s(?:o(?:hybrid|dump|info|size|vfy)|dv4-serial-inputattach|pell)|bus(?:-(?:daemon|setup))?|c(?:onv(?:config)?|eauth)|f(?:config|down|up)?|r(?:qbalance|b)|(?:map)?d|ecset|gawk|386|w)|a(?:u(?:to(?:(?:updat|mak)e|(?:re)?conf|header|scan)|last(?:log)?|diosend|syscall|virt|mix)|p(?:ply(?:gnupgdefaults|deltarpm)|lay(?:midi)?|md?)|c(?:pi(?:_available|d)?|cessdb|onnect|local)|l(?:sa(?:-info.sh|mixer|loop|ctl|ucm)|ias)|dd(?:(?:gnupghom|r2lin)e|part|user)|r(?:ecord(?:midi)?|p(?:ing|d)?)|m(?:i(?:xer|di)|uFormat.sh)|vahi-(?:autoipd|daemon)|seq(?:dump|net)|t(?:[dq]|rm|tr)|bs2rel|nacron|getty|wk)|f(?:i(?:n(?:d(?:2perl|-jar|mnt|fs)|gerd)|le(?:-roller|frag)|ps(?:check|hmac)|xparts|refox)|s(?:ck(?:.(?:m(?:inix|sdos)|ext[234]|cramfs|v?fat))?|t(?:ab-decode|rim)|freeze)|c-(?:(?:patter|sca)n|ca(?:che|t)|validate|match|query|list)|u(?:n(?:ction(?:alias)?|zip)|sermount)|o(?:nt(?:tosfnt|2c)|rmail)|a(?:llocate|tlabel)|g(?:console|rep)|d(?:format|isk)|etchmail|tpd|mt)|t(?:r(?:a(?:c(?:ker-(?:s(?:earch|parql|tats)|i(?:mport|nfo)|control|tag)|e(?:route6?|path6?))|nsmission-gtk)|y-from)|c(?:p(?:(?:tracerout|slic)e|d(?:match|ump)?)|lsh(?:8.6)?)?|otem-(?:video-thumbnailer|audio-preview)|e(?:l(?:init|netd)|stparm)|(?:s(?:or|e)|zselec|pu)t|a(?:skset|ilf|lkd|bs)|ime(?:datectl|s)|une(?:2fs|lp)|nameserv|mpwatch|ftpd?|load|bl|gz|ty)|b(?:u(?:il(?:d-(?:classpath(?:-directory)?|jar-repository)|tin)|nzip2|sctl)|z(?:ip2(?:recover)?|c(?:at|mp)|[ef]?grep|diff|less|more)|l(?:uetooth(?:-sendto|ctl|d)|k(?:discar|map|i)d|ockdev)|r(?:ltty(?:-(?:t(?:rtxt|tb)|ctb))?|oadwayd)|a(?:s(?:e(?:name|64)|hbug)|dblocks)|dft(?:runcate|opcf)|i(?:osdecode|ff)|c(?:cmd)?|ootctl|tmon)|h(?:p(?:-(?:(?:t(?:estpag|imedat)|firmwar)e|l(?:ogcapture|evels)|c(?:olorcal|lean)|p(?:lugin|robe)|s(?:etup|can)|makeuri|unload|align|query|info)|ijs)|ci(?:attach|config|tool)|ost(?:name(?:ctl)?|id)|(?:tdiges|al)t|2(?:ph|xs)|unspell|exdump|wclock|dparm)|q(?:(?:help(?:converte|generato)|collectiongenerato)r|d(?:bus(?:cpp2xml|xml2cpp|viewer)?|oc3)|uota(?:o(?:ff|n)|check|stats)|ml(?:plugindump|viewer)|tconfig)|o(?:o(?:impress|writer|ffice|calc|draw)|s(?:-prober|d_login)|bj(?:copy|dump)|(?:ldfin|rb)d|pen(?:ssl|vt)|Lschema2ldif|n_ac_power|mshell)|z(?:i(?:p(?:details|cloak|split|grep|info|note)|c)|e(?:grep|nity)|f(?:grep|orce)|d(?:iff|ump)|new(?:bind)?|c(?:at|mp)|grep|less|more)|w(?:h(?:(?:ere|at)is|o(?:ami|is)|iptail)|pa_(?:passphrase|supplicant|cli)|a(?:tchgnupg|rnquota)|ftopfa|ipefs|dctl|odim|get)?|k(?:e(?:rnel(?:-install|version)|y(?:too|ct)l)|bd(?:(?:_mod|rat)e|info)|(?:log|mo)d|oi8rxterm|illall5?)|v(?:i(?:m(?:tutor|diff)?|dmode|sudo|gr|pw)|m(?:mouse_detec|sta)t|(?:pddecod|olnam)e|dir|stp)|yp(?:p(?:asswd?d|oll|ush)|(?:ini|tes|ca)t|(?:mat|whi)ch|domainname|se(?:rv|t)|bind|xfr)|j(?:o(?:urnalctl|bs)|son_pp|avaws|vmjar)|M(?:odemManager|ail)|X(?:wayland|org|11)|NetworkManager|c+\+(?:filt)?|g+\+)(?&amp;cmd_boundary))
)(?x)
(?:(?&amp;cmd_op)(?&amp;opt_spaces))(?:(?:(?&amp;assignment)(?&amp;opt_spaces))*
    (?:
        (?&amp;os_command)|
        (?&amp;fp_command)(?&amp;opt_spaces)
            (?:
                (?&amp;param)|
                (?&amp;path)|
                (?&amp;url)|
                (?&amp;ipv4)|
                (?&amp;ipv6)
            )|
        (?&amp;path)|
        (?&amp;sleep)|
        (?&amp;system_variable)|
        (?&amp;func_def)|
        (?&amp;glob_list)+|
        (?&amp;spec_param)|
        (?&amp;param_expansion)|
        (?&amp;split_cmd)
      )|
      (?:(?&amp;opt_spaces)(?&amp;assignment))+.*(?&amp;variable_usage)
)|
(?&amp;file_op)(?&amp;opt_spaces)(?&amp;path)</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-939</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2157">
            <Name>(default WIN_015a) Windows command injection in quoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30026</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default WIN_015a) Windows command injection in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
	(?&lt;opt_spaces>(?:[\h\v(]|(?:REM|::)[^\v]*[\v])*)
	(?&lt;string>(?:(?&amp;nonconcat_string))+)
	(?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
	(?&lt;cmd_op>&amp;&amp;|(?&lt;!&amp;)&amp;|\|\||\|)
	(?&lt;file_op>(?&lt;!>)>>|(?&lt;!&lt;)&lt;|(?&lt;!>)>)
	(?&lt;filename>[^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|nul)
	(?&lt;sys_var>%(?:ALLUSERSPROFILE|APPDATA|CD|COMPUTERNAME|COMMONPROGRAMFILES(?:\(x86\))?|COMSPEC|HOMEDRIVE|HOMEPATH|LOCALAPPDATA|LOGONSERVER|D?PATH|PATHEXT|PROGRAMDATA|PROGRAMFILES|PROGRAMFILES(?:\(x86\))?|PROMPT|PSModulePath|PUBLIC|SystemDrive|SystemRoot|TE?MP|USERDOMAIN|USERNAME|USERPROFILE|windir|__(?:CD|APPDIR)__|=[a-z]:)%)
	(?&lt;path>(?:(?:\\)?\.\.\\)+|(?&amp;sys_var)|(?&amp;tld))
	(?&lt;tld>(?:(?:\\{2}\?\\)?(?:\w:))?[\\/][.\\/]*((?:(?:Archivos\hde\h)?Program[a-z0-9()\h]*|temp|Users|Benutzer|utilisateurs|utente|usuario|Document[a-z\h]*|Docume~1|Windows|WinNT|\$Recycle.Bin|System\hVolume\hInformation|MSOCache|Recovery|[a-z]{6}~[1-9])[\\/][^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|(?:boot\.ini|[a-z]+\.sys|\.rnd)))
	(?&lt;cmd_boundary>(?=(?:(?&amp;cmd_op)|(?&amp;file_op)|[\h\v/.]|$)))
    (?&lt;command>\b(?:d(?:i(?:sk(?:p(?:art|erf)|co(?:mp|py)|mgmt.msc|shadow|use)|r(?:ectx.cpl|quota|use)?|aler)|e(?:l(?:oldos|prof|tree)?|v(?:mgmt.msc|con )|(?:fra|bu)g|sk.cpl|tach)|s(?:a(?:cls|dd )|mo(?:ve|d)|query|get|rm)|r(?:v(?:space|lock)|iverquery)|(?:comcnf|xdia)g|os(?:shell|key)|(?:blspac|at)e|dinstall|ynaload|vdplay|frgui)|p(?:s(?:s(?:hutdown|ervice|uspend)|l(?:og(?:gedon|list)|ist)|p(?:asswd|ing)|getsid|exec|file|info|kill|tat)|r(?:n(?:(?:drv|mng)r|cnfg|jobs|port|qctl)|o(?:cdump|mpt)|int(?:brm)?)|a(?:t(?:h(?:ping)?|ch)|gefileconfig|use)|o(?:wer(?:cfg(?:.cpl)?)?|rtqry|pd)|e(?:r(?:fmon(?:.msc)?|ms)|ntnt)|badmin|ushd|ing)|s(?:e(?:t(?:local|boot|spn|ver|x)?|c(?:pol.msc|edit)|rvices.msc|lect)|h(?:(?:ortcu|if)t|ellrunas|utdown|rpubw|are)|ys(?:l(?:evel|og)|teminfo|dm.cpl|key|mon)?|c(?:andisk|htasks)?|o(?:undrecorder|rt)|i(?:gverif|zer)|l(?:eep|mgr|ui)|t(?:rings|art)|ub(?:inacl|st)|(?:ndv|po)ol|martdrv|dclt|fc ?)|c(?:o(?:m(?:p(?:mgmtlauncher|ress|act)?|mand)|lor(?:cpl.exe)?|n(?:trol|vert)|reinfo|py)|h(?:a(?:rmap|nge)|k(?:ntfs|dsk)|oice|dir|cp)|s(?:c(?:ript.exe|cmd)|vde )|ert(?:mgr.msc|util|req)|l(?:ea(?:nmg)?r|ip|s)|m(?:d(?:key)?|stp)|re(?:atedd|dwiz)|a(?:l[cl]|cls)|profile|ipher|tty|d)|m(?:s(?:i(?:nfo32|exec)|c(?:onfig|dex)|backup|paint|dt?|tsc|av|ra|g)|a(?:ke(?:cab|ini)|in.cpl|pisend|cfile|gnify)|o(?:ve(?:user)?|untvol|[dr]e|bsync)|b(?:sacli|lctr)|m(?:sys.cpl|c)|k(?:link|dir)|em(?:maker)?|irror|rt|d)|t(?:a(?:sk(?:kill|list|mgr)|keown)|i(?:me(?:date.cpl|out)?|tle)|s(?:(?:disco|shutd)n|kill)|r(?:(?:uenam|e)e|acerp?t)|el(?:ephon.cpl|net)|(?:cmsetu|ft)p|(?:pmini|lis)t|ype(?:perf)?|ouch    |zutil)|r(?:e(?:s(?:et(?: session)?|tore)|g(?:svr32|edit|ini)?|x(?:x(?:dump)?|ec)|n(?:ame)?|cover|place|log)|m(?:tshare|view|dir)|as(?:phone|dial)|s(?:[hm]|op.msc)|o(?:bocopy|ute)|un(?:dll32|as)?|cp|d)|e(?:v(?:ent(?:triggers|vwr.msc|create|query)|ntcmd)|x(?:p(?:lorer|and)|(?:trac|i)t|e2bin)|(?:ndloca|auti)l|(?:udcedi|jec)t|d(?:lin|it)|mm386|rase|cho)|w(?:i(?:n(?:nt(?:32)?|r[ms]|diff|ver)|aacmgr)|(?:mi(?:mgmt.ms)?|f.ms)c|u(?:a(?:uclt|pp)|sa)|sc(?:ui.cpl|ript)|h(?:oami|ere)|evtutil|aitfor|32tm|rite)|n(?:t(?:cmdprompt|backup|dsutil|rights|sd)|et(?:s(?:tat|h)|plwiz|dom)?|l(?:s(?:func|info)|test)|o(?:tepad|w )|cpa.cpl|slookup|vspbind|btstat)|f(?:i(?:n(?:d(?:str)?|ger)|rewall.cpl)|s(?:mgmt.msc|quirt|util)|ast(?:help|open)|or(?:files|mat)?|(?:ree)?disk|t(?:ype|p)|lattemp|c)|i(?:n(?:t(?:er(?:lnk|svr)|l.cpl)|etcpl.cpl|use)|p(?:config|seccmd|xroute)|(?:expres|cacl)s|f(?:member)?|scsicpl|rftp)|a(?:ss(?:oc(?:iat)?|ign)|d(?:dusers|modcmd)|pp(?:wiz.cpl|end)|t(?:madm|trib)?|c(?:lconv|alc)|zman.msc|nsi|rp)|l(?:o(?:g(?:time|man|off)|ad(?:high|fix)|dctr|ck)|p(?:[qr]|ksetup)|usrmgr.msc|fnfor|abel|ink)|b(?:a(?:sica?|ckup)|r(?:owstat|eak)|cd(?:boo|edi)t|oot(?:cfg)?|itsadmin)|g(?:p(?:edit.msc|result|update)|ra(?:ftabl|phics)|etmac|oto)|u(?:n(?:lo(?:dctr|ck)|delete|format|pack)|tilman)|v(?:er(?:if(?:ier|y))?|s(?:sadmin|afe)|iew|ol)|h(?:elp(?:ctr)?|dwwiz.cpl|ostname)|o(?:p(?:tionalfeatur|enfil)es|sk)|key(?:b(?:[fg]r|it|sp|uk)?|s)|q(?:config|basic|grep|uery)|xc(?:opy(?:32)?|acls)|jo(?:y.cpl|in)))
)(?x)
^(?=.*&quot;)(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\&quot;|[^&quot;])*&quot;(?:[^&quot;]|(?&amp;nonconcat_string))*
    (?:
        (?&amp;opt_spaces)(?&amp;cmd_op)(?&amp;opt_spaces)
        (?:
            (?&amp;command)(?&amp;cmd_boundary)|
            (?&amp;path)
        )
        |
        (?&amp;opt_spaces)\d?(?&amp;file_op)(?&amp;opt_spaces)(?:(?&amp;filename)|(?&amp;path))
    )
|
^(?=.*')(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\'|[^'])*'(?:[^']|(?&amp;nonconcat_string))*
    (?:
        (?&amp;opt_spaces)(?&amp;cmd_op)(?&amp;opt_spaces)
        (?:
            (?&amp;command)(?&amp;cmd_boundary)|
            (?&amp;path)
        )
        |
        (?&amp;opt_spaces)\d?(?&amp;file_op)(?&amp;opt_spaces)(?:(?&amp;filename)|(?&amp;path))
    )</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-486</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2158">
            <Name>(default WIN_015b) Windows command injection in quoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30027</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 1</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Content-Type$
^Sec-Metadata$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-808</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default WIN_015b) Windows command injection in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
	(?&lt;opt_spaces>(?:[\h\v(]|(?:REM|::)[^\v]*[\v])*)
	(?&lt;string>(?:(?&amp;nonconcat_string))+)
	(?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
	(?&lt;cmd_op>&amp;&amp;|(?&lt;!&amp;)&amp;|\|\||\|)
	(?&lt;file_op>(?&lt;!>)>>|(?&lt;!&lt;)&lt;|(?&lt;!>)>)
	(?&lt;filename>[^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|nul)
	(?&lt;sys_var>%(?:ALLUSERSPROFILE|APPDATA|CD|COMPUTERNAME|COMMONPROGRAMFILES(?:\(x86\))?|COMSPEC|HOMEDRIVE|HOMEPATH|LOCALAPPDATA|LOGONSERVER|D?PATH|PATHEXT|PROGRAMDATA|PROGRAMFILES|PROGRAMFILES(?:\(x86\))?|PROMPT|PSModulePath|PUBLIC|SystemDrive|SystemRoot|TE?MP|USERDOMAIN|USERNAME|USERPROFILE|windir|__(?:CD|APPDIR)__|=[a-z]:)%)
	(?&lt;path>(?:(?:\\)?\.\.\\)+|(?&amp;sys_var)|(?&amp;tld))
	(?&lt;tld>(?:(?:\\{2}\?\\)?(?:\w:))?[\\/][.\\/]*((?:(?:Archivos\hde\h)?Program[a-z0-9()\h]*|temp|Users|Benutzer|utilisateurs|utente|usuario|Document[a-z\h]*|Docume~1|Windows|WinNT|\$Recycle.Bin|System\hVolume\hInformation|MSOCache|Recovery|[a-z]{6}~[1-9])[\\/][^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|(?:boot\.ini|[a-z]+\.sys|\.rnd)))
	(?&lt;cmd_boundary>(?=(?:(?&amp;cmd_op)|(?&amp;file_op)|[\h\v/.]|$)))
    (?&lt;command>\b(?:d(?:i(?:sk(?:p(?:art|erf)|co(?:mp|py)|mgmt.msc|shadow|use)|r(?:ectx.cpl|quota|use)?|aler)|e(?:l(?:oldos|prof|tree)?|v(?:mgmt.msc|con )|(?:fra|bu)g|sk.cpl|tach)|s(?:a(?:cls|dd )|mo(?:ve|d)|query|get|rm)|r(?:v(?:space|lock)|iverquery)|(?:comcnf|xdia)g|os(?:shell|key)|(?:blspac|at)e|dinstall|ynaload|vdplay|frgui)|p(?:s(?:s(?:hutdown|ervice|uspend)|l(?:og(?:gedon|list)|ist)|p(?:asswd|ing)|getsid|exec|file|info|kill|tat)|r(?:n(?:(?:drv|mng)r|cnfg|jobs|port|qctl)|o(?:cdump|mpt)|int(?:brm)?)|a(?:t(?:h(?:ping)?|ch)|gefileconfig|use)|o(?:wer(?:cfg(?:.cpl)?)?|rtqry|pd)|e(?:r(?:fmon(?:.msc)?|ms)|ntnt)|badmin|ushd|ing)|s(?:e(?:t(?:local|boot|spn|ver|x)?|c(?:pol.msc|edit)|rvices.msc|lect)|h(?:(?:ortcu|if)t|ellrunas|utdown|rpubw|are)|ys(?:l(?:evel|og)|teminfo|dm.cpl|key|mon)?|c(?:andisk|htasks)?|o(?:undrecorder|rt)|i(?:gverif|zer)|l(?:eep|mgr|ui)|t(?:rings|art)|ub(?:inacl|st)|(?:ndv|po)ol|martdrv|dclt|fc ?)|c(?:o(?:m(?:p(?:mgmtlauncher|ress|act)?|mand)|lor(?:cpl.exe)?|n(?:trol|vert)|reinfo|py)|h(?:a(?:rmap|nge)|k(?:ntfs|dsk)|oice|dir|cp)|s(?:c(?:ript.exe|cmd)|vde )|ert(?:mgr.msc|util|req)|l(?:ea(?:nmg)?r|ip|s)|m(?:d(?:key)?|stp)|re(?:atedd|dwiz)|a(?:l[cl]|cls)|profile|ipher|tty|d)|m(?:s(?:i(?:nfo32|exec)|c(?:onfig|dex)|backup|paint|dt?|tsc|av|ra|g)|a(?:ke(?:cab|ini)|in.cpl|pisend|cfile|gnify)|o(?:ve(?:user)?|untvol|[dr]e|bsync)|b(?:sacli|lctr)|m(?:sys.cpl|c)|k(?:link|dir)|em(?:maker)?|irror|rt|d)|t(?:a(?:sk(?:kill|list|mgr)|keown)|i(?:me(?:date.cpl|out)?|tle)|s(?:(?:disco|shutd)n|kill)|r(?:(?:uenam|e)e|acerp?t)|el(?:ephon.cpl|net)|(?:cmsetu|ft)p|(?:pmini|lis)t|ype(?:perf)?|ouch    |zutil)|r(?:e(?:s(?:et(?: session)?|tore)|g(?:svr32|edit|ini)?|x(?:x(?:dump)?|ec)|n(?:ame)?|cover|place|log)|m(?:tshare|view|dir)|as(?:phone|dial)|s(?:[hm]|op.msc)|o(?:bocopy|ute)|un(?:dll32|as)?|cp|d)|e(?:v(?:ent(?:triggers|vwr.msc|create|query)|ntcmd)|x(?:p(?:lorer|and)|(?:trac|i)t|e2bin)|(?:ndloca|auti)l|(?:udcedi|jec)t|d(?:lin|it)|mm386|rase|cho)|w(?:i(?:n(?:nt(?:32)?|r[ms]|diff|ver)|aacmgr)|(?:mi(?:mgmt.ms)?|f.ms)c|u(?:a(?:uclt|pp)|sa)|sc(?:ui.cpl|ript)|h(?:oami|ere)|evtutil|aitfor|32tm|rite)|n(?:t(?:cmdprompt|backup|dsutil|rights|sd)|et(?:s(?:tat|h)|plwiz|dom)?|l(?:s(?:func|info)|test)|o(?:tepad|w )|cpa.cpl|slookup|vspbind|btstat)|f(?:i(?:n(?:d(?:str)?|ger)|rewall.cpl)|s(?:mgmt.msc|quirt|util)|ast(?:help|open)|or(?:files|mat)?|(?:ree)?disk|t(?:ype|p)|lattemp|c)|i(?:n(?:t(?:er(?:lnk|svr)|l.cpl)|etcpl.cpl|use)|p(?:config|seccmd|xroute)|(?:expres|cacl)s|f(?:member)?|scsicpl|rftp)|a(?:ss(?:oc(?:iat)?|ign)|d(?:dusers|modcmd)|pp(?:wiz.cpl|end)|t(?:madm|trib)?|c(?:lconv|alc)|zman.msc|nsi|rp)|l(?:o(?:g(?:time|man|off)|ad(?:high|fix)|dctr|ck)|p(?:[qr]|ksetup)|usrmgr.msc|fnfor|abel|ink)|b(?:a(?:sica?|ckup)|r(?:owstat|eak)|cd(?:boo|edi)t|oot(?:cfg)?|itsadmin)|g(?:p(?:edit.msc|result|update)|ra(?:ftabl|phics)|etmac|oto)|u(?:n(?:lo(?:dctr|ck)|delete|format|pack)|tilman)|v(?:er(?:if(?:ier|y))?|s(?:sadmin|afe)|iew|ol)|h(?:elp(?:ctr)?|dwwiz.cpl|ostname)|o(?:p(?:tionalfeatur|enfil)es|sk)|key(?:b(?:[fg]r|it|sp|uk)?|s)|q(?:config|basic|grep|uery)|xc(?:opy(?:32)?|acls)|jo(?:y.cpl|in)))
)(?x)
^(?=.*&quot;)(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\&quot;|[^&quot;])*&quot;(?:[^&quot;]|(?&amp;nonconcat_string))*
    (?:
        (?&amp;opt_spaces)(?&amp;cmd_op)(?&amp;opt_spaces)
        (?:
            (?&amp;command)(?&amp;cmd_boundary)|
            (?&amp;path)
        )
        |
        (?&amp;opt_spaces)\d?(?&amp;file_op)(?&amp;opt_spaces)(?:(?&amp;filename)|(?&amp;path))
    )
|
^(?=.*')(?=.*(?:(?&amp;cmd_op)|(?&amp;file_op)))(?:\\'|[^'])*'(?:[^']|(?&amp;nonconcat_string))*
    (?:
        (?&amp;opt_spaces)(?&amp;cmd_op)(?&amp;opt_spaces)
        (?:
            (?&amp;command)(?&amp;cmd_boundary)|
            (?&amp;path)
        )
        |
        (?&amp;opt_spaces)\d?(?&amp;file_op)(?&amp;opt_spaces)(?:(?&amp;filename)|(?&amp;path))
    )</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-940</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2159">
            <Name>(default WIN_020a) Windows command injection in unquoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30026</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default WIN_020a) Windows command injection in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
	(?&lt;opt_spaces>(?:[\h\v(]|(?:REM|::)[^\v]*[\v])*)
	(?&lt;string>(?:(?&amp;nonconcat_string))+)
	(?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
	(?&lt;cmd_op>&amp;&amp;|(?&lt;!&amp;)&amp;|\|\||\|)
	(?&lt;file_op>(?&lt;!>)>>|(?&lt;!&lt;)&lt;|(?&lt;!>)>)
	(?&lt;filename>[^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|nul)
	(?&lt;sys_var>%(?:ALLUSERSPROFILE|APPDATA|CD|COMPUTERNAME|COMMONPROGRAMFILES(?:\(x86\))?|COMSPEC|HOMEDRIVE|HOMEPATH|LOCALAPPDATA|LOGONSERVER|D?PATH|PATHEXT|PROGRAMDATA|PROGRAMFILES|PROGRAMFILES(?:\(x86\))?|PROMPT|PSModulePath|PUBLIC|SystemDrive|SystemRoot|TE?MP|USERDOMAIN|USERNAME|USERPROFILE|windir|__(?:CD|APPDIR)__|=[a-z]:)%)
	(?&lt;path>(?:(?:\\)?\.\.\\)+|(?&amp;sys_var)|(?&amp;tld))
	(?&lt;tld>(?:(?:\\{2}\?\\)?(?:\w:))?[\\/][.\\/]*((?:(?:Archivos\hde\h)?Program[a-z0-9()\h]*|temp|Users|Benutzer|utilisateurs|utente|usuario|Document[a-z\h]*|Docume~1|Windows|WinNT|\$Recycle.Bin|System\hVolume\hInformation|MSOCache|Recovery|[a-z]{6}~[1-9])[\\/][^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|(?:boot\.ini|[a-z]+\.sys|\.rnd)))
	(?&lt;cmd_boundary>(?=(?:(?&amp;cmd_op)|(?&amp;file_op)|[\h\v/.]|$)))
    (?&lt;param>(?:--|-|\+|/)(?:[a-zA-Z]+\b|\?))
    (?&lt;url>[^\h.]\.(?!\h)[a-zA-Z]{2,}\b)
    (?&lt;ipv4>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))
    (?&lt;ipv6>(?>(?>([a-fA-F0-9]{1,4})(?>:(?1)){7}|(?!(?:.*[a-fA-F0-9](?>:|$)){8,})((?1)(?>:(?1)){0,6})?::(?2)?)|(?>(?>(?1)(?>:(?1)){5}:|(?!(?:.*[a-fA-F0-9]:){6,})(?3)?::(?>((?1)(?>:(?1)){0,4}):)?)?(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\.(?4)){3})))
    (?&lt;win_command>\b(?:d(?:i(?:sk(?:p(?:art|erf)|co(?:mp|py)|mgmt.msc|shadow|use)|r(?:ectx.cpl|quota|use)?|aler)|e(?:l(?:oldos|prof|tree)?|v(?:mgmt.msc|con )|(?:fra|bu)g|sk.cpl|tach)|s(?:a(?:cls|dd )|mo(?:ve|d)|query|get|rm)|r(?:v(?:space|lock)|iverquery)|(?:comcnf|xdia)g|os(?:shell|key)|(?:blspac|at)e|dinstall|ynaload|vdplay|frgui)|p(?:s(?:s(?:hutdown|ervice|uspend)|l(?:og(?:gedon|list)|ist)|p(?:asswd|ing)|getsid|exec|file|info|kill|tat)|r(?:n(?:(?:drv|mng)r|cnfg|jobs|port|qctl)|o(?:cdump|mpt)|int(?:brm)?)|a(?:t(?:h(?:ping)?|ch)|gefileconfig|use)|o(?:wer(?:cfg(?:.cpl)?)?|rtqry|pd)|e(?:r(?:fmon(?:.msc)?|ms)|ntnt)|badmin|ushd|ing)|s(?:e(?:t(?:local|boot|spn|ver|x)?|c(?:pol.msc|edit)|rvices.msc|lect)|h(?:(?:ortcu|if)t|ellrunas|utdown|rpubw|are)|ys(?:l(?:evel|og)|teminfo|dm.cpl|key|mon)?|c(?:andisk|htasks)?|o(?:undrecorder|rt)|i(?:gverif|zer)|l(?:eep|mgr|ui)|t(?:rings|art)|ub(?:inacl|st)|(?:ndv|po)ol|martdrv|dclt|fc ?)|c(?:o(?:m(?:p(?:mgmtlauncher|ress|act)?|mand)|lor(?:cpl.exe)?|n(?:trol|vert)|reinfo|py)|h(?:a(?:rmap|nge)|k(?:ntfs|dsk)|oice|dir|cp)|s(?:c(?:ript.exe|cmd)|vde )|ert(?:mgr.msc|util|req)|l(?:ea(?:nmg)?r|ip|s)|m(?:d(?:key)?|stp)|re(?:atedd|dwiz)|a(?:l[cl]|cls)|profile|ipher|tty|d)|m(?:s(?:i(?:nfo32|exec)|c(?:onfig|dex)|backup|paint|dt?|tsc|av|ra|g)|a(?:ke(?:cab|ini)|in.cpl|pisend|cfile|gnify)|o(?:ve(?:user)?|untvol|[dr]e|bsync)|b(?:sacli|lctr)|m(?:sys.cpl|c)|k(?:link|dir)|em(?:maker)?|irror|rt|d)|t(?:a(?:sk(?:kill|list|mgr)|keown)|i(?:me(?:date.cpl|out)?|tle)|s(?:(?:disco|shutd)n|kill)|r(?:(?:uenam|e)e|acerp?t)|el(?:ephon.cpl|net)|(?:cmsetu|ft)p|(?:pmini|lis)t|ype(?:perf)?|ouch    |zutil)|r(?:e(?:s(?:et(?: session)?|tore)|g(?:svr32|edit|ini)?|x(?:x(?:dump)?|ec)|n(?:ame)?|cover|place|log)|m(?:tshare|view|dir)|as(?:phone|dial)|s(?:[hm]|op.msc)|o(?:bocopy|ute)|un(?:dll32|as)?|cp|d)|e(?:v(?:ent(?:triggers|vwr.msc|create|query)|ntcmd)|x(?:p(?:lorer|and)|(?:trac|i)t|e2bin)|(?:ndloca|auti)l|(?:udcedi|jec)t|d(?:lin|it)|mm386|rase|cho)|w(?:i(?:n(?:nt(?:32)?|r[ms]|diff|ver)|aacmgr)|(?:mi(?:mgmt.ms)?|f.ms)c|u(?:a(?:uclt|pp)|sa)|sc(?:ui.cpl|ript)|h(?:oami|ere)|evtutil|aitfor|32tm|rite)|n(?:t(?:cmdprompt|backup|dsutil|rights|sd)|et(?:s(?:tat|h)|plwiz|dom)?|l(?:s(?:func|info)|test)|o(?:tepad|w )|cpa.cpl|slookup|vspbind|btstat)|f(?:i(?:n(?:d(?:str)?|ger)|rewall.cpl)|s(?:mgmt.msc|quirt|util)|ast(?:help|open)|or(?:files|mat)?|(?:ree)?disk|t(?:ype|p)|lattemp|c)|i(?:n(?:t(?:er(?:lnk|svr)|l.cpl)|etcpl.cpl|use)|p(?:config|seccmd|xroute)|(?:expres|cacl)s|f(?:member)?|scsicpl|rftp)|a(?:ss(?:oc(?:iat)?|ign)|d(?:dusers|modcmd)|pp(?:wiz.cpl|end)|t(?:madm|trib)?|c(?:lconv|alc)|zman.msc|nsi|rp)|l(?:o(?:g(?:time|man|off)|ad(?:high|fix)|dctr|ck)|p(?:[qr]|ksetup)|usrmgr.msc|fnfor|abel|ink)|b(?:a(?:sica?|ckup)|r(?:owstat|eak)|cd(?:boo|edi)t|oot(?:cfg)?|itsadmin)|g(?:p(?:edit.msc|result|update)|ra(?:ftabl|phics)|etmac|oto)|u(?:n(?:lo(?:dctr|ck)|delete|format|pack)|tilman)|v(?:er(?:if(?:ier|y))?|s(?:sadmin|afe)|iew|ol)|h(?:elp(?:ctr)?|dwwiz.cpl|ostname)|o(?:p(?:tionalfeatur|enfil)es|sk)|key(?:b(?:[fg]r|it|sp|uk)?|s)|q(?:config|basic|grep|uery)|xc(?:opy(?:32)?|acls)|jo(?:y.cpl|in)))
    (?&lt;fp_command>\b(?:d(?:i(?:sk(?:p(?:art|erf)|co(?:mp|py)|mgmt.msc|shadow|use)|r(?:ectx.cpl|quota|use))|e(?:l(?:oldos|prof|tree)|v(?:mgmt.msc|con )|(?:fra|bu)g|sk.cpl)|s(?:a(?:cls|dd )|mo(?:ve|d)|query|get|rm)|r(?:v(?:space|lock)|iverquery)|(?:comcnf|xdia)g|os(?:shell|key)|dinstall|blspace|ynaload|vdplay|frgui)|p(?:s(?:s(?:hutdown|ervice|uspend)|l(?:og(?:gedon|list)|ist)|p(?:asswd|ing)|getsid|exec|file|info|kill|tat)|r(?:n(?:(?:drv|mng)r|cnfg|jobs|port|qctl)|intbrm|ocdump)|e(?:r(?:fmon(?:.msc)?|ms)|ntnt)|o(?:wercfg(?:.cpl)?|rtqry|pd)|a(?:gefileconfi|thpin)g|badmin|ushd)|s(?:e(?:t(?:local|boot|spn|ver|x)|c(?:pol.msc|edit)|rvices.msc)|ys(?:l(?:evel|og)|teminfo|dm.cpl|key|mon)|c(?:andisk|htasks)?|h(?:ellrunas|rpubw)|t(?:rings|art)|ub(?:inacl|st)|oundrecorder|l(?:mgr|ui)|igverif|martdrv|ndvol|dclt|fc ?)|c(?:o(?:mpmgmtlauncher|lorcpl.exe|reinfo)|h(?:k(?:ntfs|dsk)|(?:arma|c)p|dir)|s(?:c(?:ript.exe|cmd)|vde )|ert(?:mgr.msc|util|req)|m(?:d(?:key)?|stp)|re(?:atedd|dwiz)|a(?:l[cl]|cls)|l(?:eanmgr|s)|profile|tty|d)|m(?:s(?:i(?:nfo32|exec)|c(?:onfig|dex)|backup|paint|dt?|tsc|av|ra|g)|a(?:ke(?:cab|ini)|in.cpl|pisend|cfile)|o(?:untvol|veuser|bsync)|b(?:sacli|lctr)|m(?:sys.cpl|c)|k(?:link|dir)|em(?:maker)?|rt|d)|t(?:(?:(?:elephon|imedate).cp|zuti)l|a(?:sk(?:kill|list|mgr)|keown)|s(?:(?:disco|shutd)n|kill)|r(?:acerp?t|uename)|(?:cmsetu|ft)p|(?:pmini|lis)t|ouch    |ypeperf)|r(?:e(?:g(?:svr32|edit|ini)|x(?:x(?:dump)?|ec)|set session|n(?:ame)?|log)|m(?:tshare|view|dir)|as(?:phone|dial)|s(?:[hm]|op.msc)|un(?:dll32|as)?|obocopy|cp|d)|w(?:i(?:n(?:nt(?:32)?|r[ms]|diff|ver)|aacmgr)|(?:mi(?:mgmt.ms)?|f.ms)c|u(?:a(?:uclt|pp)|sa)|sc(?:ui.cpl|ript)|evtutil|aitfor|hoami|32tm)|n(?:t(?:cmdprompt|backup|dsutil|rights|sd)|et(?:s(?:tat|h)|plwiz|dom)|l(?:s(?:func|info)|test)|cpa.cpl|slookup|vspbind|btstat|ow )|i(?:n(?:t(?:er(?:lnk|svr)|l.cpl)|etcpl.cpl|use)|p(?:config|seccmd|xroute)|(?:expres|cacl)s|fmember|scsicpl|rftp)|f(?:s(?:mgmt.msc|quirt|util)|i(?:rewall.cpl|ndstr)|ast(?:help|open)|(?:ree)?disk|t(?:ype|p)|lattemp|orfiles|c)|e(?:v(?:ent(?:triggers|vwr.msc|create|query)|ntcmd)|(?:xe2b|dl)in|n(?:dlocal|v)|udcedit|autil|mm386|cho)|a(?:d(?:dusers|modcmd)|c(?:lconv|alc)|t(?:madm|trib)|ppwiz.cpl|zman.msc|ssociat|nsi|rp)|l(?:o(?:ad(?:high|fix)|g(?:time|man)|dctr)|p(?:[qr]|ksetup)|usrmgr.msc|fnfor)|b(?:(?:cd(?:boo|edi)|rowsta)t|itsadmin|ootcfg|asica)|g(?:p(?:edit.msc|result|update)|raftabl|etmac|oto)|u(?:n(?:lo(?:dctr|ck)|format)|tilman)|o(?:p(?:tionalfeatur|enfil)es|sk)|h(?:dwwiz.cpl|ostname|elpctr)|key(?:b(?:[fg]r|it|sp|uk)?|s)|q(?:config|basic|grep)|xc(?:opy(?:32)?|acls)|vs(?:sadmin|afe)|joy.cpl))
)(?x)
(?&amp;cmd_op)(?&amp;opt_spaces)
    (?:
        (?&amp;win_command)(?&amp;cmd_boundary)
      |
    (?&amp;fp_command)(?&amp;cmd_boundary)(?&amp;opt_spaces)
        (?:
            (?&amp;param)|
            (?&amp;path)|
            (?&lt;=[\h\v])(?&amp;filename)|
            (?&amp;url)|
            (?&amp;ipv4)|
            (?&amp;ipv6)
          )
          |
        (?&amp;path)
    )
|
(?&amp;file_op)(?&amp;opt_spaces)(?:(?&amp;filename)|(?&amp;path))</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-487</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2160">
            <Name>(default WIN_020b) Windows command injection in unquoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30027</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 1</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Content-Type$
^Sec-Metadata$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-808</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default WIN_020b) Windows command injection in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
	(?&lt;opt_spaces>(?:[\h\v(]|(?:REM|::)[^\v]*[\v])*)
	(?&lt;string>(?:(?&amp;nonconcat_string))+)
	(?&lt;nonconcat_string>(?:(?&amp;opt_spaces)([&quot;'`])(?:\\\g{-1}|\\\\|(?!\g{-1}).)*+\g{-1}))
	(?&lt;cmd_op>&amp;&amp;|(?&lt;!&amp;)&amp;|\|\||\|)
	(?&lt;file_op>(?&lt;!>)>>|(?&lt;!&lt;)&lt;|(?&lt;!>)>)
	(?&lt;filename>[^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|nul)
	(?&lt;sys_var>%(?:ALLUSERSPROFILE|APPDATA|CD|COMPUTERNAME|COMMONPROGRAMFILES(?:\(x86\))?|COMSPEC|HOMEDRIVE|HOMEPATH|LOCALAPPDATA|LOGONSERVER|D?PATH|PATHEXT|PROGRAMDATA|PROGRAMFILES|PROGRAMFILES(?:\(x86\))?|PROMPT|PSModulePath|PUBLIC|SystemDrive|SystemRoot|TE?MP|USERDOMAIN|USERNAME|USERPROFILE|windir|__(?:CD|APPDIR)__|=[a-z]:)%)
	(?&lt;path>(?:(?:\\)?\.\.\\)+|(?&amp;sys_var)|(?&amp;tld))
	(?&lt;tld>(?:(?:\\{2}\?\\)?(?:\w:))?[\\/][.\\/]*((?:(?:Archivos\hde\h)?Program[a-z0-9()\h]*|temp|Users|Benutzer|utilisateurs|utente|usuario|Document[a-z\h]*|Docume~1|Windows|WinNT|\$Recycle.Bin|System\hVolume\hInformation|MSOCache|Recovery|[a-z]{6}~[1-9])[\\/][^&lt;>:&quot;|?*]{3,}\.[a-z]{1,5}|(?:boot\.ini|[a-z]+\.sys|\.rnd)))
	(?&lt;cmd_boundary>(?=(?:(?&amp;cmd_op)|(?&amp;file_op)|[\h\v/.]|$)))
    (?&lt;param>(?:--|-|\+|/)(?:[a-zA-Z]+\b|\?))
    (?&lt;url>[^\h.]\.(?!\h)[a-zA-Z]{2,}\b)
    (?&lt;ipv4>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))
    (?&lt;ipv6>(?>(?>([a-fA-F0-9]{1,4})(?>:(?1)){7}|(?!(?:.*[a-fA-F0-9](?>:|$)){8,})((?1)(?>:(?1)){0,6})?::(?2)?)|(?>(?>(?1)(?>:(?1)){5}:|(?!(?:.*[a-fA-F0-9]:){6,})(?3)?::(?>((?1)(?>:(?1)){0,4}):)?)?(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\.(?4)){3})))
    (?&lt;win_command>\b(?:d(?:i(?:sk(?:p(?:art|erf)|co(?:mp|py)|mgmt.msc|shadow|use)|r(?:ectx.cpl|quota|use)?|aler)|e(?:l(?:oldos|prof|tree)?|v(?:mgmt.msc|con )|(?:fra|bu)g|sk.cpl|tach)|s(?:a(?:cls|dd )|mo(?:ve|d)|query|get|rm)|r(?:v(?:space|lock)|iverquery)|(?:comcnf|xdia)g|os(?:shell|key)|(?:blspac|at)e|dinstall|ynaload|vdplay|frgui)|p(?:s(?:s(?:hutdown|ervice|uspend)|l(?:og(?:gedon|list)|ist)|p(?:asswd|ing)|getsid|exec|file|info|kill|tat)|r(?:n(?:(?:drv|mng)r|cnfg|jobs|port|qctl)|o(?:cdump|mpt)|int(?:brm)?)|a(?:t(?:h(?:ping)?|ch)|gefileconfig|use)|o(?:wer(?:cfg(?:.cpl)?)?|rtqry|pd)|e(?:r(?:fmon(?:.msc)?|ms)|ntnt)|badmin|ushd|ing)|s(?:e(?:t(?:local|boot|spn|ver|x)?|c(?:pol.msc|edit)|rvices.msc|lect)|h(?:(?:ortcu|if)t|ellrunas|utdown|rpubw|are)|ys(?:l(?:evel|og)|teminfo|dm.cpl|key|mon)?|c(?:andisk|htasks)?|o(?:undrecorder|rt)|i(?:gverif|zer)|l(?:eep|mgr|ui)|t(?:rings|art)|ub(?:inacl|st)|(?:ndv|po)ol|martdrv|dclt|fc ?)|c(?:o(?:m(?:p(?:mgmtlauncher|ress|act)?|mand)|lor(?:cpl.exe)?|n(?:trol|vert)|reinfo|py)|h(?:a(?:rmap|nge)|k(?:ntfs|dsk)|oice|dir|cp)|s(?:c(?:ript.exe|cmd)|vde )|ert(?:mgr.msc|util|req)|l(?:ea(?:nmg)?r|ip|s)|m(?:d(?:key)?|stp)|re(?:atedd|dwiz)|a(?:l[cl]|cls)|profile|ipher|tty|d)|m(?:s(?:i(?:nfo32|exec)|c(?:onfig|dex)|backup|paint|dt?|tsc|av|ra|g)|a(?:ke(?:cab|ini)|in.cpl|pisend|cfile|gnify)|o(?:ve(?:user)?|untvol|[dr]e|bsync)|b(?:sacli|lctr)|m(?:sys.cpl|c)|k(?:link|dir)|em(?:maker)?|irror|rt|d)|t(?:a(?:sk(?:kill|list|mgr)|keown)|i(?:me(?:date.cpl|out)?|tle)|s(?:(?:disco|shutd)n|kill)|r(?:(?:uenam|e)e|acerp?t)|el(?:ephon.cpl|net)|(?:cmsetu|ft)p|(?:pmini|lis)t|ype(?:perf)?|ouch    |zutil)|r(?:e(?:s(?:et(?: session)?|tore)|g(?:svr32|edit|ini)?|x(?:x(?:dump)?|ec)|n(?:ame)?|cover|place|log)|m(?:tshare|view|dir)|as(?:phone|dial)|s(?:[hm]|op.msc)|o(?:bocopy|ute)|un(?:dll32|as)?|cp|d)|e(?:v(?:ent(?:triggers|vwr.msc|create|query)|ntcmd)|x(?:p(?:lorer|and)|(?:trac|i)t|e2bin)|(?:ndloca|auti)l|(?:udcedi|jec)t|d(?:lin|it)|mm386|rase|cho)|w(?:i(?:n(?:nt(?:32)?|r[ms]|diff|ver)|aacmgr)|(?:mi(?:mgmt.ms)?|f.ms)c|u(?:a(?:uclt|pp)|sa)|sc(?:ui.cpl|ript)|h(?:oami|ere)|evtutil|aitfor|32tm|rite)|n(?:t(?:cmdprompt|backup|dsutil|rights|sd)|et(?:s(?:tat|h)|plwiz|dom)?|l(?:s(?:func|info)|test)|o(?:tepad|w )|cpa.cpl|slookup|vspbind|btstat)|f(?:i(?:n(?:d(?:str)?|ger)|rewall.cpl)|s(?:mgmt.msc|quirt|util)|ast(?:help|open)|or(?:files|mat)?|(?:ree)?disk|t(?:ype|p)|lattemp|c)|i(?:n(?:t(?:er(?:lnk|svr)|l.cpl)|etcpl.cpl|use)|p(?:config|seccmd|xroute)|(?:expres|cacl)s|f(?:member)?|scsicpl|rftp)|a(?:ss(?:oc(?:iat)?|ign)|d(?:dusers|modcmd)|pp(?:wiz.cpl|end)|t(?:madm|trib)?|c(?:lconv|alc)|zman.msc|nsi|rp)|l(?:o(?:g(?:time|man|off)|ad(?:high|fix)|dctr|ck)|p(?:[qr]|ksetup)|usrmgr.msc|fnfor|abel|ink)|b(?:a(?:sica?|ckup)|r(?:owstat|eak)|cd(?:boo|edi)t|oot(?:cfg)?|itsadmin)|g(?:p(?:edit.msc|result|update)|ra(?:ftabl|phics)|etmac|oto)|u(?:n(?:lo(?:dctr|ck)|delete|format|pack)|tilman)|v(?:er(?:if(?:ier|y))?|s(?:sadmin|afe)|iew|ol)|h(?:elp(?:ctr)?|dwwiz.cpl|ostname)|o(?:p(?:tionalfeatur|enfil)es|sk)|key(?:b(?:[fg]r|it|sp|uk)?|s)|q(?:config|basic|grep|uery)|xc(?:opy(?:32)?|acls)|jo(?:y.cpl|in)))
    (?&lt;fp_command>\b(?:d(?:i(?:sk(?:p(?:art|erf)|co(?:mp|py)|mgmt.msc|shadow|use)|r(?:ectx.cpl|quota|use))|e(?:l(?:oldos|prof|tree)|v(?:mgmt.msc|con )|(?:fra|bu)g|sk.cpl)|s(?:a(?:cls|dd )|mo(?:ve|d)|query|get|rm)|r(?:v(?:space|lock)|iverquery)|(?:comcnf|xdia)g|os(?:shell|key)|dinstall|blspace|ynaload|vdplay|frgui)|p(?:s(?:s(?:hutdown|ervice|uspend)|l(?:og(?:gedon|list)|ist)|p(?:asswd|ing)|getsid|exec|file|info|kill|tat)|r(?:n(?:(?:drv|mng)r|cnfg|jobs|port|qctl)|intbrm|ocdump)|e(?:r(?:fmon(?:.msc)?|ms)|ntnt)|o(?:wercfg(?:.cpl)?|rtqry|pd)|a(?:gefileconfi|thpin)g|badmin|ushd)|s(?:e(?:t(?:local|boot|spn|ver|x)|c(?:pol.msc|edit)|rvices.msc)|ys(?:l(?:evel|og)|teminfo|dm.cpl|key|mon)|c(?:andisk|htasks)?|h(?:ellrunas|rpubw)|t(?:rings|art)|ub(?:inacl|st)|oundrecorder|l(?:mgr|ui)|igverif|martdrv|ndvol|dclt|fc ?)|c(?:o(?:mpmgmtlauncher|lorcpl.exe|reinfo)|h(?:k(?:ntfs|dsk)|(?:arma|c)p|dir)|s(?:c(?:ript.exe|cmd)|vde )|ert(?:mgr.msc|util|req)|m(?:d(?:key)?|stp)|re(?:atedd|dwiz)|a(?:l[cl]|cls)|l(?:eanmgr|s)|profile|tty|d)|m(?:s(?:i(?:nfo32|exec)|c(?:onfig|dex)|backup|paint|dt?|tsc|av|ra|g)|a(?:ke(?:cab|ini)|in.cpl|pisend|cfile)|o(?:untvol|veuser|bsync)|b(?:sacli|lctr)|m(?:sys.cpl|c)|k(?:link|dir)|em(?:maker)?|rt|d)|t(?:(?:(?:elephon|imedate).cp|zuti)l|a(?:sk(?:kill|list|mgr)|keown)|s(?:(?:disco|shutd)n|kill)|r(?:acerp?t|uename)|(?:cmsetu|ft)p|(?:pmini|lis)t|ouch    |ypeperf)|r(?:e(?:g(?:svr32|edit|ini)|x(?:x(?:dump)?|ec)|set session|n(?:ame)?|log)|m(?:tshare|view|dir)|as(?:phone|dial)|s(?:[hm]|op.msc)|un(?:dll32|as)?|obocopy|cp|d)|w(?:i(?:n(?:nt(?:32)?|r[ms]|diff|ver)|aacmgr)|(?:mi(?:mgmt.ms)?|f.ms)c|u(?:a(?:uclt|pp)|sa)|sc(?:ui.cpl|ript)|evtutil|aitfor|hoami|32tm)|n(?:t(?:cmdprompt|backup|dsutil|rights|sd)|et(?:s(?:tat|h)|plwiz|dom)|l(?:s(?:func|info)|test)|cpa.cpl|slookup|vspbind|btstat|ow )|i(?:n(?:t(?:er(?:lnk|svr)|l.cpl)|etcpl.cpl|use)|p(?:config|seccmd|xroute)|(?:expres|cacl)s|fmember|scsicpl|rftp)|f(?:s(?:mgmt.msc|quirt|util)|i(?:rewall.cpl|ndstr)|ast(?:help|open)|(?:ree)?disk|t(?:ype|p)|lattemp|orfiles|c)|e(?:v(?:ent(?:triggers|vwr.msc|create|query)|ntcmd)|(?:xe2b|dl)in|n(?:dlocal|v)|udcedit|autil|mm386|cho)|a(?:d(?:dusers|modcmd)|c(?:lconv|alc)|t(?:madm|trib)|ppwiz.cpl|zman.msc|ssociat|nsi|rp)|l(?:o(?:ad(?:high|fix)|g(?:time|man)|dctr)|p(?:[qr]|ksetup)|usrmgr.msc|fnfor)|b(?:(?:cd(?:boo|edi)|rowsta)t|itsadmin|ootcfg|asica)|g(?:p(?:edit.msc|result|update)|raftabl|etmac|oto)|u(?:n(?:lo(?:dctr|ck)|format)|tilman)|o(?:p(?:tionalfeatur|enfil)es|sk)|h(?:dwwiz.cpl|ostname|elpctr)|key(?:b(?:[fg]r|it|sp|uk)?|s)|q(?:config|basic|grep)|xc(?:opy(?:32)?|acls)|vs(?:sadmin|afe)|joy.cpl))
)(?x)
(?&amp;cmd_op)(?&amp;opt_spaces)
    (?:
        (?&amp;win_command)(?&amp;cmd_boundary)
      |
    (?&amp;fp_command)(?&amp;cmd_boundary)(?&amp;opt_spaces)
        (?:
            (?&amp;param)|
            (?&amp;path)|
            (?&lt;=[\h\v])(?&amp;filename)|
            (?&amp;url)|
            (?&amp;ipv4)|
            (?&amp;ipv6)
          )
          |
        (?&amp;path)
    )
|
(?&amp;file_op)(?&amp;opt_spaces)(?:(?&amp;filename)|(?&amp;path))</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-941</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2161">
            <Name>(default LDAP_001a) LDAP query injection in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30021</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default LDAP_001a) LDAP query injection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\)[\h\v]*\([\h\v]*[&amp;|][\h\v]*\(</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-488</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2162">
            <Name>(default LDAP_001b) LDAP query injection in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30022</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default LDAP_001b) LDAP query injection</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\)[\h\v]*\([\h\v]*[&amp;|][\h\v]*\(</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-942</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2163">
            <Name>(default LDAP_002a) LDAP query injection (strict) in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30021</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default LDAP_002a) LDAP query injection (strict)</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\)[\h\v]*\([\h\v]*(?:[^=]+=|[&amp;|])</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-489</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2164">
            <Name>(default LDAP_002b) LDAP query injection (strict) in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30022</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default LDAP_002b) LDAP query injection (strict)</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\)[\h\v]*\([\h\v]*(?:[^=]+=|[&amp;|])</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-943</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2165">
            <Name>(default HTML_003c) HTML attribute in quoted context in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30025</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default HTML_003c) HTML attribute in quoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>['&quot;](*COMMIT).*(?&lt;=[\h\v'&quot;`/:])[a-z\-]{3,}[\h\v]*=[^=>]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-218</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2167">
            <Name>(default SAN_040b) Sanity check of Content-Type header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30013</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Content-Type header name</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\bContent-Type\b</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-813</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SAN_040b) Sanity check of Content-Type header value</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
  (?&lt;critical_attribute>(?:boundary|action|charset))
  (?&lt;duplicate_attributes>(?:((?&amp;critical_attribute))=.*\g{-1}\h*=))
  (?&lt;attr_name_followed_by_whitespace>(?&amp;critical_attribute)\h+=)
  (?&lt;attr_name_with_invalid_prefix>[^;[:blank:]](?&amp;critical_attribute)=)
  (?&lt;attr_value_with_semicolon>(?:(?&amp;critical_attribute)=&quot;(?:[^;&quot;]|\\&quot;)*(?:;|$)))
  (?&lt;attr_value_with_whitespace>(?&amp;critical_attribute)=(?!&quot;)(?![^\h]+(?:;|[[:blank:]]*$)))
  (?&lt;attr_in_single_quotes>(?&amp;critical_attribute)=\h*')
  (?&lt;charset_with_whitespace>charset=(?![^\h]+(?:;|[[:blank:]]*$)))
  (?&lt;exclusive_media_types>((?:json|urlencoded|multipart))[^;]*?(?!\g{-1})(?-1))
  (?&lt;multiple_media_types>^[^/;]*/[^/;]*/[^;]*(?:;|$))
  (?&lt;overlong>^.{512,}$)
)(?&amp;duplicate_attributes)|(?&amp;attr_name_followed_by_whitespace)|(?&amp;attr_name_with_invalid_prefix)|(?&amp;attr_value_with_semicolon)|(?&amp;attr_in_single_quotes)|(?&amp;attr_value_with_whitespace)|(?&amp;charset_with_whitespace)|(?&amp;exclusive_media_types)|(?&amp;multiple_media_types)|(?&amp;overlong)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-944</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2168">
            <Name>(default CSTI_001a) Client-side template injection (Angular, Ember, Meteor and more) in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30028</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default CSTI_001a) Client-side template injection (Angular, Ember, Meteor and more)</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>{{.+}}</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-490</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2169">
            <Name>(default CSTI_001b) Client-side template injection (Angular, Ember, Meteor and more) in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30028</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default CSTI_001b) Client-side template injection (Angular, Ember, Meteor and more)</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>{{.+}}</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-945</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2170">
            <Name>(default CSTI_001c) Client-side template injection (Angular, Ember, Meteor and more) in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30028</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default CSTI_001c) Client-side template injection (Angular, Ember, Meteor and more)</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>{{.+}}</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-236</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2171">
            <Name>(default SAN_050b) Unsafe character in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30013</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default SAN_050b.1) Ignore headers</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Authorization$
^If$
^Lock-Token$
^Proxy-Authenticate$
^Referer$
^SOAPAction$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-814</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SAN_050b) Unsafe character</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^(?![\h\v]*+\{[A-Z0-9]{8}+-(?:[A-Z0-9]{4}+-){3}+[A-Z0-9]{12}+\}[\h\v]*$).*?[{}]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-946</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2172">
            <Name>(default SAN_055e) Header name longer than 60 characters</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30012</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default SAN_055e) Header name longer than 60 characters</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^.{61}</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-815</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2174">
            <Name>(default SAN_060b) Header value longer than 300 characters</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30013</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default SAN_060b.1) Ignore headers</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Accept$
^Authorization$
^Content-Type$
^Destination$
^Proxy-Authenticate$
^Referer$
^SOAPAction$
^User-Agent$
^X-</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-817</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SAN_060b) Header value longer than 300 characters</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^.{301}</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-947</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2000">
            <Name>(default 01) SQL injection rule</Name>
            <Comment>Rule to prevent SQL injection</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) SQL injection</Name>
                <Comment>Detects SQL injection.
- Any style of comment: /*, -- or #
- ; followed by keywords exec, insert, update, select, delete, drop, truncate or waitfor
- separating char followed by (or, and, having, subselect or union select) followed by a separating char</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>/\*
[;'&quot;)].*--
;.*[^&amp;]#
['&quot;][\h\v]*(?:\+|\|\|)
;.*(?:execute|exec|insert|update|select|delete|drop|waitfor|create|alter|truncate|begin)(?:--|\\N|[#'(\h\v])
[(][\h\v]*select(?:--|\\N|[#'&quot;\h\v])
[\h\v'&quot;)]union[\h\v]+(?:all[\h\v]+)?select(?:--|\\N|[#'&quot;\h\v])
(?:['&quot;)]|[0-9][\h\v]|\\N)[\h\v]*(?:or|and|having)(?:$|--|\\N|[#'(\h\v])</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-401</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2001">
            <Name>(default 02) Cross-site scripting rule for values</Name>
            <Comment>Rule to prevent cross site scripting in values</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) XSS</Name>
                <Comment>Detects cross site scripting</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:&lt;|%3c)[^+*=-].+(?:>|%3e)
(?:['&quot;&lt;]|%3c)[^+*=-].*=[^=>]
^javascript:
^jar:
^resource:
^proxy:
;[\h\v]*url[\h\v]*=[\h\v]*[[:alpha:]]{3,15}:</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-402</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2002">
            <Name>(default 03) Non-printable characters in URL rule</Name>
            <Comment>Rule to prevent non-printable characters in URLs</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30014</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) Non-printable characters</Name>
                <Comment>Detects non-printable characters</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[\P{C}\h]*$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-201</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2003">
            <Name>(default 04) Non-printable characters in values rule</Name>
            <Comment>Rule to prevent non-printable characters in values</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30011</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) Non-printable characters</Name>
                <Comment>Detects non-printable characters.</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[\P{C}\h\v]*$</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-403</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2004">
            <Name>(default 05) HTTP response splitting rule</Name>
            <Comment>Rule to prevent HTTP response splitting</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30002</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) HTTP response splitting</Name>
                <Comment>Detects HTTP response splitting.</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\n\r]\h*[[:graph:]]{6,}[\h]*:
\n\r?\n.*&lt;[\P{C}\h\v]{10}</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-405</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2005">
            <Name>(default 06) Path directory traversal rule</Name>
            <Comment>Rule to prevent path directory traversal</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30009</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) Directory traversal</Name>
                <Comment>Detects directory traversal attempts.
Two dots followed by a forward or backward slash.</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\.\.[/\\]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-203</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2006">
            <Name>(default 07) Value directory traversal rule</Name>
            <Comment>Rule to prevent path directory traversal by parameter values</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30004</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) Directory traversal</Name>
                <Comment>Detects directory traversals.
Two dots followed by a forward or a backward slash.</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>\.\.[/\\]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-406</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2007">
            <Name>(default 08) Parameter name sanity</Name>
            <Comment>Rule to block malicious characters in parameter names</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30010</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) Parameter name sanity</Name>
                <Comment>Detects malicious characters in parameter names</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[&quot;'&amp;;&lt;=>\p{C}]
%26
%3[bcde]
%[0189][[:xdigit:]]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-301</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2008">
            <Name>(default 09) Cross-site scripting rule for paths</Name>
            <Comment>Rule to prevent cross site scripting in paths</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30008</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) XSS</Name>
                <Comment>Detects cross site scripting</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:&lt;|%3c)[^+*=-].+(?:>|%3e)
(?:['&quot;&lt;]|%3c)[^+*=-].*=[^=>]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-204</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2010">
            <Name>(default 11) full-/half-width unicode paths</Name>
            <Comment>Rule to prevent full-/half-width chars in paths</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30014</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) fullwidth unicode path</Name>
                <Comment>Detects fullwidth unicode path</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\x{FF01}-\x{FF5E}]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-205</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2011">
            <Name>(default 12) full-/half-width unicode param names</Name>
            <Comment>Rule to prevent full-/half-width chars in parameter names</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30010</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) fullwidth unicode</Name>
                <Comment>Detects fullwidth unicode parameter names</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\x{FF01}-\x{FF5E}]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-302</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2012">
            <Name>(default 13) full-/half-width unicode values</Name>
            <Comment>Rule to prevent full-/half-width chars in values</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30011</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) fullwidth unicode</Name>
                <Comment>Detects fullwidth unicode parameter values</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[\x{FF01}-\x{FF5E}]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-407</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2013">
            <Name>(default 14) MIN_VALUE floating point attack</Name>
            <Comment>Rule to prevent floating point attacks to Java</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30003</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) MIN_VALUE floating point attack</Name>
                <Comment>Rule to prevent floating point attacks to Java</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>2\.?2\.?2\.?5\.?0\.?7\.?3\.?8\.?5\.?8\.?5\.?0\.?7\.?2\.?0\.?1\.?[123]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-416</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2014">
            <Name>(default 15) HTTP parameter pollution</Name>
            <Comment>Rule to protect parameter values against injection of a next parameter</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30017</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) HTTP parameter pollution</Name>
                <Comment>HTTP parameter pollution regex</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:%26|&amp;)[-%_:[:alnum:]]+(?:%3d|=).</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-417</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2015">
            <Name>(default 16) Non-printable characters in header name rule</Name>
            <Comment>Rule to prevent non-printable characters in header name</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30012</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Non-printable characters</Name>
                <Comment>Detects non-printable characters</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[^[:print:]\h]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-801</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2016">
            <Name>(default 17) Non-printable characters in header value rule</Name>
            <Comment>Rule to prevent non-printable characters in header value</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30013</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) Non-printable characters</Name>
                <Comment>Detects non-printable characters</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>[^\P{C}\h]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-901</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2017">
            <Name>(default 18) Cross-site scripting rule for header values</Name>
            <Comment>Rule to prevent cross site scripting in header values</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) XSS whitelist</Name>
                <Comment>Whitelists headers that trigger cross site scripting rules for value</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^[IE]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-802</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) XSS</Name>
                <Comment>Detects Cross site scripting</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?:&lt;|%3c)[^+*=-].+(?:>|%3e)|['\&quot;][^+*=-].*=[^=>]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-902</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2018">
            <Name>(default 19) MIN_VALUE floating point attack for header values</Name>
            <Comment>Rule to prevent floating point attacks to Java in header values</Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30015</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>LEGACY</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) MIN_VALUE floating point attack</Name>
                <Comment>Rule to prevent floating point attacks to Java</Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>2\.?2\.?2\.?5\.?0\.?7\.?3\.?8\.?5\.?8\.?5\.?0\.?7\.?2\.?0\.?1\.?[123]</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-903</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2019">
            <Name>(default SQL_001a) Expression in unquoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_001a) Expression in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;end>(?:;|(?&amp;comment)|$)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?&amp;opt_spaces)
(?:
    (?&amp;unsafe_expr)(?&amp;opt_spaces)(?&amp;end)
    |
    (?=.*(?&amp;keyword))(?:
        (?&amp;expr_list)(?&amp;opt_spaces)(?&amp;keyword) |
        (?&amp;closing_bracket_expr_list)(?&amp;opt_spaces)(?&amp;keyword).*(?&amp;comment)
    )
    |
    (?=[^)]*\))(?:
        (?:(?&amp;expr_list)(?&amp;opt_spaces))?(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr_list)(?&amp;opt_spaces))?$ |
        (?&amp;closing_bracket_expr)(?&amp;opt_spaces)(?&amp;comment)
    )
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-418</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2020">
            <Name>(default SQL_001b) Expression in unquoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) Safe Header exclude 2</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>^Accept$
^Accept-Language$
^Accept-Encoding$
^Accept-Charset$
^Cache-Control$
^Content-Range$
^Content-Type$
^Range$</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>true</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-803</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_001b) Expression in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;end>(?:;|(?&amp;comment)|$)(*COMMIT))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?&amp;opt_spaces)
(?:
    (?&amp;unsafe_expr)(?&amp;opt_spaces)(?&amp;end)
    |
    (?=.*(?&amp;keyword))(?:
        (?&amp;expr_list)(?&amp;opt_spaces)(?&amp;keyword) |
        (?&amp;closing_bracket_expr_list)(?&amp;opt_spaces)(?&amp;keyword).*(?&amp;comment)
    )
    |
    (?=[^)]*\))(?:
        (?:(?&amp;expr_list)(?&amp;opt_spaces))?(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr_list)(?&amp;opt_spaces))?$ |
        (?&amp;closing_bracket_expr)(?&amp;opt_spaces)(?&amp;comment)
    )
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-904</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2028">
            <Name>(default SQL_020a) Statement in C style comment tag in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_020a) Statement in C style comment tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>/\*!.*\*/</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-421</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2029">
            <Name>(default SQL_020b) Statement in C style comment tag in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_020b) Statement in C style comment tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>/\*!.*\*/</PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-907</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2031">
            <Name>(default SQL_025a) New statement in unquoted context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_025a) New statement in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;statement_with_condition>\bif\b(?&amp;opt_spaces)(?&amp;expr)(?:.*\belse\b)?(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement)))
    (?&lt;statement>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter|begin|create|delete|desc(?:ribe)?|drop|exec(?:ute)?|insert|load(?:_file)?|select|show|shutdown|truncate|update|waitfor|while)\b)
    (?&lt;statement_no_semicolon>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter(?&amp;mand_space)table\b|create(?&amp;mand_space)(?:table|user)\b|delete(?&amp;mand_space)from\b|drop(?&amp;mand_space)(?:table|database)\b|insert(?&amp;mand_space)into\b|shutdown(?:(?&amp;mand_space)with(?&amp;mand_space)nowait)?(?&amp;opt_spaces)(?:$|--|;)|truncate(?&amp;mand_space)(?:(?:table)(?&amp;mand_space))?+(?&amp;name)\b|update(?&amp;mand_space)(?&amp;name)(?&amp;mand_space)set\b|waitfor\b))
    (?&lt;cmd>;(.*;)?(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement))|(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement_no_semicolon)))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=.*(?&lt;![a-z_])(?>alter|begin|create|delete|desc(?:ribe)?|drop|exec(?:ute)?|insert|load(?:_file)?|select|show|shutdown|truncate|update|waitfor|while)\b)(?&amp;opt_spaces)
(?:
    (?&amp;expr_list)(?&amp;opt_spaces)(?:(?&amp;keyword)[^;]*)?(?&amp;cmd) |
    (?&amp;closing_bracket_expr_list)(?&amp;opt_spaces)(?:(?&amp;keyword)[^;]*)?(?&amp;cmd)
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-422</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2032">
            <Name>(default SQL_025b) New statement in unquoted context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_025b) New statement in unquoted context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;statement_with_condition>\bif\b(?&amp;opt_spaces)(?&amp;expr)(?:.*\belse\b)?(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement)))
    (?&lt;statement>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter|begin|create|delete|desc(?:ribe)?|drop|exec(?:ute)?|insert|load(?:_file)?|select|show|shutdown|truncate|update|waitfor|while)\b)
    (?&lt;statement_no_semicolon>(?:\((?&amp;opt_spaces))*+(?&lt;![a-z_])(?>alter(?&amp;mand_space)table\b|create(?&amp;mand_space)(?:table|user)\b|delete(?&amp;mand_space)from\b|drop(?&amp;mand_space)(?:table|database)\b|insert(?&amp;mand_space)into\b|shutdown(?:(?&amp;mand_space)with(?&amp;mand_space)nowait)?(?&amp;opt_spaces)(?:$|--|;)|truncate(?&amp;mand_space)(?:(?:table)(?&amp;mand_space))?+(?&amp;name)\b|update(?&amp;mand_space)(?&amp;name)(?&amp;mand_space)set\b|waitfor\b))
    (?&lt;cmd>;(.*;)?(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement))|(?&amp;opt_labels)(?&amp;opt_spaces)(?:(?&amp;statement_with_condition)|(?&amp;statement_no_semicolon)))
)(?x)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)
^(?=.*(?&lt;![a-z_])(?>alter|begin|create|delete|desc(?:ribe)?|drop|exec(?:ute)?|insert|load(?:_file)?|select|show|shutdown|truncate|update|waitfor|while)\b)(?&amp;opt_spaces)
(?:
    (?&amp;expr_list)(?&amp;opt_spaces)(?:(?&amp;keyword)[^;]*)?(?&amp;cmd) |
    (?&amp;closing_bracket_expr_list)(?&amp;opt_spaces)(?:(?&amp;keyword)[^;]*)?(?&amp;cmd)
)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-908</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2037">
            <Name>(default SQL_040a) Sub query in bracket context in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_040a) Sub query in bracket context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;select_function>(?&lt;![a-z_])[a-z_.][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;select_expr_list)?\))
    (?&lt;select_literal>(?:(?&amp;literal)|\*)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;select_term>(?&amp;opt_unary_ops)(?:(?&amp;special_expr)|\((?&amp;opt_spaces)(?&amp;select_expr)(?&amp;opt_spaces)\)|(?&amp;select_function)|(?&amp;select_literal)))
    (?&lt;colname>(?:(?&amp;string)|(?&lt;![a-z_])[a-z0-9$_@#]++)(*COMMIT))
    (?&lt;select_expr>(?&amp;select_binary_op_expr)|(?&amp;select_term))
    (?&lt;select_expr_named>(?&amp;select_expr)(?&amp;opt_spaces)(?:as\b(?&amp;opt_spaces)(?&amp;colname)|(?&amp;colname))?)
    (?&lt;select_expr_list>(?&amp;select_expr_named)(?&amp;opt_spaces)(?:,(?&amp;opt_spaces)(?&amp;select_expr_named)(?&amp;opt_spaces))*)
    (?&lt;select_binary_op_expr>(?&amp;select_term)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr_list))
    (?&lt;after_select_keywords>\b(?:all|distinct|distinctrow|high_priority|straight_join|sql_small_result|sql_big_result|sql_buffer_result|sql_cache|sql_no_cache|sql_calc_found_rows|(?:first|top)(?&amp;mand_space)(?&amp;number)(?:percent)?)\b(*COMMIT))
    (?&lt;end>$|[;)]|(?&amp;comment)|/\*|from\b|(?&amp;keyword))
)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)^(?&amp;opt_spaces)select\b(?&amp;opt_spaces)(?:(?&amp;after_select_keywords)(?&amp;opt_spaces))*+(?&amp;select_expr_list)(?&amp;end)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-424</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2038">
            <Name>(default SQL_040b) Sub query in bracket context in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_040b) Sub query in bracket context</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;select_function>(?&lt;![a-z_])[a-z_.][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;select_expr_list)?\))
    (?&lt;select_literal>(?:(?&amp;literal)|\*)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;select_term>(?&amp;opt_unary_ops)(?:(?&amp;special_expr)|\((?&amp;opt_spaces)(?&amp;select_expr)(?&amp;opt_spaces)\)|(?&amp;select_function)|(?&amp;select_literal)))
    (?&lt;colname>(?:(?&amp;string)|(?&lt;![a-z_])[a-z0-9$_@#]++)(*COMMIT))
    (?&lt;select_expr>(?&amp;select_binary_op_expr)|(?&amp;select_term))
    (?&lt;select_expr_named>(?&amp;select_expr)(?&amp;opt_spaces)(?:as\b(?&amp;opt_spaces)(?&amp;colname)|(?&amp;colname))?)
    (?&lt;select_expr_list>(?&amp;select_expr_named)(?&amp;opt_spaces)(?:,(?&amp;opt_spaces)(?&amp;select_expr_named)(?&amp;opt_spaces))*)
    (?&lt;select_binary_op_expr>(?&amp;select_term)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr_list))
    (?&lt;after_select_keywords>\b(?:all|distinct|distinctrow|high_priority|straight_join|sql_small_result|sql_big_result|sql_buffer_result|sql_cache|sql_no_cache|sql_calc_found_rows|(?:first|top)(?&amp;mand_space)(?&amp;number)(?:percent)?)\b(*COMMIT))
    (?&lt;end>$|[;)]|(?&amp;comment)|/\*|from\b|(?&amp;keyword))
)(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT)^(?&amp;opt_spaces)select\b(?&amp;opt_spaces)(?:(?&amp;after_select_keywords)(?&amp;opt_spaces))*+(?&amp;select_expr_list)(?&amp;end)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-910</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2040">
            <Name>(default SQL_045a) Sub query in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30000</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default SQL_045a) Sub query</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;select_function>(?&lt;![a-z_])[a-z_.][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;select_expr_list)?\))
    (?&lt;select_literal>(?:(?&amp;literal)|\*)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;select_term>(?&amp;opt_unary_ops)(?:(?&amp;special_expr)|\((?&amp;opt_spaces)(?&amp;select_expr)(?&amp;opt_spaces)\)|(?&amp;select_function)|(?&amp;select_literal)))
    (?&lt;colname>(?:(?&amp;string)|(?&lt;![a-z_])[a-z0-9$_@#]++)(*COMMIT))
    (?&lt;select_expr>(?&amp;select_binary_op_expr)|(?&amp;select_term))
    (?&lt;select_expr_named>(?&amp;select_expr)(?&amp;opt_spaces)(?:as\b(?&amp;opt_spaces)(?&amp;colname)|(?&amp;colname))?)
    (?&lt;select_expr_list>(?&amp;select_expr_named)(?&amp;opt_spaces)(?:,(?&amp;opt_spaces)(?&amp;select_expr_named)(?&amp;opt_spaces))*)
    (?&lt;select_binary_op_expr>(?&amp;select_term)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr_list))
    (?&lt;after_select_keywords>\b(?:all|distinct|distinctrow|high_priority|straight_join|sql_small_result|sql_big_result|sql_buffer_result|sql_cache|sql_no_cache|sql_calc_found_rows|(?:first|top)(?&amp;mand_space)(?&amp;number)(?:percent)?)\b(*COMMIT))
    (?&lt;end>$|[;)]|(?&amp;comment)|/\*|from\b|(?&amp;keyword))
(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT))^.*\((?&amp;opt_spaces)select\b(?&amp;opt_spaces)(?:(?&amp;after_select_keywords)(?&amp;opt_spaces))*+(?&amp;select_expr_list)(?&amp;end)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-425</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2041">
            <Name>(default SQL_045b) Sub query in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30006</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default SQL_045b) Sub query</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>(?(DEFINE)
    (?&lt;comment>(?:#|--)(*COMMIT))
    (?&lt;nested_c_comment>(?:/\*(?:(?&amp;nested_c_comment)|(?!\*/).)*\*/)(*COMMIT))
    (?&lt;opt_spaces>(?:(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++|)(*COMMIT))
    (?&lt;mand_space>(?:[\h\v]|(?&amp;nested_c_comment)|(?&amp;comment)(?:[^\n]*[\n]|[^\n\r]*[\n\r]))++(*COMMIT))
    (?&lt;opt_labels>(?:(?&amp;opt_spaces)[\p{L}_@#][\p{L}\p{N}@$#_]{0,127}+:)++|)
    (?&lt;opt_unary_ops>(?:(?:(?:[~!+\-]|\bbinary\b|\bnot\b)(?&amp;opt_spaces))++|)(*COMMIT))
    (?&lt;unsafe_op>(?:and\b|x?or\b|\|\||&amp;&amp;)(*COMMIT))
    (?&lt;safe_op>(?:&lt;=>|&lt;=|>=|&lt;>|!=|&lt;&lt;|>>|::|&lt;|>|[\^%&amp;|*/+=]|-(?!-)|(?:between|r?like|regexp|not(?&amp;mand_space)(?:between|r?like|regexp)|collate|div|in|mod|similar|sounds(?&amp;mand_space)like|is(?&amp;mand_space)not|[ai]s)\b)(*COMMIT))
    (?&lt;binary_op>(?:(?&amp;unsafe_op)|(?&amp;safe_op))(*COMMIT))
    (?&lt;opening_function>(?&lt;![a-z_])[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((*COMMIT))
    (?&lt;function>(?:(?&amp;opening_function)(?:(?&amp;opt_spaces)(?&amp;expr_list))?+|(?&amp;r_substr_function))(?&amp;opt_spaces)\))
    (?&lt;unsafe_function>(?:(?&amp;r_substr_function)|(?:(?:p(?:g_(?:t(?:able(?:space_(?:databases|location)|_is_visible)|s_(?:template|config|parser|dict)_is_visible|ype(?:_is_visible|of)|erminate_backend|rigger_depth)|get_(?:function(?:_(?:(?:identity_)?arguments|result)|def)|(?:constraint|trigger|index|rule|view)def|serial_sequence|keywords|userbyid|expr)|(?:(?:(?:op(?:(?:erator|family|class)_is_visi|tions_to_ta)|function_is_visi)b|has_ro)l|postmaster_start_tim)e|c(?:o(?:n(?:version_is_visibl|f_load_tim)|llation_is_visibl)e|ancel_backend)|i(?:s_other_temp_schema|dentify_object)|r(?:otate_logfile|eload_conf)|listening_channels|describe_object|my_temp_schema|backend_pid)|o(?:ly(?:gon(?:from(?:text|wkb))?|from(?:text|wkb))|w(?:er(?:multiset(?:_by_cardinality)?)?)?|int(?:from(?:text|wkb)|n)?|s(?:ition|str)|pen)|r(?:e(?:diction(?:_(?:(?:cos|se)t|probability|details))?|sent(?:nn)?v|vious)|ocedureanalyse)|er(?:cent(?:ile_(?:cont|disc)|_rank)|iod_(?:diff|add)|missions)|a(?:r(?:s(?:enam)?e|ameter|tition)|t(?:index|h)|ssword)|(?:ublishingservernam|clos)e|wd(?:compare|encrypt)|lainto_tsquery|i)|s(?:t(?:_(?:c(?:on(?:vexhull|tains)|entroid|rosses)|(?:l(?:ong|at)|point)fromgeohash|di(?:s(?:joint|tance)|fference)|geo(?:mfromgeojson|hash)|(?:overlap|touche)s|e(?:nvelope|quals)|intersect(?:ion|s)|a(?:sgeojson|rea)|(?:withi|unio)n|symdifference)|a(?:t(?:s_(?:(?:binomial|wsr|ks|f)_test|m(?:w_test|ode)|one_way_anova|crosstab|t_test_*|date)|ement_timestamp)|rtpoint)|r(?:i(?:ng_(?:to_array|agg)|p)|_to_date|cmp)?|d(?:dev(?:_(?:sam|po)p)?|evp?)?|uff)|y(?:s(?:_(?:con(?:nect_by_path|text)|xml(?:agg|gen)|(?:type|gu)id|extract_utc|dburigen)|date(?:time(?:offset)?)?|t(?:imestamp|em_user)|utcdatetime)|mkeyproperty)|e(?:c(?:label(?:_(?:by_name|to_char))?|_to_time|ond)|ssion(?:property|timezone|_user)|t(?:_masklen|weight|val)?|rverproperty)|u(?:b(?:str(?:ing(?:_index)?|b)?|(?:dat|tim)e)|ser_(?:s(?:name|id)|name|id)|m)|c(?:hema(?:_(?:to_xml|name|id))?|n_to_timestamp|ope_identity)|i(?:gn(?:by(?:asymkey|cert))?|milar|nh?)|q(?:l_variant_property|uare|rt)|mall(?:datetimefromparts|int)|witchoffset|ha[12]?|oundex|leep|pace|rid)|c(?:o(?:l(?:l(?:ation(?:_key_bit|property|(?&amp;mand_space)for(?&amp;mand_space))?|ect)|umn(?:s_updated|property)|_(?:length|name))|n(?:v(?:e(?:rt(?:_tz)?|xhull))?|nection(?:property|_id)|t(?:ext_info|ains)|cat(?:_ws)?)|mp(?:are_decfloat|ress|ose)|var(?:_(?:sam|po)p|iance)|rr(?:elation|_*)?|unt(?:_big)?|ercibility|alesce|sh?|t)|u(?:r(?:r(?:ent_(?:time(?:stamp)?|dat(?:abas)?e|request_id|schemas?|catalog|query|user)|val)|sor_(?:rowcount|status|to_xml)|(?:dat|tim)e)|me_dist)|e(?:rt(?:pr(?:ivateke|opert)y|(?:encode|_i)d)|nt(?:roid|er)|il(?:ing)?)|h(?:ar(?:(?:acter)?_length|torowid|index|set)?|ecksum|oose|r)|l(?:uster_(?:probability|set|id)|o(?:ck_timestamp|b))|r(?:ypt_gen_random|osses|eate|c32)|a(?:rdinality|st)|ircle|v)|t(?:o(?:_(?:reg(?:proc(?:edure)?|ope(?:rato)?r|class|type)|t(?:s(?:vector|query)|imestamp(?:_tz)?)|b(?:inary_(?:double|float)|ase64)|d(?:a(?:te|ys)|sinterval)|n(?:c(?:har|lob)|umber)|s(?:ingle_byte|econds)|c(?:har|lob)|multi_byte|yminterval|json|lob)|datetimeoffset|talorder|uches)|r(?:i(?:gger_nestlevel|m(?:_array)?)|ans(?:action_timestamp|late)|y_(?:c(?:onver|as)t|parse)|unc(?:_timestamp|ate)?|eat)|ime(?:stamp(?:_(?:format|to_scn|iso)|diff|add)?|_(?:format|to_sec)|fromparts|ofday|diff)?|s(?:_(?:r(?:ank(?:_cd)?|ewrite)|headline)|vector_update_trigger(?:_column)?)|e(?:xt(?:valid|ptr)?|rtiary_weights)|a(?:ble_(?:schema|to_xml|name)|nh?)|ype(?:_(?:schema|name|id)|property)|z_offset)|d(?:a(?:t(?:e(?:_(?:(?:forma|par)t|trunc|add|sub)|(?:time(?:offset|2)?)?fromparts|diff|name|part|add)?|a(?:base(?:_(?:principal_id|to_xml)|propertyex)?|partitionnum|length))|y(?:of(?:week(?:_iso)?|month|year)|name|s)?)|e(?:c(?:rypt(?:by(?:key(?:auto(?:asymkey|cert))?|passphrase|asymkey|cert)|_(?:char|bin))|flo(?:at_form)?at|o(?:mpos|d)e|imal)|(?:s_(?:de|en)cryp|faul)t|nse_rank|letexml|grees|pth|ref)|i(?:s(?:joint|tance)|fference|mension|ameter|gits)|b(?:_(?:name|id)|partitionnum|timezone|clob)|ouble_precision|ump)|m(?:ulti(?:p(?:o(?:lygon(?:from(?:text|wkb))?|int(?:from(?:text|wkb))?)|ly_alt)|linestring(?:from(?:text|wkb))?)|a(?:ke(?:_(?:time(?:stamp)?|interval|date|ref|set)|(?:dat|tim)e)|s(?:ter_pos_wait|klen)|x(?:_cardinality)?)|br(?:(?:intersect|contain|overlap|touche)s|disjoint|within|equal)|i(?:n(?:_active_rowversion|ute)?|d(?:night_seconds)?|crosecond)|po(?:intfrom(?:text|wkb)|lyfrom(?:text|wkb))|o(?:nth(?:s_between|name)?|d)|linefrom(?:text|wkb)|edian|d5)|i(?:n(?:et(?:_(?:client_(?:addr|port)|server_(?:addr|port)|aton|ntoa)|6_(?:aton|ntoa))|s(?:ert(?:xmlbefore|childxml)?|tr)|te(?:r(?:iorringn|sects|val)|ger)|dex(?:(?:key_)?property|_col)|itcap)?|s(?:_(?:ipv(?:4(?:_(?:compat|mapped))?|6)|(?:(?:srv)?role)?member|(?:free|used)_lock|objectsigned)|(?:(?:fini|da)t|simpl)e|nu(?:meric|ll)|closed|empty|open)|dent(?:_(?:current|incr|seed)|ity(?:_val_local)?)|teration_number|f(?:null)?|if)|a(?:r(?:ray_(?:l(?:ength|ower|ast)|to_(?:string|json)|pr(?:epend|ior)|re(?:plac|mov)e|d(?:elete|ims)|a(?:ppend|gg)|n(?:dims|ext)|fi(?:rst|ll)|upper|cat)|ea)|s(?:(?:semblypropert|binar)y|ymkey(?:property|_id)|cii(?:str)?|wk[bt]|text|in)|pp(?:lock_(?:mode|test)|endchildxml|_name)|dd(?:(?:dat|tim)e|_months)|es_(?:de|en)crypt|t(?:an[2h]?|n2)|(?:ny_valu|g)e|b(?:brev|s)|cos|vg)|r(?:e(?:g(?:r_(?:(?:i(?:nterce|c)p|coun)t|s(?:x[xy]|lope|yy)|avg[xy]|r2)?|exp_(?:(?:sub|in)str|replace))|lease_(?:all_locks|lock)|p(?:l(?:icat|ac)e|eat)|(?:stor|vers)e|f(?:tohex)?|mainder|c2xml)|o(?:w(?:_(?:to_json|number|count)|idton?char|count_big)|und(?:_timestamp)?)|a(?:n(?:d(?:om_bytes)?|k)|tio_to_report|di(?:an|u)s|ise_error|wton?hex)|i(?:d_bi|gh)t|trim|pad)|g(?:e(?:om(?:etry(?:collection(?:from(?:text|wkb))?|fromtext|type|n)|collfrom(?:text|wkb)|from(?:text|wkb))|t(?:_(?:f(?:ilestream_transaction_contex|orma)t|current_ts_config|lock)|(?:utc)?date|ansinull|hint)|nerate_(?:s(?:ubscript|erie)s|unique))|r(?:oup(?:_(?:concat|id)|ing(?:_id)?)|eatest|aphic)|tid_sub(?:trac|se)t|length)|n(?:e(?:w(?:(?:sequential)?id|_time)|xt(?:(?&amp;mand_space)value(?&amp;mand_space)for|_day|val)|t(?:mas|wor)k)|u(?:m(?:(?:interiorring|geometrie|point)s|to(?:ds|ym)interval|node)|llif)|ls(?:_(?:charset_(?:decl_len|name|id)|(?:low|upp)er|initcap)|sort)|o(?:rmalize_decfloat|tin|w)|a(?:me_const|nvl)|t(?:h_valu|il)e|v(?:archar|l2?)|c(?:har|lob)|points)|x(?:ml(?:c(?:o(?:(?:mmen|nca)t|lattval)|data)|(?:se(?:rializ|quenc)|validat)e|(?:_is_well_forme|xsrobjecti)d|t(?:ransform|able|ext)|(?:documen|fores)t|a(?:ttributes|gg)|e(?:lement|xists)|p(?:arse|i)|namespaces|ro(?:ot|w)|group|query|lagg)|path(?:_exists)?|sltransform|act_state)?|e(?:n(?:c(?:rypt(?:by(?:(?:asym)?key|passphrase|cert))?|ode)|um_(?:(?:fir|la)st|range)|dpoint|velope)|rror_(?:(?:procedur|messag|lin)e|s(?:everity|tate)|number)|x(?:t(?:ract(?:value)?|eriorring)|p(?:ort_set)?|istsnode)|ve(?:nt(?:_mon_state|data)|ry)|mpty_blob,|omonth|quals|lt)|j(?:son(?:_(?:a(?:rray_(?:elements(?:_text)?|length)|gg)|e(?:xtract_path(?:_text)?|ach(?:_text)?)|t(?:o_record(?:set)?|ypeof)|object(?:_(?:keys|agg))?|populate_record(?:set)?|build_(?:object|array))|b_extract_path)|u(?:stify_(?:(?:hour|day)s|interval)|lian_day))|f(?:i(?:le(?:group(?:_(?:name|id)|property)|_(?:id(?:ex)?|name)|property)|rst(?:_value)?|nd_in_set|eld)|(?:ulltext(?:catalog|service)propert|amil)y|o(?:rmat(?:(?:messag|_typ)e)?|und_rows)|rom_(?:unixtime|base64|days|tz)|eature_(?:value|set|id)|lo(?:at|or))|h(?:as(?:_(?:(?:(?:f(?:oreign_data_wrapper|unction)|(?:tabl(?:espac)?|languag)e|s(?:e(?:quence|rver)|chema)|(?:any_)?column)_privileg|perms_by_nam)e|d(?:atabase_privilege|baccess))|h(?:edvalue|bytes))|o(?:st(?:_(?:name|id)|mask)?|ur)|e(?:x(?:toraw)?|ight))|l(?:o(?:ca(?:te(?:_in_string)?|ltime(?:stamp)?)|g(?:inproperty|10|2)?|wer(?:_in[cf])?|ad_file)|i(?:ne(?:string(?:fromwkb)?|from(?:text|wkb))?|stagg|ke)|a(?:st(?:_(?:insert_id|value|day)|val)?|g)|e(?:a(?:st|d)|n(?:gth)?|ft)|n(?:nvl)?|case|trim|pad|seg)|o(?:bject(?:_(?:(?:schema_)?name|definition|id)|property(?:ex)?)|r(?:iginal_(?:db_name|login)|a_hash|d)|pen(?:datasource|rowset|query|xml)|ct(?:et_length)?|verla(?:ps|y)|ld_password)|u(?:n(?:i(?:x_timestamp|code|str)|compress(?:ed_length)?|nest|hex)|p(?:per(?:_in[cf])?|date(?:xml)?)|tc_(?:time(?:stamp)?|date)|ser(?:_(?:name|id)|env)?|uid(?:_short)?|case|id)|b(?:i(?:t(?:_(?:length|count|x?or|and)|and)|n(?:(?:ary_checks|_to_n)um)?|gint)|o(?:ol_(?:and|or)|undary|x)|a(?:se_table|ckup)|enchmark|filename|roadcast|uffer|lob)|v(?:a(?:r(?:(?:_(?:sam|po))?p|char(?:_format)?|graphic|iance)?|l(?:idate_password_strength|ues?))|er(?:ifysignedby(?:asymkey|cert)|sion)|size)|w(?:ait_(?:until_sql_thread_after_gtids|for_executed_gtid_set)|e(?:ek(?:ofyear|_iso|day)?|ight_string)|i(?:dth(?:_bucket)?|thin))|qu(?:ery(?:_to_xml|tree)|a(?:ntize|rter)|ot(?:enam)?e)|key_(?:(?:gu)?id|name)|y(?:ear(?:week)?)?)|(?:(?:x(?:db(?:$(?:(?:(?:(?:whitespac|us)e|derivation|transient|form)choic|extname2intnam|javatyp)e|p(?:atchup(?:delete)?schema|rocesschoice)|(?:(?:res)?config|stats|acl)$xd|initxdbschema)|uritype)|ml(?:i(?:ndex(?:(?:load|ins)func|methods)|dxstatsmethods)|(?:character|binary)(?:out|in)putstream|sequencefrom(?:refcursor2?|xmltype)|(?:genformat)?type)|q(?:window)?sequencefromxmltype|s$(?:securityclas|roleset)s$xd|pathindexmethods)|d(?:r(?:i(?:r(?:e(?:p[mz]?|c)|io)|p(?:ar(?:se|x)|ref)|s(?:cor[er]|gp|pl)|e(?:ntl?|rr|xp)|d(?:isp|ml|oc)|l(?:ist|oad)|(?:ut|va)l|i(?:mp|xs)|o(?:bj|pt)|ths[cdlx]?|feat|acc|con|mlx|xmd|g)|v(?:d(?:dl[crx]?|isp|ml|oc)|x(?:tab[crx]?|md)|(?:0dd|ut)l|parx|imr|odm|rio|tmt)|ue)|m(?:b(?:[am][npt]|cn)|(?:glm|mod|nmf)b|(?:svm|cl)[ab])imp|b(?:ms(?:objg(?:wrapper|2)?|hsxp)|uritype)|i(?:util|ana))|h(?:h(?:c(?:(?:o(?:m(?:p(?:ar|os)|moncod)|llaps)|ldat)e|ell(?:bndry|size)|bit)|s(?:ub(?:divide|str)|t(?:bit|ype)|etcid|bit)|(?:d(?:istanc|ecod)|encod|jldat)e|g(?:t(?:bit|ype)|etcid|roup|bit)|(?:precisio|bytele)n|i(?:dl?part|ncrlev)|(?:o(?:rde)?|xo)r|n(?:compare|dim)|le(?:ngth|vels)|ma(?:xcode|tch)|and)|t(?:[fp]|tpuritype|mldb))|o(?:dci(?:(?:index(?:info(?:flags)?|callproperty|alteroption)|p(?:artinfo(?:list)?|redinfo)|(?:tabfunc|query)info|statsoptions|anydata|env)dump|co(?:linfo(?:flags)?dump|nst))|wa)|a(?:gg(?:r(?:c(?:on(?:vexhull|cat)|entroid)|lrsconcat(?:3d)?|union|mbr)|x(?:q(?:avg|sum)?|ml)imp)|ny(?:data(?:set)?|type)|pex(?:ws)?)|s(?:y(?:s(?:$rawtoany|event)|ncrn)|e(?:rvlet$xd|tmodflg)|do(?:curpkg|aggr)?|t(?:andard|ragg)|ubptxt2?)|kup(?:c(?:$queue|c)|u$utilities|w$worker|d$data|f$file|p$proc|m$mcp|v$ft)|(?:c(?:atindexmethod|ontentschemai)|text(?:indexmethod|optstat))s|r(?:e(?:pcatlogtrig|vokee)|uleindexmethods|treejoinfunc)|g(?:et(?:xmlschemadependencylist|tvoid)|rantee)|p(?:b(?:r(?:eak|ph)|sde|utl)|litblm|idl)?|m(?:d(?:[12]|err)?|vaggrawbitor)|f(?:tpuritype|uncstats)?|job(?:a(?:ttr|rg))?|uri(?:factory|type)|logstdby$u?tabf|isxmltypetable|w(?:piutl|s)|v(?:rn)?|qry2opt|nv|z)|(?:(?:x(?:db(?:$(?:enum2?|acl)|config|[hp]i)?|ml(?:index(?:load)?|seq(?:cur2?)?)?|s$(?:catview|data)|q(?:window)?seq|imetadata)|o(?:lap(?:r(?:ancurimpl|c))?|ra(?:$(?:grant)?|cle)?|g(?:is|c)|utln|dm|wa)|s(?:e(?:cure|rver|t)|c(?:heduler$|n)|ql(?:set)?|t(?:ring)?|pace|do|ys)|d(?:e(?:velopment|f$|s)|bms(?:objg|zexp)?|ictionary|atabase|mp?|ri?)|kup(?:c$(?:q(?:ue)?ue)?|u$utilities|d$data|f$file|v$ft)|c(?:h(?:(?:ec)?k|nf$)|lient|ube|tx|s)|p(?:r(?:iv(?:ileg|at)e|vt)|artition)|m(?:vaggrawbitor|d(?:prvt)?|ovexdb)|l(?:o(?:g(?:stdby|mnr|in)|ad)|cr$)|t(?:(?:ransfor|f)m|imestamp|blast)|r(?:tree(?:join)?|e(?:$nv|set))|h(?:hencode|tmldb|aen|s$|m)|a(?:[sw]|pex(?:$)?|dd|q$)|u(?:(?:nd|s)er|pdate|tl)|w(?:ith|ri$|pg|wv)|i(?:nstance|s)|v(?:alidate)?|blast[np]?|escape|get|job))_[a-z0-9_-]+)\.[a-z_.@][a-z0-9._]{0,30})(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr_list)?|[a-z_.@][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;unsafe_expr_list))(?&amp;opt_spaces)\))
    (?&lt;r_substr_function>\bsubstr(?:ing)?(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bfrom\b(?&amp;opt_spaces)(?&amp;expr)(?:(?&amp;opt_spaces)\bfor\b(?&amp;opt_spaces)(?&amp;expr))?)
    (?&lt;inverse_brackets>\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?(?:(?&amp;binary_op)(?&amp;opt_spaces)|(?&amp;inverse_brackets)(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces))?)(?&amp;opt_unary_ops)(?:(?&amp;r_special_expr)|\(|(?&amp;opening_function)))
    (?&lt;floating_point>\\?(?&amp;opt_spaces)(?:(?:[0-9]*(?:\.[0-9]+)|[0-9]+\.?)(?:e[-+]?[0-9]*)?(?:d(?!iv)|f(?!rom))?)(*COMMIT))
    (?&lt;hex_bin>\b(?:0x[0-9a-f]++|[xb](?&amp;string)|0b[01]++)(*COMMIT))
    (?&lt;number>(?:(?&amp;hex_bin)|(?&amp;floating_point))(*COMMIT))
    (?&lt;date_time>(?:\{(?&amp;opt_spaces)[^\h\v&quot;'`]+(?&amp;opt_spaces)(?&amp;literal)(?&amp;opt_spaces)\})(*COMMIT))
    (?&lt;opt_charset_or_quoted_var>(?:_[[:alpha:][:alnum:]]*+(?&amp;opt_spaces)|u[xq]|gx|nq|[@begnqux]|)(*COMMIT))
    (?&lt;single_string_backslash_escaping>(?:(?&lt;quote>[&quot;'`])(?:(?&lt;escaped_quote>\\\g{quote})|\\\\|\g{quote}\g{quote}|(?!\g{quote}).)*+\g{quote}(?(&lt;escaped_quote>)|(*FAIL)))(*COMMIT))
    (?&lt;single_string_quote_escaping>(?:([&quot;'`])(?:\g{-1}\g{-1}|(?!\g{-1}).)*+\g{-1})(*COMMIT))
    (?&lt;single_string>(?:(?&amp;single_string_backslash_escaping)|(?&amp;single_string_quote_escaping)|\$(?&lt;strname>[^$]*+)\$.*?\$\g{strname}\$)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;string>(?:(?&amp;opt_charset_or_quoted_var)(?&amp;single_string)(?:(?&amp;opt_spaces)(?&amp;single_string))*+)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;const_var>(?:@(?:(?![\^&lt;=>|\\\-,:!?\/'&quot;`()\[\]*\&amp;#%+])[\p{L}\p{N}\p{P}}\p{S}])*+|\\N\b)(*COMMIT))
    (?&lt;name>(?:\b[a-z_][@a-z0-9$._\\]{0,29}+\b(?!(?&amp;opt_spaces)\())(*COMMIT))
    (?&lt;literal>(?:(?&amp;number)|(?&amp;string)|(?&amp;const_var)|(?&amp;name)|(?&amp;date_time))(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;special_expr>\bcase\b(?&amp;opt_spaces)(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\bwhen\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bthen\b(?&amp;opt_spaces)(?&amp;expr))+.*(?:\belse\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?\bend\b|\bif\b(?&amp;opt_spaces)(?&amp;expr_list)(?:(?&amp;opt_spaces)\belse\b(?&amp;opt_spaces)(?&amp;expr))?|(?&amp;r_special_expr)(?&amp;opt_spaces)\))
    (?&lt;r_special_expr>\bmatch\b(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces)\bagainst\b(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;expr)(?:\b(?:[a-z]|(?&amp;opt_spaces))*(?:mode|expansion)\b)?)
    (?&lt;term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;expr_list)(?&amp;opt_spaces)\)|(?&amp;special_expr)|(?&amp;function)|(?&amp;literal)))
    (?&lt;unsafe_term>(?&amp;opt_unary_ops)(?:\((?&amp;opt_spaces)(?&amp;unsafe_expr_list)(?&amp;opt_spaces)\)|(?&amp;unsafe_function)|(?&amp;special_expr)))
    (?&lt;expr_list>(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr))*+)
    (?&lt;unsafe_expr_list>(?&amp;unsafe_expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;expr_list))?|(?&amp;expr)(?:(?&amp;opt_spaces),(?&amp;opt_spaces)(?&amp;unsafe_expr_list)))
    (?&lt;unsafe_expr>(?&amp;unsafe_term)(?&amp;opt_spaces)(?&amp;r_expr)?|(?&amp;term)(?&amp;opt_spaces)(?:(?&amp;unsafe_op)(?&amp;opt_spaces)(?&amp;expr)|(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;unsafe_expr)))
    (?&lt;safe_binary_op_expr>(?&amp;term)(?&amp;opt_spaces)(?&amp;safe_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;expr>(?&amp;term)(?:(?&amp;opt_spaces)(?&amp;r_expr))?(?&amp;opt_labels))
    (?&lt;closing_bracket_expr>(?:(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_closing_bracket_expr>(?:(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;closing_bracket_expr_list>(?:(?&amp;expr_list)(?&amp;opt_spaces))?(?:\)(?&amp;opt_spaces)(?:(?&amp;r_expr)(?&amp;opt_spaces))?)+)
    (?&lt;r_expr>(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr))
    (?&lt;keyword>(?:exec(?:ute)?+\b|for(?&amp;mand_space)update\b|group(?&amp;mand_space)by\b|having\b(?&amp;opt_spaces)(?&amp;expr)|in(?&amp;mand_space)(?:natural(?&amp;mand_space)language|boolean(?&amp;mand_space)mode)\b|into(?&amp;mand_space)outfile\b|limit(?&amp;mand_space)(?&amp;number)|lock(?&amp;mand_space)in\b|order(?&amp;mand_space)by\b|procedure(?&amp;mand_space)analyse\b|where\b(?&amp;opt_spaces)(?&amp;expr)|within(?&amp;mand_space)group\b|with(?&amp;mand_space)query\b)(*COMMIT))
    (?&lt;select_function>(?&lt;![a-z_])[a-z_.][a-z0-9._]{0,30}+(?&amp;opt_spaces)\((?&amp;opt_spaces)(?&amp;select_expr_list)?\))
    (?&lt;select_literal>(?:(?&amp;literal)|\*)(?(DO_COMMIT)(*COMMIT)|))
    (?&lt;select_term>(?&amp;opt_unary_ops)(?:(?&amp;special_expr)|\((?&amp;opt_spaces)(?&amp;select_expr)(?&amp;opt_spaces)\)|(?&amp;select_function)|(?&amp;select_literal)))
    (?&lt;colname>(?:(?&amp;string)|(?&lt;![a-z_])[a-z0-9$_@#]++)(*COMMIT))
    (?&lt;select_expr>(?&amp;select_binary_op_expr)|(?&amp;select_term))
    (?&lt;select_expr_named>(?&amp;select_expr)(?&amp;opt_spaces)(?:as\b(?&amp;opt_spaces)(?&amp;colname)|(?&amp;colname))?)
    (?&lt;select_expr_list>(?&amp;select_expr_named)(?&amp;opt_spaces)(?:,(?&amp;opt_spaces)(?&amp;select_expr_named)(?&amp;opt_spaces))*)
    (?&lt;select_binary_op_expr>(?&amp;select_term)(?&amp;opt_spaces)(?&amp;binary_op)(?&amp;opt_spaces)(?&amp;expr_list))
    (?&lt;after_select_keywords>\b(?:all|distinct|distinctrow|high_priority|straight_join|sql_small_result|sql_big_result|sql_buffer_result|sql_cache|sql_no_cache|sql_calc_found_rows|(?:first|top)(?&amp;mand_space)(?&amp;number)(?:percent)?)\b(*COMMIT))
    (?&lt;end>$|[;)]|(?&amp;comment)|/\*|from\b|(?&amp;keyword))
(?(?=^.*\\[&quot;'`])|(?&lt;DO_COMMIT>))(*COMMIT))^.*\((?&amp;opt_spaces)select\b(?&amp;opt_spaces)(?:(?&amp;after_select_keywords)(?&amp;opt_spaces))*+(?&amp;select_expr_list)(?&amp;end)</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>false</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-911</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2043">
            <Name>(default XSS_001a) HTML script or embed src attribute in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_001a) HTML script or embed src attribute</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;(?:script|embed)[/\h\v].*?src[\h\v]*+=.{3,}?></PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-426</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2044">
            <Name>(default XSS_001b) HTML script or embed src attribute in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_001b) HTML script or embed src attribute</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;(?:script|embed)[/\h\v].*?src[\h\v]*+=.{3,}?></PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-912</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2045">
            <Name>(default XSS_001c) HTML script or embed src attribute in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30008</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default XSS_001c) HTML script or embed src attribute</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;(?:script|embed)[/\h\v].*?src[\h\v]*+=.{3,}?></PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-215</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2046">
            <Name>(default XSS_005a) HTML script tag in parameter value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30001</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default XSS_005a) HTML script tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;script[^>]*?>[^`(=]*?[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-427</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2047">
            <Name>(default XSS_005b) HTML script tag in HTTP header value</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30007</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All paths. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-200</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default XSS_005b) HTML script tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;script[^>]*?>[^`(=]*?[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-913</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
        <DenyRule Id="-2048">
            <Name>(default XSS_005c) HTML script tag in path</Name>
            <Comment></Comment>
            <DenyRuleGroupIds>
                <DenyRuleGroupId>-30008</DenyRuleGroupId>
            </DenyRuleGroupIds>
            <SecurityLevels>
                <SecurityLevel>BASIC</SecurityLevel>
                <SecurityLevel>STANDARD</SecurityLevel>
                <SecurityLevel>STRICT</SecurityLevel>
            </SecurityLevels>
            <IpPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All IP addresses.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-100</DefaultId>
                <IpAddressRange></IpAddressRange>
            </IpPattern>
            <PathPattern>
                <Name>(default XSS_005c) HTML script tag</Name>
                <Comment></Comment>
                <Active>true</Active>
                <Pattern>
                    <PatternString>&lt;script[^>]*?>[^`(=]*?[`(=]</PatternString>
                    <IgnoreCase>true</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-216</DefaultId>
            </PathPattern>
            <ParameterNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-300</DefaultId>
            </ParameterNamePattern>
            <ParameterValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All values. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-400</DefaultId>
            </ParameterValuePattern>
            <HttpMethodPattern>
                <Name>(default) No Restriction</Name>
                <Comment>All HTTP Methods.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-604</DefaultId>
            </HttpMethodPattern>
            <ContentTypePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All content types. The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-700</DefaultId>
            </ContentTypePattern>
            <HttpHeaderNamePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Names.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-800</DefaultId>
            </HttpHeaderNamePattern>
            <HttpHeaderValuePattern>
                <Name>(default) No Restriction</Name>
                <Comment>All Header Values.
The empty pattern matches any string.</Comment>
                <Active>false</Active>
                <Pattern>
                    <PatternString></PatternString>
                    <IgnoreCase>false</IgnoreCase>
                    <InvertPattern>false</InvertPattern>
                    <AirlockRegexFormat>true</AirlockRegexFormat>
                </Pattern>
                <DefaultId>-900</DefaultId>
            </HttpHeaderValuePattern>
        </DenyRule>
    </DenyRules>
    <DenyRuleGroups>
        <DenyRuleGroup Id="-30000">
            <Name>(default) SQL Injection (SQLi) in Parameter Value</Name>
            <Comment>The group contains SQL injection deny rules for parameter values. The security level Basic prevents injection of new SQL statements (e.g. ; DROP TABLE) and set operations (e.g. UNION SELECT). The security level Standard further prevents injection of SQL sub queries and SQL expressions in single quote context (e.g. ' or 1=1--). The security level Strict further prevents SQLi in unquoted context (e.g. 1 or 1).</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2000</DenyRuleId>
                <DenyRuleId>-2019</DenyRuleId>
                <DenyRuleId>-2114</DenyRuleId>
                <DenyRuleId>-2028</DenyRuleId>
                <DenyRuleId>-2031</DenyRuleId>
                <DenyRuleId>-2116</DenyRuleId>
                <DenyRuleId>-2037</DenyRuleId>
                <DenyRuleId>-2040</DenyRuleId>
                <DenyRuleId>-2118</DenyRuleId>
                <DenyRuleId>-2120</DenyRuleId>
                <DenyRuleId>-2122</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30001">
            <Name>(default) Cross-Site Scripting (XSS) in Parameter Value</Name>
            <Comment>The group contains XSS deny rules for parameter values. The security level Basic prevents injection of &lt;script> and known HTML event handlers (e.g. &quot;onload&quot;). The security level Standard prevents injection of JavaScript code in quoted context. The security level Strict prevents injection of JavaScript code in unquoted context.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2001</DenyRuleId>
                <DenyRuleId>-2043</DenyRuleId>
                <DenyRuleId>-2046</DenyRuleId>
                <DenyRuleId>-2055</DenyRuleId>
                <DenyRuleId>-2058</DenyRuleId>
                <DenyRuleId>-2061</DenyRuleId>
                <DenyRuleId>-2064</DenyRuleId>
                <DenyRuleId>-2067</DenyRuleId>
                <DenyRuleId>-2070</DenyRuleId>
                <DenyRuleId>-2073</DenyRuleId>
                <DenyRuleId>-2149</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30002">
            <Name>(default) HTTP Response Splitting</Name>
            <Comment>Prevents HTTP response splitting by blocking injection of an HTML response body or response header.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2004</DenyRuleId>
                <DenyRuleId>-2109</DenyRuleId>
                <DenyRuleId>-2110</DenyRuleId>
                <DenyRuleId>-2111</DenyRuleId>
                <DenyRuleId>-2112</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30003">
            <Name>(default) Encoding and Conversion Exploits in Parameter Value</Name>
            <Comment>Prevents injection of special encoded characters, such as double URL encoded characters in parameter values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2013</DenyRuleId>
                <DenyRuleId>-2096</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30004">
            <Name>(default) Insecure Direct Object Reference in Parameter Value</Name>
            <Comment>The group contains insecure direct object reference deny rules and file inclusion deny rules for parameter values. The security level Basic prevents directory traversal and injection of certain critical files (e.g. /etc/passwd). The security level Standard prevents injection of known top level directory paths (e.g. /etc/) and critical protocol schemes (e.g. &quot;php://). The security level Strict further prevents injection of file paths with critical suffixes (e.g. .exe) any absolute Windows and UNIX directory path, any protocol scheme or path in universal naming convention format.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2006</DenyRuleId>
                <DenyRuleId>-2077</DenyRuleId>
                <DenyRuleId>-2078</DenyRuleId>
                <DenyRuleId>-2079</DenyRuleId>
                <DenyRuleId>-2080</DenyRuleId>
                <DenyRuleId>-2081</DenyRuleId>
                <DenyRuleId>-2083</DenyRuleId>
                <DenyRuleId>-2084</DenyRuleId>
                <DenyRuleId>-2085</DenyRuleId>
                <DenyRuleId>-2087</DenyRuleId>
                <DenyRuleId>-2090</DenyRuleId>
                <DenyRuleId>-2092</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30017">
            <Name>(default) HTTP Parameter Pollution</Name>
            <Comment>Prevents HTTP parameter pollution by blocking nested parameters in parameter values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2014</DenyRuleId>
                <DenyRuleId>-2113</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30018">
            <Name>(default) UNIX Command Injection in Parameter Value</Name>
            <Comment>The group contains deny rules preventing UNIX command injections through HTTP parameter values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2130</DenyRuleId>
                <DenyRuleId>-2151</DenyRuleId>
                <DenyRuleId>-2153</DenyRuleId>
                <DenyRuleId>-2155</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30019">
            <Name>(default) UNIX Command Injection in Header Value</Name>
            <Comment>The group contains deny rules preventing UNIX command injections through HTTP header values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2131</DenyRuleId>
                <DenyRuleId>-2152</DenyRuleId>
                <DenyRuleId>-2154</DenyRuleId>
                <DenyRuleId>-2156</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30020">
            <Name>(default) Automated Scanning</Name>
            <Comment>Prevents automated scanning with standard tools</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2141</DenyRuleId>
                <DenyRuleId>-2142</DenyRuleId>
                <DenyRuleId>-2143</DenyRuleId>
                <DenyRuleId>-2144</DenyRuleId>
                <DenyRuleId>-2145</DenyRuleId>
                <DenyRuleId>-2146</DenyRuleId>
                <DenyRuleId>-2147</DenyRuleId>
                <DenyRuleId>-2148</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30021">
            <Name>(default) LDAP Injection in Parameter Value</Name>
            <Comment>Prevents LDAP query injection in parameter values</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2161</DenyRuleId>
                <DenyRuleId>-2163</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30022">
            <Name>(default) LDAP Injection in Header Value</Name>
            <Comment>Prevents LDAP query injection in header values</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2162</DenyRuleId>
                <DenyRuleId>-2164</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30023">
            <Name>(default) HTML Injection in Parameter Value</Name>
            <Comment>The group prevents HTML injection through HTTP parameter values. The security level Basic does not prevent any HTML injection. The security level Standard prevents injection of well known HTML tags (e.g. &lt;img src=&quot;path&quot;>) as well as injection of well known HTML attribute names in a single or double quoted attribute value (e.g. ' href=&quot;url&quot;). The security level Strict prevents injection of any kind of HTML tags as well as injection of any kind of HTML attribute names in a single or double quoted attribute value.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2049</DenyRuleId>
                <DenyRuleId>-2127</DenyRuleId>
                <DenyRuleId>-2052</DenyRuleId>
                <DenyRuleId>-2124</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30024">
            <Name>(default) HTML Injection in Header Value</Name>
            <Comment>The group prevents HTML injection through HTTP header values. The security level Basic does not prevent any HTML injection. The security level Standard prevents injection of well known HTML tags (e.g. &lt;img src=&quot;path&quot;>) as well as injection of well known HTML attribute names in a single or double quoted attribute value (e.g. ' href=&quot;url&quot;). The security level Strict prevents injection of any kind of HTML tags as well as injection of any kind of HTML attribute names in a single or double quoted attribute value.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2050</DenyRuleId>
                <DenyRuleId>-2128</DenyRuleId>
                <DenyRuleId>-2053</DenyRuleId>
                <DenyRuleId>-2125</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30025">
            <Name>(default) HTML Injection in Path</Name>
            <Comment>The group prevents HTML injection through HTTP paths. The security level Basic does not prevent any HTML injection. The security level Standard prevents injection of well known HTML tags (e.g. &lt;img src=&quot;path&quot;>) as well as injection of well known HTML attribute names in a single or double quoted attribute value (e.g. ' href=&quot;url&quot;). The security level Strict prevents injection of any kind of HTML tags as well as injection of any kind of HTML attribute names in a single or double quoted attribute value.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2051</DenyRuleId>
                <DenyRuleId>-2129</DenyRuleId>
                <DenyRuleId>-2165</DenyRuleId>
                <DenyRuleId>-2126</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30026">
            <Name>(default) Windows Command Injection in Parameter Value</Name>
            <Comment>The group contains deny rules preventing Windows command injections through HTTP parameter values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2157</DenyRuleId>
                <DenyRuleId>-2159</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30027">
            <Name>(default) Windows Command Injection in Header Value</Name>
            <Comment>The group contains deny rules preventing Windows command injections through HTTP header values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2158</DenyRuleId>
                <DenyRuleId>-2160</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30028">
            <Name>(default) Client-side template injection (Angular, Ember, Meteor and more)</Name>
            <Comment>Prevents JavaScript injection in client-side web application frameworks like Angular, Ember or Meteor.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2168</DenyRuleId>
                <DenyRuleId>-2169</DenyRuleId>
                <DenyRuleId>-2170</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30006">
            <Name>(default) SQL Injection (SQLi) in Header Value</Name>
            <Comment>The group contains SQL injection deny rules for header values. The security level Basic prevents injection of new SQL statements (e.g. ; DROP TABLE) and set operations (e.g. UNION SELECT). The security level Standard further prevents injection of SQL sub queries and SQL expressions in single quote context (e.g. ' or 1=1--). The security level Strict further prevents SQLi in unquoted context (e.g. 1 or 1).</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2020</DenyRuleId>
                <DenyRuleId>-2115</DenyRuleId>
                <DenyRuleId>-2029</DenyRuleId>
                <DenyRuleId>-2032</DenyRuleId>
                <DenyRuleId>-2117</DenyRuleId>
                <DenyRuleId>-2038</DenyRuleId>
                <DenyRuleId>-2041</DenyRuleId>
                <DenyRuleId>-2119</DenyRuleId>
                <DenyRuleId>-2121</DenyRuleId>
                <DenyRuleId>-2123</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30007">
            <Name>(default) Cross-Site Scripting (XSS) in Header Value</Name>
            <Comment>The group contains XSS deny rules for HTTP header values. The security level Basic prevents injection of &lt;script> and known HTML event handlers (e.g. &quot;onload&quot;). The security level Standard prevents injection of JavaScript code in quoted context. The security level Strict prevents injection of JavaScript code in unquoted context.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2017</DenyRuleId>
                <DenyRuleId>-2044</DenyRuleId>
                <DenyRuleId>-2047</DenyRuleId>
                <DenyRuleId>-2056</DenyRuleId>
                <DenyRuleId>-2059</DenyRuleId>
                <DenyRuleId>-2062</DenyRuleId>
                <DenyRuleId>-2068</DenyRuleId>
                <DenyRuleId>-2071</DenyRuleId>
                <DenyRuleId>-2074</DenyRuleId>
                <DenyRuleId>-2150</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30008">
            <Name>(default) Cross-Site Scripting (XSS) in Path</Name>
            <Comment>The group contains XSS deny rules for HTTP paths. The security level Basic prevents injection of &lt;script> and known HTML event handlers (e.g. &quot;onload&quot;). The security level Standard prevents injection of JavaScript code in quoted context. The security level Strict prevents injection of JavaScript code in unquoted context.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2008</DenyRuleId>
                <DenyRuleId>-2045</DenyRuleId>
                <DenyRuleId>-2048</DenyRuleId>
                <DenyRuleId>-2069</DenyRuleId>
                <DenyRuleId>-2072</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30009">
            <Name>(default) Insecure Direct Object Reference in Path</Name>
            <Comment>The group contains insecure direct object reference deny rules and file inclusion deny rules for HTTP paths. The security level Basic and Standard prevents directory traversal and injection of certain critical files (e.g. .htaccess). The security level Strict further prevents injection of file paths with critical suffixes (e.g. .exe).</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2005</DenyRuleId>
                <DenyRuleId>-2086</DenyRuleId>
                <DenyRuleId>-2088</DenyRuleId>
                <DenyRuleId>-2089</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30010">
            <Name>(default) Parameter Name Sanity</Name>
            <Comment>Prevents injection of special encoded characters in parameter names.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2007</DenyRuleId>
                <DenyRuleId>-2011</DenyRuleId>
                <DenyRuleId>-2099</DenyRuleId>
                <DenyRuleId>-2103</DenyRuleId>
                <DenyRuleId>-2104</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30011">
            <Name>(default) Parameter Value Sanity</Name>
            <Comment>Prevents injection of special encoded characters in parameter values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2003</DenyRuleId>
                <DenyRuleId>-2012</DenyRuleId>
                <DenyRuleId>-2100</DenyRuleId>
                <DenyRuleId>-2106</DenyRuleId>
                <DenyRuleId>-2132</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30012">
            <Name>(default) Header Name Sanity</Name>
            <Comment>Prevents injection of special encoded characters in header names.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2015</DenyRuleId>
                <DenyRuleId>-2107</DenyRuleId>
                <DenyRuleId>-2172</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30013">
            <Name>(default) Header Value Sanity</Name>
            <Comment>Prevents injection of special encoded characters in header values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2016</DenyRuleId>
                <DenyRuleId>-2101</DenyRuleId>
                <DenyRuleId>-2108</DenyRuleId>
                <DenyRuleId>-2167</DenyRuleId>
                <DenyRuleId>-2171</DenyRuleId>
                <DenyRuleId>-2174</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30014">
            <Name>(default) Path Sanity</Name>
            <Comment>Prevents injection of special encoded characters in HTTP paths.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2002</DenyRuleId>
                <DenyRuleId>-2010</DenyRuleId>
                <DenyRuleId>-2102</DenyRuleId>
                <DenyRuleId>-2105</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
        <DenyRuleGroup Id="-30015">
            <Name>(default) Encoding and Conversion Exploits in Header Value</Name>
            <Comment>Prevents injection of special encoded characters, such as double URL encoded characters in header values.</Comment>
            <DenyRuleIds>
                <DenyRuleId>-2018</DenyRuleId>
                <DenyRuleId>-2097</DenyRuleId>
            </DenyRuleIds>
        </DenyRuleGroup>
    </DenyRuleGroups>
    <GlobalRequestHeaderActions>
        <GlobalRequestHeaderAction Id="-10002">
            <Name>(default) Request header blacklist</Name>
            <Comment>Some headers known to be problematic are removed.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>^(?:Front-End-Https|X-Forwarded-For|X-Forwarded-Proto)$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^.*$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <RedirectStatusCode>303</RedirectStatusCode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalRequestHeaderAction>
        <GlobalRequestHeaderAction Id="-10003">
            <Name>(default) Translate Host header</Name>
            <Comment>The value in the incoming host header is replaced by the back-end host. Rewriting the host header may be necessary if the application server needs the back-end host name in the header instead of the external name (e.g. for name based virtual hosts in the back-end).</Comment>
            <ActionType>REWRITE_HEADER_VALUE</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString>^Host$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^.*$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>%BACKENDHOST%</NewValue>
            <RedirectStatusCode>303</RedirectStatusCode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalRequestHeaderAction>
        <GlobalRequestHeaderAction Id="-10004">
            <Name>(default) Translate Referer header</Name>
            <Comment>The incoming referer header is rewritten to match the back-end protocol/host/URL. Rewriting the referer may be necessary if the application interprets the referer field but is not reverse-proxy compatible.</Comment>
            <ActionType>REWRITE_HEADER_VALUE</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString>^Referer$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^%ENTRYPROTOCOL%://%ENTRYHOST%(?::[0-9]+)?%ENTRYDIR%(/.*)?$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>%BACKENDPROTOCOL%://%BACKENDHOST%%BACKENDDIR%$1</NewValue>
            <RedirectStatusCode>303</RedirectStatusCode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalRequestHeaderAction>
        <GlobalRequestHeaderAction Id="-10005">
            <Name>(default) Add X-Forwarded-For header</Name>
            <Comment>Adds an X-Forwarded-For header to preserve the original client IP for back-ends.</Comment>
            <ActionType>ADD_OR_REPLACE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>X-Forwarded-For</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^.*$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>%REMOTEADDR%</NewValue>
            <RedirectStatusCode>303</RedirectStatusCode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalRequestHeaderAction>
        <GlobalRequestHeaderAction Id="-10006">
            <Name>(default) Add X-Forwarded-Proto header</Name>
            <Comment>Adds an X-Forwarded-Proto header to preserve the original protocol for back-ends.</Comment>
            <ActionType>ADD_OR_REPLACE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>X-Forwarded-Proto</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^.*$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>%ENTRYPROTOCOL%</NewValue>
            <RedirectStatusCode>303</RedirectStatusCode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalRequestHeaderAction>
        <GlobalRequestHeaderAction Id="-10007">
            <Name>(default) Translate Origin header</Name>
            <Comment>The incoming origin header is rewritten to match the back-end protocol/host/URL. Rewriting the origin may be necessary if the application interprets the origin field but is not reverse-proxy compatible.</Comment>
            <ActionType>REWRITE_HEADER_VALUE</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString>^Origin$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^%ENTRYPROTOCOL%://%ENTRYHOST%(?::[0-9]+)?%ENTRYDIR%(/.*)?$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>%BACKENDPROTOCOL%://%BACKENDHOST%%BACKENDDIR%$1</NewValue>
            <RedirectStatusCode>303</RedirectStatusCode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalRequestHeaderAction>
        <GlobalRequestHeaderAction Id="-10000">
            <Name>(default) Request header whitelist</Name>
            <Comment>All headers not explicitly contained in the whitelist of well-known headers are removed.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>^(?:Accept|Accept-Charset|Accept-Language|Access-Control-Request-Headers|Access-Control-Request-Method|Authorization|Cache-Control|Content-Type|Cookie|DNT|Host|If-Match|If-Modified-Since|If-None-Match|If-Range|Origin|Pragma|Range|Referer|Sec-Metadata|Sec-WebSocket-Extensions|Sec-WebSocket-Key|Sec-WebSocket-Protocol|Sec-WebSocket-Version|SOAPAction|UA-CPU|Upgrade-Insecure-Requests|User-Agent|Via|X-Do-Not-Track|X-Requested-With|X-Same-Domain|X-WAP-Profile|X-WAP-Profile-Diff)$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>true</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^.*$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <RedirectStatusCode>303</RedirectStatusCode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalRequestHeaderAction>
    </GlobalRequestHeaderActions>
    <GlobalResponseHeaderActions>
        <GlobalResponseHeaderAction Id="-20015">
            <Name>(default) Set cookie security attributes</Name>
            <Comment>This action automatically sets the security attributes of cookies based on the current configuration. In particular, the &quot;Secure&quot; attribute is set if HTTPS is enabled on the virtual host and disabled otherwise. The &quot;HttpOnly&quot; attribute is automatically set for encrypted cookies. For passthrough cookies, the &quot;HttpOnly&quot; attribute is not modified.</Comment>
            <ActionType>REWRITE_COOKIE</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>true</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString>.*</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20016">
            <Name>(default) Translate internal cookie path</Name>
            <Comment>Action for rewriting the &quot;Path&quot; attribute of cookies. Rewriting the cookie path may be necessary if the application creates absolute or incorrect cookie paths because it is not reverse proxy compatible.</Comment>
            <ActionType>REWRITE_COOKIE</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>true</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString>.*</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString>^/%BACKENDPATH%(/.*)?$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo>/%ENTRYPATH%$1</PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>false</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20017">
            <Name>(default) Translate internal cookie domain</Name>
            <Comment>This action replaces the &quot;Domain&quot; attribute of cookies with the session cookie domain configured on the corresponding virtual host.</Comment>
            <ActionType>REWRITE_COOKIE</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>true</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString>.*</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString>^.+$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo>%VHCOOKIEDOMAIN%</DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20002">
            <Name>(default) Response header blacklist</Name>
            <Comment>Removes some unused headers.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>^(?:Age|Link|P3P|Proxy-Authenticate|Server|Via)$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20003">
            <Name>(default) Response header blacklist (information leakage)</Name>
            <Comment>Some headers leak information about back-end servers and deployed software. By removing these headers, such information is hidden from potential attackers.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>^(?:X-AspNet-Version|X-AspNetMvc-Version|X-Generator|X-Powered-By)$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20004">
            <Name>(default) Remove NTLM header</Name>
            <Comment>Back-ends can advise clients to authenticate using NTLM. By default, these headers are removed, because NTLM passthrough is not supported. When using front-side NTLM in combination with an authentication service, this action must be disabled.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>^WWW-Authenticate$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^NTLM.*</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20005">
            <Name>(default) Remove Negotiate header</Name>
            <Comment>Back-end can advise clients to authenticate using a specific method. By default, these headers are removed. This action must be disabled when using front-side Kerberos in combination with an authentication service.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>^WWW-Authenticate$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^Negotiate.*</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20006">
            <Name>(default) Remove permissive CORS header</Name>
            <Comment>CORS (Cross-Origin Resource Sharing) is a method for enabling cross-origin requests in browsers. If misconfigured, CORS reduces client-side security. This action removes CORS headers that have no restrictions.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>^Access-Control-Allow-Origin$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString>^\h*\*\h*$</PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20007">
            <Name>(default) Add X-Frame-Options header</Name>
            <Comment>If no X-Frame-Options are specified by the back-end, this action advises browser to display a page only in a frame with the same origin as the page itself. This prevents clickjacking attacks.</Comment>
            <ActionType>ADD_MISSING_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>X-Frame-Options</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>SAMEORIGIN</NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20009">
            <Name>(default) Add Strict-Transport-Security (HSTS) header</Name>
            <Comment>HSTS headers advise browsers to use solely secure HTTPS connections towards the back-end. If no HSTS header is specified by the back-end, this actions adds a default HSTS header, requiring HTTPS for all requests.</Comment>
            <ActionType>ADD_MISSING_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>Strict-Transport-Security</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>max-age=16070400</NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20010">
            <Name>(default) Add Content-Security-Policy (CSP) header</Name>
            <Comment>Content Security Policy (CSP) is a technique for preventing Cross-Site-Scripting and similar attacks by restricting the origin of included resources in a website. Defining fine-grained policies requires good knowledge of the application. If no CSP headers are specified by the back-end, this action adds a base protection, allowing inclusion of Javascript and image resources only from the back-end itself.</Comment>
            <ActionType>ADD_MISSING_HEADER</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString>Content-Security-Policy</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>default-src 'self'; img-src *</NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>false</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20011">
            <Name>(default) Add Content-Security-Policy (CSP) header (with prefix &quot;X-&quot;)</Name>
            <Comment>See action &quot;(default) Add Content Security Policy (CSP) header&quot; (variant with an &quot;X-&quot; prefix).</Comment>
            <ActionType>ADD_MISSING_HEADER</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString>X-Content-Security-Policy</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>default-src 'self'; allow 'self'; img-src *</NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>false</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20013">
            <Name>(default) Add XSS-Protection header</Name>
            <Comment>If no corresponding header is present, this actions enables the XSS protection feature of IE 8 browsers (and newer).</Comment>
            <ActionType>ADD_MISSING_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>X-XSS-Protection</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>1; mode=block</NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20014">
            <Name>(default) Add Content-Type-Options header</Name>
            <Comment>If no corresponding header is present, this action disables a browser feature called MIME-type sniffing, which can be harmful.</Comment>
            <ActionType>ADD_MISSING_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>X-Content-Type-Options</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>nosniff</NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20000">
            <Name>(default) Response header whitelist</Name>
            <Comment>All headers not explicitly contained in the whitelist of well-known headers are removed.</Comment>
            <ActionType>REMOVE_HEADER</ActionType>
            <Enabled>false</Enabled>
            <HeaderName>
                <PatternString>^(?:Accept-Ranges|Access-Control-Allow-Credentials|Access-Control-Allow-Headers|Access-Control-Allow-Methods|Access-Control-Allow-Origin|Access-Control-Expose-Headers|Access-Control-Max-Age|Allow|Cache-Control|Content-Disposition|Content-Encoding|Content-Language|Content-Length|Content-Location|Content-MD5|Content-Range|Content-Security-Policy|Content-Type|Date|Etag|Expires|Frame-Options|Last-Modified|Location|Pragma|Proxy-Authenticate|Refresh|Retry-After|Sec-WebSocket-Accept|Sec-WebSocket-Extensions|Sec-WebSocket-Protocol|Sec-WebSocket-Version|Strict-Transport-Security|Trailer|Transfer-Encoding|Vary|WWW-Authenticate|Warning|X-Content-Security-Policy|X-Content-Type-Options|X-Frame-Options|X-Permitted-Cross-Domain-Policies|X-UA-Compatible|X-WAP-Profile-Warning|X-WebKit-CSP|X-XSS-Protection)$</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>true</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue></NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>false</DefaultEnabled>
        </GlobalResponseHeaderAction>
        <GlobalResponseHeaderAction Id="-20019">
            <Name>(default) Add Referrer-Policy header</Name>
            <Comment>If no corresponding header is present, this action prevents information leakage from your web application.</Comment>
            <ActionType>ADD_MISSING_HEADER</ActionType>
            <Enabled>true</Enabled>
            <HeaderName>
                <PatternString>Referrer-Policy</PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderName>
            <HeaderValue>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </HeaderValue>
            <NewValue>same-origin</NewValue>
            <CookieName>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </CookieName>
            <DomainRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>true</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </DomainRewriteFrom>
            <DomainRewriteTo></DomainRewriteTo>
            <PathRewriteFrom>
                <PatternString></PatternString>
                <IgnoreCase>false</IgnoreCase>
                <InvertPattern>false</InvertPattern>
                <AirlockRegexFormat>true</AirlockRegexFormat>
            </PathRewriteFrom>
            <PathRewriteTo></PathRewriteTo>
            <SecureMode>AUTO</SecureMode>
            <HttpOnlyMode>AUTO</HttpOnlyMode>
            <DefaultEnabled>true</DefaultEnabled>
        </GlobalResponseHeaderAction>
    </GlobalResponseHeaderActions>
    <GeoLocationBlocks/>
    <SslVpnChannels/>
    <SslVpnHosts>
        <SslVpnHost Id="3">
            <IpAddress></IpAddress>
            <IpV6Address></IpV6Address>
            <Port>1287</Port>
            <SslCertificateId>-1</SslCertificateId>
            <ExternalLogicalInterfaceName></ExternalLogicalInterfaceName>
            <Enabled>false</Enabled>
            <Comment></Comment>
        </SslVpnHost>
    </SslVpnHosts>
    <OpenApis/>
</ConfigRoot>
